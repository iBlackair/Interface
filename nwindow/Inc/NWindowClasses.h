/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef NWINDOW_API
#define NWINDOW_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern NWINDOW_API FName NWINDOW_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(OnButtonTimer)
AUTOGENERATE_NAME(OnChangeEditBox)
AUTOGENERATE_NAME(OnChatMarkedEditBox)
AUTOGENERATE_NAME(OnClickButton)
AUTOGENERATE_NAME(OnClickButtonWithHandle)
AUTOGENERATE_NAME(OnClickCheckBox)
AUTOGENERATE_NAME(OnClickItem)
AUTOGENERATE_NAME(OnClickListCtrlRecord)
AUTOGENERATE_NAME(OnComboBoxItemSelected)
AUTOGENERATE_NAME(OnCompleteEditBox)
AUTOGENERATE_NAME(OnDBClickItem)
AUTOGENERATE_NAME(OnDBClickItemWithHandle)
AUTOGENERATE_NAME(OnDBClickListBoxItem)
AUTOGENERATE_NAME(OnDBClickListCtrlRecord)
AUTOGENERATE_NAME(OnDefaultPosition)
AUTOGENERATE_NAME(OnDragItemEnd)
AUTOGENERATE_NAME(OnDragItemStart)
AUTOGENERATE_NAME(OnDrawerHideFinished)
AUTOGENERATE_NAME(OnDrawerShowFinished)
AUTOGENERATE_NAME(OnDropItem)
AUTOGENERATE_NAME(OnDropItemSource)
AUTOGENERATE_NAME(OnDropItemWithHandle)
AUTOGENERATE_NAME(OnDropWnd)
AUTOGENERATE_NAME(OnEnterState)
AUTOGENERATE_NAME(OnEvent)
AUTOGENERATE_NAME(OnEventWithParamMap)
AUTOGENERATE_NAME(OnExitState)
AUTOGENERATE_NAME(OnFlashCtrlMsg)
AUTOGENERATE_NAME(OnHide)
AUTOGENERATE_NAME(OnHtmlMsgHideWindow)
AUTOGENERATE_NAME(OnKeyDown)
AUTOGENERATE_NAME(OnKeyUp)
AUTOGENERATE_NAME(OnLButtonDblClick)
AUTOGENERATE_NAME(OnLButtonDown)
AUTOGENERATE_NAME(OnLButtonUp)
AUTOGENERATE_NAME(OnLoad)
AUTOGENERATE_NAME(OnMButtonDown)
AUTOGENERATE_NAME(OnMButtonUp)
AUTOGENERATE_NAME(OnMinimize)
AUTOGENERATE_NAME(OnModifyCurrentTickSliderCtrl)
AUTOGENERATE_NAME(OnMouseMove)
AUTOGENERATE_NAME(OnMouseOut)
AUTOGENERATE_NAME(OnMouseOver)
AUTOGENERATE_NAME(OnProgressTimeUp)
AUTOGENERATE_NAME(OnPropertyControllerResize)
AUTOGENERATE_NAME(OnRButtonClickListBoxItem)
AUTOGENERATE_NAME(OnRButtonDblClick)
AUTOGENERATE_NAME(OnRButtonDown)
AUTOGENERATE_NAME(OnRButtonUp)
AUTOGENERATE_NAME(OnRClickItem)
AUTOGENERATE_NAME(OnRClickItemWithHandle)
AUTOGENERATE_NAME(OnRDBClickItem)
AUTOGENERATE_NAME(OnRegisterEvent)
AUTOGENERATE_NAME(OnSelectItemWithHandle)
AUTOGENERATE_NAME(OnSendPacketWhenHiding)
AUTOGENERATE_NAME(OnShow)
AUTOGENERATE_NAME(OnTabMerge)
AUTOGENERATE_NAME(OnTabSplit)
AUTOGENERATE_NAME(OnTextureAnimEnd)
AUTOGENERATE_NAME(OnTick)
AUTOGENERATE_NAME(OnTimer)

#ifndef NAMES_ONLY

enum EDrawItemType
{
    DIT_BLANK               =0,
    DIT_TEXT                =1,
    DIT_TEXTURE             =2,
    DIT_SPLITLINE           =3,
    DIT_TEXTLINK            =4,
    DIT_MAX                 =5,
};
enum ETooltipSourceType
{
    NTST_TEXT               =0,
    NTST_ITEM               =1,
    NTST_LIST               =2,
    NTST_MAX                =3,
};
enum ECastleSiegeDefenderType
{
    CSDT_NOT_DEFENDER       =0,
    CSDT_CASTLE_OWNER       =1,
    CSDT_WAITING_CONFIRM    =2,
    CSDT_APPROVED           =3,
    CSDT_REJECTED           =4,
    CSDT_MAX                =5,
};
enum ERestartPointType
{
    RPT_VILLAGE             =0,
    RPT_AGIT                =1,
    RPT_CASTLE              =2,
    RPT_FORTRESS            =3,
    RPT_BATTLE_CAMP         =4,
    RPT_ORIGINAL_PLACE      =5,
    RPT_VILLAGE_BY_DISMOUNT =6,
    RPT_MAX                 =7,
};
enum EInventoryUpdateType
{
    IVUT_NONE               =0,
    IVUT_ADD                =1,
    IVUT_UPDATE             =2,
    IVUT_DELETE             =3,
    IVUT_MAX                =4,
};
enum EShortCutItemType
{
    SCIT_NONE               =0,
    SCIT_ITEM               =1,
    SCIT_SKILL              =2,
    SCIT_ACTION             =3,
    SCIT_MACRO              =4,
    SCIT_RECIPE             =5,
    SCIT_BOOKMARK           =6,
    SCIT_MAX                =7,
};
enum EControlReturnType
{
    CRTT_NO_CONTROL_USE     =0,
    CRTT_CONTROL_USE        =1,
    CRTT_USE_AND_HIDE       =2,
    CRTT_MAX                =3,
};
enum EEnvType
{
    ET_NONE                 =0,
    ET_GROUND               =1,
    ET_UNDERWATER           =2,
    ET_AIR                  =3,
    ET_HOVER                =4,
    ET_MAX                  =5,
};
enum EMoveType
{
    MVT_NONE                =0,
    MVT_SLOW                =1,
    MVT_FAST                =2,
    MVT_MAX                 =3,
};
enum ESystemMsgParamType
{
    SMPT_STRING             =0,
    SMPT_NUMBER             =1,
    SMPT_NPCID              =2,
    SMPT_ITEMID             =3,
    SMPT_SKILLID            =4,
    SMPT_CASTLEID           =5,
    SMPT_BIGNUMBER          =6,
    SMPT_ZONENAME           =7,
    SMPT_MAX                =8,
};
enum ESystemMsgType
{
    SYSTEM_NONE             =0,
    SYSTEM_BATTLE           =1,
    SYSTEM_SERVER           =2,
    SYSTEM_DAMAGE           =3,
    SYSTEM_POPUP            =4,
    SYSTEM_ERROR            =5,
    SYSTEM_PETITION         =6,
    SYSTEM_USEITEMS         =7,
    SYSTEM_MAX              =8,
};
enum EChatType
{
    CHAT_NORMAL             =0,
    CHAT_SHOUT              =1,
    CHAT_TELL               =2,
    CHAT_PARTY              =3,
    CHAT_CLAN               =4,
    CHAT_SYSTEM             =5,
    CHAT_USER_PET           =6,
    CHAT_GM_PET             =7,
    CHAT_MARKET             =8,
    CHAT_ALLIANCE           =9,
    CHAT_ANNOUNCE           =10,
    CHAT_CUSTOM             =11,
    CHAT_L2_FRIEND          =12,
    CHAT_MSN_CHAT           =13,
    CHAT_PARTY_ROOM_CHAT    =14,
    CHAT_COMMANDER_CHAT     =15,
    CHAT_INTER_PARTYMASTER_CHAT=16,
    CHAT_HERO               =17,
    CHAT_CRITICAL_ANNOUNCE  =18,
    CHAT_SCREEN_ANNOUNCE    =19,
    CHAT_DOMINIONWAR        =20,
    CHAT_MPCC_ROOM          =21,
    CHAT_NPC_NORMAL         =22,
    CHAT_NPC_SHOUT          =23,
    CHAT_MAX                =24,
};
enum EInterfaceSoundType
{
    IFST_CLICK1             =0,
    IFST_CLICK2             =1,
    IFST_CLICK_FAILED       =2,
    IFST_PICKUP             =3,
    IFST_TRASH_BASKET       =4,
    IFST_WINDOW_OPEN        =5,
    IFST_WINDOW_CLOSE       =6,
    IFST_QUEST_TUTORIAL     =7,
    IFST_MINIMAP_OPEN_CLOSE =8,
    IFST_COOLTIME_END       =9,
    IFST_PETITION           =10,
    IFST_STATUSWND_OPEN     =11,
    IFST_STATUSWND_CLOSE    =12,
    IFST_INVENWND_OPEN      =13,
    IFST_INVENWND_CLOSE     =14,
    IFST_MAPWND_OPEN        =15,
    IFST_MAPWND_CLOSE       =16,
    IFST_SYSTEMWND_OPEN     =17,
    IFST_SYSTEMWND_CLOSE    =18,
    IFST_MAX                =19,
};
enum EServerAgeLimit
{
    SERVER_AGE_LIMIT_15     =0,
    SERVER_AGE_LIMIT_18     =1,
    SERVER_AGE_LIMIT_Free   =2,
    SERVER_MAX              =3,
};
enum EXMLTreeNodeItemType
{
    XTNITEM_BLANK           =0,
    XTNITEM_TEXT            =1,
    XTNITEM_TEXTURE         =2,
    XTNITEM_MAX             =3,
};
enum EActionCategory
{
    ACTION_NONE             =0,
    ACTION_BASIC            =1,
    ACTION_PARTY            =2,
    ACTION_SOCIAL           =3,
    ACTION_PET              =4,
    ACTION_SUMMON           =5,
    ACTION_MAX              =6,
};
enum ESkillCategory
{
    SKILL_Active            =0,
    SKILL_Passive           =1,
    SKILL_MAX               =2,
};
enum EEtcItemType
{
    ITEME_NONE              =0,
    ITEME_SCROLL            =1,
    ITEME_ARROW             =2,
    ITEME_POTION            =3,
    ITEME_SPELLBOOK         =4,
    ITEME_RECIPE            =5,
    ITEME_MATERIAL          =6,
    ITEME_PET_COLLAR        =7,
    ITEME_CASTLE_GUARD      =8,
    ITEME_DYE               =9,
    ITEME_SEED              =10,
    ITEME_SEED2             =11,
    ITEME_HARVEST           =12,
    ITEME_LOTTO             =13,
    ITEME_RACE_TICKET       =14,
    ITEME_TICKET_OF_LORD    =15,
    ITEME_LURE              =16,
    ITEME_CROP              =17,
    ITEME_MATURECROP        =18,
    ITEME_ENCHT_WP          =19,
    ITEME_ENCHT_AM          =20,
    ITEME_BLESS_ENCHT_WP    =21,
    ITEME_BLESS_ENCHT_AM    =22,
    ITEME_COUPON            =23,
    ITEME_ELIXIR            =24,
    ITEME_ENCHT_ATTR        =25,
    ITEME_BOLT              =26,
    ITEME_ENCHT_ATTR_INC_PROP_ENCHT_WP=27,
    ITEME_ENCHT_ATTR_INC_PROP_ENCHT_AM=28,
    ITEME_ENCHT_ATTR_CRYSTAL_ENCHANT_AM=29,
    ITEME_ENCHT_ATTR_CRYSTAL_ENCHANT_WP=30,
    ITEME_ENCHT_ATTR_ANCIENT_CRYSTAL_ENCHANT_AM=31,
    ITEME_ENCHT_ATTR_ANCIENT_CRYSTAL_ENCHANT_WP=32,
    ITEME_ENCHT_ATTR_RUNE   =33,
    ITEME_ENCHT_ATTRT_RUNE_SELECT=34,
    ITEME_TELEPORTBOOKMARK  =35,
    ITEME_MAX               =36,
};
enum EItemParamType
{
    ITEMP_WEAPON            =0,
    ITEMP_ARMOR             =1,
    ITEMP_SHIELD            =2,
    ITEMP_ACCESSARY         =3,
    ITEMP_ETC               =4,
    ITEMP_MAX               =5,
};
enum EItemType
{
    ITEM_WEAPON             =0,
    ITEM_ARMOR              =1,
    ITEM_ACCESSARY          =2,
    ITEM_QUESTITEM          =3,
    ITEM_ASSET              =4,
    ITEM_ETCITEM            =5,
    ITEM_MAX                =6,
};
enum ENameCtrlType
{
    NCT_Normal              =0,
    NCT_Item                =1,
    NCT_MAX                 =2,
};
enum ETextureLayer
{
    TL_None                 =0,
    TL_Normal               =1,
    TL_Background           =2,
    TL_MAX                  =3,
};
enum ETextureCtrlType
{
    TCT_Stretch             =0,
    TCT_Normal              =1,
    TCT_Tile                =2,
    TCT_Draggable           =3,
    TCT_Control             =4,
    TCT_Mask                =5,
    TCT_MAX                 =6,
};
enum ETextVAlign
{
    TVA_Undefined           =0,
    TVA_Top                 =1,
    TVA_Middle              =2,
    TVA_Bottom              =3,
    TVA_MAX                 =4,
};
enum ETextAlign
{
    TA_Undefined            =0,
    TA_Left                 =1,
    TA_Center               =2,
    TA_Right                =3,
    TA_MacroIcon            =4,
    TA_MAX                  =5,
};
enum EEventMatchObsMsgType
{
    MESSAGE_GM              =0,
    MESSAGE_Finish          =1,
    MESSAGE_Start           =2,
    MESSAGE_GameOver        =3,
    MESSAGE_1               =4,
    MESSAGE_2               =5,
    MESSAGE_3               =6,
    MESSAGE_4               =7,
    MESSAGE_5               =8,
    MESSAGE_MAX             =9,
};
enum EItemWindowType
{
    ITEMWNDTYPE_ScrollType  =0,
    ITEMWNDTYPE_SideButtonType=1,
    ITEMWNDTYPE_UpDownButtonType=2,
    ITEMWNDTYPE_MAX         =3,
};
enum ETextureAutoRotateType
{
    ETART_None              =0,
    ETART_Camera            =1,
    ETART_Pawn              =2,
    ETART_MAX               =3,
};
enum EProgressBarType
{
    PBT_None                =0,
    PBT_RightLeft           =1,
    PBT_LeftRight           =2,
    PBT_TopBottom           =3,
    PBT_BottomTop           =4,
    PBT_MAX                 =5,
};
enum EControlOrderWay
{
    COW_None                =0,
    COW_Top                 =1,
    COW_Up                  =2,
    COW_Down                =3,
    COW_Bottom              =4,
    COW_MAX                 =5,
};
enum ETextLinkType
{
    TLT_None                =0,
    TLT_ServerItem          =1,
    TLT_LocalItem           =2,
    TLT_User                =3,
    TLT_SKill               =4,
    TLT_URL                 =5,
    TLT_MAX                 =6,
};
enum EControlPropertyRestrictionType
{
    CPRT_None               =0,
    CPRT_Integer            =1,
    CPRT_String             =2,
    CPRT_MAX                =3,
};
enum EControlPropertyItemType
{
    CPIT_None               =0,
    CPIT_Boolean            =1,
    CPIT_Integer            =2,
    CPIT_String             =3,
    CPIT_MAX                =4,
};
enum EControlPropertyGroupType
{
    CPGT_None               =0,
    CPGT_Single             =1,
    CPGT_SingleRequired     =2,
    CPGT_Multiple           =3,
    CPGT_MultipleRequired   =4,
    CPGT_Choice             =5,
    CPGT_MAX                =6,
};
enum ETrackerAlignType
{
    TAT_Left                =0,
    TAT_Center              =1,
    TAT_Right               =2,
    TAT_Width               =3,
    TAT_Height              =4,
    TAT_MAX                 =5,
};
enum EXMLControlType
{
    XCT_None                =0,
    XCT_FrameWnd            =1,
    XCT_Button              =2,
    XCT_TextBox             =3,
    XCT_EditBox             =4,
    XCT_TextureCtrl         =5,
    XCT_ChatListBox         =6,
    XCT_TabControl          =7,
    XCT_ItemWnd             =8,
    XCT_CheckBox            =9,
    XCT_ComboBox            =10,
    XCT_ProgressCtrl        =11,
    XCT_MultiEdit           =12,
    XCT_ListCtrl            =13,
    XCT_ListBox             =14,
    XCT_StatusBarCtrl       =15,
    XCT_NameCtrl            =16,
    XCT_MinimapWnd          =17,
    XCT_ShortcutItemWnd     =18,
    XCT_XMLTreeCtrl         =19,
    XCT_SliderCtrl          =20,
    XCT_EffectButton        =21,
    XCT_TextListBox         =22,
    XCT_RadarWnd            =23,
    XCT_HtmlViewer          =24,
    XCT_RadioButton         =25,
    XCT_InvenWeightWnd      =26,
    XCT_StatusIconCtrl      =27,
    XCT_BarCtrl             =28,
    XCT_ScrollWnd           =29,
    XCT_FishViewportWnd     =30,
    XCT_VIPShopItemInfoWnd  =31,
    XCT_VIPShopNeededItemWnd=32,
    XCT_DrawPanel           =33,
    XCT_RadarMapCtrl        =34,
    XCT_PropertyController  =35,
    XCT_FlashCtrl           =36,
    XCT_CharacterViewportWnd=37,
    XCT_SceneCameraCtrl     =38,
    XCT_SceneNpcCtrl        =39,
    XCT_ScenePcCtrl         =40,
    XCT_SceneScreenCtrl     =41,
    XCT_SceneMusicCtrl      =42,
    XCT_MAX                 =43,
};
enum EIMEType
{
    IME_NONE                =0,
    IME_KOR                 =1,
    IME_ENG                 =2,
    IME_JPN                 =3,
    IME_CHN                 =4,
    IME_TAIWAN_CHANGJIE     =5,
    IME_TAIWAN_DAYI         =6,
    IME_TAIWAN_NEWPHONETIC  =7,
    IME_TAIWAN_BOSHAMY      =8,
    IME_CHN_MS              =9,
    IME_CHN_JB              =10,
    IME_CHN_ABC             =11,
    IME_CHN_WUBI            =12,
    IME_CHN_WUBI2           =13,
    IME_THAI                =14,
    IME_RUSSIA              =15,
    IME_RUSSIAN             =16,
    IME_MAX                 =17,
};
enum ELanguageType
{
    LANG_None               =0,
    LANG_Korean             =1,
    LANG_English            =2,
    LANG_Japanese           =3,
    LANG_Taiwan             =4,
    LANG_Chinese            =5,
    LANG_Thai               =6,
    LANG_Philippine         =7,
    LANG_Indonesia          =8,
    LANG_Russia             =9,
    LANG_Russian            =10,
    LANG_MAX                =11,
};
enum EGMCommandType
{
    GMCOMMAND_None          =0,
    GMCOMMAND_StatusInfo    =1,
    GMCOMMAND_ClanInfo      =2,
    GMCOMMAND_SkillInfo     =3,
    GMCOMMAND_QuestInfo     =4,
    GMCOMMAND_InventoryInfo =5,
    GMCOMMAND_WarehouseInfo =6,
    GMCOMMAND_MAX           =7,
};
struct NWINDOW_API FItemID
{
    INT ClassID;
    INT ServerID;
};

struct NWINDOW_API FItemInfo
{
    FItemID Id;
    FStringNoInit Name;
    FStringNoInit AdditionalName;
    FStringNoInit IconName;
    FStringNoInit IconNameEx1;
    FStringNoInit IconNameEx2;
    FStringNoInit IconNameEx3;
    FStringNoInit IconNameEx4;
    FStringNoInit ForeTexture;
    FStringNoInit Description;
    FStringNoInit DragSrcName;
    FStringNoInit IconPanel;
    INT DragSrcReserved;
    FStringNoInit MacroCommand;
    INT ItemType;
    INT ItemSubType;
    FINT64 ItemNum;
    FINT64 Price;
    INT Level;
    INT SlotBitType;
    INT Weight;
    INT MaterialType;
    INT WeaponType;
    INT PhysicalDamage;
    INT MagicalDamage;
    INT PhysicalDefense;
    INT MagicalDefense;
    INT ShieldDefense;
    INT ShieldDefenseRate;
    INT Durability;
    INT CrystalType;
    INT RandomDamage;
    INT Critical;
    INT HitModify;
    INT AttackSpeed;
    INT MpConsume;
    INT ArmorType;
    INT AvoidModify;
    INT Damaged;
    INT Enchanted;
    INT MpBonus;
    INT SoulshotCount;
    INT SpiritshotCount;
    INT PopMsgNum;
    INT BodyPart;
    INT RefineryOp1;
    INT RefineryOp2;
    INT CurrentDurability;
    INT CurrentPeriod;
    INT EnchantOption1;
    INT EnchantOption2;
    INT EnchantOption3;
    INT Reserved;
    FINT64 Reserved64;
    FINT64 DefaultPrice;
    INT ConsumeType;
    INT Blessed;
    FINT64 AllItemCount;
    INT IconIndex;
    BITFIELD bEquipped:1 GCC_PACK(4);
    BITFIELD bRecipe:1;
    BITFIELD bArrow:1;
    BITFIELD bShowCount:1;
    BITFIELD bDisabled:1;
    BITFIELD bIsLock:1;
    INT AttackAttributeType GCC_PACK(4);
    INT AttackAttributeValue;
    INT DefenseAttributeValueFire;
    INT DefenseAttributeValueWater;
    INT DefenseAttributeValueWind;
    INT DefenseAttributeValueEarth;
    INT DefenseAttributeValueHoly;
    INT DefenseAttributeValueUnholy;
    INT RelatedQuestID[10];
    INT IsBRPremium;
    INT IncludeItem[10];
    INT BR_CurrentEnergy;
    INT BR_MaxEnergy;
    INT ORDER;
};

struct NWINDOW_API FLVTexture
{
    class UTexture* objTex;
    INT X;
    INT Y;
    INT Width;
    INT Height;
    INT U;
    INT V;
    INT UL;
    INT VL;
};

struct NWINDOW_API FLVData
{
    BITFIELD hasIcon:1 GCC_PACK(4);
    INT nsortPrior GCC_PACK(4);
    FStringNoInit szData;
    FStringNoInit szReserved;
    BITFIELD bUseTextColor:1 GCC_PACK(4);
    FColor TextColor GCC_PACK(4);
    INT nReserved1;
    INT nReserved2;
    INT nReserved3;
    FStringNoInit szTexture;
    INT nTextureWidth;
    INT nTextureHeight;
    TArrayNoInit<FLVTexture> arrTexture;
};

struct NWINDOW_API FLVDataRecord
{
    TArrayNoInit<FLVData> LVDataList;
    FStringNoInit szReserved;
    FINT64 nReserved1;
    FINT64 nReserved2;
    FINT64 nReserved3;
};

struct NWINDOW_API FUserInfo
{
    INT nID;
    FStringNoInit Name;
    FStringNoInit strNickName;
    FStringNoInit RealName;
    INT nSex;
    INT Class;
    INT nLevel;
    INT nClassID;
    INT nSubClass;
    INT nSP;
    INT nCurHP;
    INT nMaxHP;
    INT nCurMP;
    INT nMaxMP;
    INT nCurCP;
    INT nMaxCP;
    FINT64 nCurExp;
    INT nUserRank;
    INT nClanID;
    INT nAllianceID;
    INT nCarryWeight;
    INT nCarringWeight;
    INT nPhysicalAttack;
    INT nPhysicalDefense;
    INT nHitRate;
    INT nCriticalRate;
    INT nPhysicalAttackSpeed;
    INT nMagicalAttack;
    INT nMagicDefense;
    INT nPhysicalAvoid;
    INT nWaterMaxSpeed;
    INT nWaterMinSpeed;
    INT nAirMaxSpeed;
    INT nAirMinSpeed;
    INT nGroundMaxSpeed;
    INT nGroundMinSpeed;
    FLOAT fNonAttackSpeedModifier;
    INT nMagicCastingSpeed;
    INT nStr;
    INT nDex;
    INT nCon;
    INT nInt;
    INT nWit;
    INT nMen;
    INT nCriminalRate;
    INT nDualCount;
    INT nPKCount;
    INT nSociality;
    INT nRemainSulffrage;
    BITFIELD bHero:1 GCC_PACK(4);
    BITFIELD bNobless:1;
    BITFIELD bNpc:1;
    BITFIELD bPet:1;
    BITFIELD bCanBeAttacked:1;
    FVector loc GCC_PACK(4);
    INT AttrAttackType;
    INT AttrAttackValue;
    INT AttrDefenseValFire;
    INT AttrDefenseValWater;
    INT AttrDefenseValWind;
    INT AttrDefenseValEarth;
    INT AttrDefenseValHoly;
    INT AttrDefenseValUnholy;
    INT nTransformID;
    BITFIELD m_bPawnChanged:1 GCC_PACK(4);
    INT nInvenLimit GCC_PACK(4);
    INT PvPPointRestrain;
    INT PvPPoint;
    FColor NicknameColor;
    INT nVitality;
    INT nMasterID;
    INT nTalismanNum;
    INT nFullArmor;
    INT JoinedDominionID;
    BITFIELD WantHideName:1 GCC_PACK(4);
    INT DominionIDForVirtualName GCC_PACK(4);
    FLOAT fExpPercentRate;
};

struct NWINDOW_API FSkillInfo
{
    FStringNoInit SkillName;
    FStringNoInit SkillDesc;
    INT SkillID;
    INT SkillLevel;
    INT OperateType;
    INT MpConsume;
    INT HpConsume;
    INT CastRange;
    INT CastStyle;
    FLOAT HitTime;
    BITFIELD IsUsed:1 GCC_PACK(4);
    INT IsMagic GCC_PACK(4);
    FStringNoInit AnimName;
    FStringNoInit SkillPresetName;
    FStringNoInit TexName;
    FStringNoInit IconPanel;
    INT IconType;
    BITFIELD IsDebuff:1 GCC_PACK(4);
    FStringNoInit EnchantName GCC_PACK(4);
    FStringNoInit EnchantDesc;
    INT Enchanted;
    INT EnchantSkillLevel;
    FStringNoInit EnchantIcon;
    INT RumbleSelf;
    INT RumbleTarget;
};

struct NWINDOW_API FPetInfo
{
    INT nID;
    FStringNoInit Name;
    INT nLevel;
    INT nSP;
    INT nCurHP;
    INT nMaxHP;
    INT nCurMP;
    INT nMaxMP;
    FINT64 nCurExp;
    FINT64 nMaxExp;
    FINT64 nMinExp;
    INT nCarryWeight;
    INT nCarringWeight;
    INT nPhysicalAttack;
    INT nPhysicalDefense;
    INT nHitRate;
    INT nCriticalRate;
    INT nPhysicalAttackSpeed;
    INT nMagicalAttack;
    INT nMagicDefense;
    INT nPhysicalAvoid;
    INT nMovingSpeed;
    INT nMagicCastingSpeed;
    INT nSoulShotCosume;
    INT nSpiritShotConsume;
    INT nFatigue;
    INT nMaxFatigue;
    BITFIELD bIsPetOrSummoned:1 GCC_PACK(4);
    INT nEvolutionID GCC_PACK(4);
};

struct NWINDOW_API FMacroInfo
{
    INT Id;
    FStringNoInit Name;
    FStringNoInit IconName;
    FStringNoInit IconTextureName;
    FStringNoInit Description;
    FStringNoInit CommandList[12];
};

struct NWINDOW_API FRect
{
    INT nX;
    INT nY;
    INT nWidth;
    INT nHeight;
};

struct NWINDOW_API FClanMemberInfo
{
    INT clanType;
    FStringNoInit sName;
    INT Level;
    INT ClassID;
    INT gender;
    INT Race;
    INT Id;
    INT bHaveMaster;
};

struct NWINDOW_API FClanInfo
{
    TArrayNoInit<FClanMemberInfo> m_array;
    FStringNoInit m_sName;
    FStringNoInit m_sMasterName;
};

struct NWINDOW_API FResolutionInfo
{
    INT nWidth;
    INT nHeight;
    INT nColorBit;
};

struct NWINDOW_API FFileNameInfo
{
    FStringNoInit Filename;
    BITFIELD bIsFile:1 GCC_PACK(4);
};

struct NWINDOW_API FDriveInfo
{
    FStringNoInit driveChar;
};

struct NWINDOW_API FDrawItemInfo
{
    BYTE eType;
    INT nOffSetX;
    INT nOffSetY;
    BITFIELD bLineBreak:1 GCC_PACK(4);
    INT b_nHeight GCC_PACK(4);
    INT t_ID;
    FStringNoInit t_strText;
    FColor t_color;
    BITFIELD t_bDrawOneLine:1 GCC_PACK(4);
    INT t_MaxWidth GCC_PACK(4);
    INT u_nTextureWidth;
    INT u_nTextureHeight;
    INT u_nTextureUWidth;
    INT u_nTextureUHeight;
    FStringNoInit u_strTexture;
    FStringNoInit Condition;
};

struct NWINDOW_API FCustomTooltip
{
    INT MinimumWidth;
    INT SimpleLineCount;
    TArrayNoInit<FDrawItemInfo> DrawList;
};

struct NWINDOW_API FXMLTreeNodeItemInfo
{
    BYTE eType;
    INT nOffSetX;
    INT nOffSetY;
    BITFIELD bLineBreak:1 GCC_PACK(4);
    BITFIELD bStopMouseFocus:1;
    INT b_nHeight GCC_PACK(4);
    INT t_nTextID;
    FStringNoInit t_strText;
    FColor t_color;
    BITFIELD t_bDrawOneLine:1 GCC_PACK(4);
    BYTE t_vAlign GCC_PACK(4);
    INT t_nMaxHeight;
    INT t_nMaxWidth;
    INT u_nTextureWidth;
    INT u_nTextureHeight;
    INT u_nTextureUWidth;
    INT u_nTextureUHeight;
    FStringNoInit u_strTexture;
    FStringNoInit u_strTextureMouseOn;
    FStringNoInit u_strTextureExpanded;
    INT nReserved;
    INT nReserved2;
};

struct NWINDOW_API FXMLTreeNodeInfo
{
    FStringNoInit strName;
    INT nOffSetX;
    INT nOffSetY;
    INT bDrawBackground;
    INT bTexBackHighlight;
    INT nTexBackHighlightHeight;
    INT nTexBackWidth;
    INT nTexBackUWidth;
    INT nTexBackOffSetX;
    INT nTexBackOffSetY;
    INT nTexBackOffSetBottom;
    FStringNoInit strTexExpandedLeft;
    FStringNoInit strTexExpandedRight;
    INT nTexExpandedOffSetX;
    INT nTexExpandedOffSetY;
    INT nTexExpandedHeight;
    INT nTexExpandedRightWidth;
    INT nTexExpandedLeftUWidth;
    INT nTexExpandedLeftUHeight;
    INT nTexExpandedRightUWidth;
    INT nTexExpandedRightUHeight;
    INT bShowButton;
    INT nTexBtnWidth;
    INT nTexBtnHeight;
    INT nTexBtnOffSetX;
    INT nTexBtnOffSetY;
    FStringNoInit strTexBtnExpand;
    FStringNoInit strTexBtnCollapse;
    FStringNoInit strTexBtnExpand_Over;
    FStringNoInit strTexBtnCollapse_Over;
    FCustomTooltip ToolTip;
    BITFIELD bFollowCursor:1 GCC_PACK(4);
};

struct NWINDOW_API FStatusIconInfo
{
    INT ServerID;
    FStringNoInit Name;
    FStringNoInit IconName;
    INT Size;
    FStringNoInit Description;
    FStringNoInit BackTex;
    INT RemainTime;
    FItemID Id;
    INT Level;
    BITFIELD bShow:1 GCC_PACK(4);
    BITFIELD bShortItem:1;
    BITFIELD bEtcItem:1;
    BITFIELD bDeBuff:1;
};

struct NWINDOW_API FGameTipData
{
    INT Id;
    INT Priority;
    INT TargetLevel;
    BITFIELD Validity:1 GCC_PACK(4);
    FStringNoInit TipMsg GCC_PACK(4);
};

struct NWINDOW_API FHennaInfo
{
    INT HennaID;
    INT ClassID;
    INT Num;
    INT Fee;
    INT CanUse;
    INT INTnow;
    INT INTchange;
    INT STRnow;
    INT STRchange;
    INT CONnow;
    INT CONchange;
    INT MENnow;
    INT MENchange;
    INT DEXnow;
    INT DEXchange;
    INT WITnow;
    INT WITchange;
};

struct NWINDOW_API FEventMatchUserData
{
    INT UserID;
    FStringNoInit Username;
    INT HPNow;
    INT HPMax;
    INT MPNow;
    INT MPMax;
    INT CPNow;
    INT CPMax;
    INT UserLv;
    INT UserClass;
    INT UserGender;
    INT UserRace;
    TArrayNoInit<INT> BuffIDList;
    TArrayNoInit<INT> BuffRemainList;
};

struct NWINDOW_API FSystemMsgData
{
    FStringNoInit Group;
    FColor FontColor;
    FStringNoInit Sound;
    FStringNoInit Voice;
    INT WindowType;
    INT FontType;
    INT Lifetime;
    INT AnimationType;
    INT BackgroundType;
    FStringNoInit SysMsg;
    FStringNoInit OnScrMsg;
};

struct NWINDOW_API FEventMatchTeamData
{
    INT Score;
    FStringNoInit TeamName;
    INT PartyMemberCount;
    FEventMatchUserData User[9];
};

struct NWINDOW_API FShortcutCommandItem
{
    FStringNoInit sCommand;
    FStringNoInit Key;
    FStringNoInit subkey1;
    FStringNoInit subkey2;
    FStringNoInit sState;
    FStringNoInit sCategory;
    FStringNoInit sAction;
    INT Id;
};

struct NWINDOW_API FShortcutScriptData
{
    INT Id;
    FStringNoInit sCommand;
    INT sysString;
    INT SysMsg;
};

struct NWINDOW_API FEventMatchData
{
    FEventMatchTeamData Team[2];
};

struct NWINDOW_API FRequestItem
{
    INT Id;
    FINT64 amount;
};

#define UCONST_MAX_INCLUDE_ITEM 10
#define UCONST_MAX_RELATED_QUEST 10
#define UCONST_CLAN_AUTH_GRADE9 9
#define UCONST_CLAN_AUTH_GRADE8 8
#define UCONST_CLAN_AUTH_GRADE7 7
#define UCONST_CLAN_AUTH_GRADE6 6
#define UCONST_CLAN_AUTH_GRADE5 5
#define UCONST_CLAN_AUTH_GRADE4 4
#define UCONST_CLAN_AUTH_GRADE3 3
#define UCONST_CLAN_AUTH_GRADE2 2
#define UCONST_CLAN_AUTH_GRADE1 1
#define UCONST_CLAN_KNIGHTHOOD_COUNT 8
#define UCONST_CLAN_ACADEMY -1
#define UCONST_CLAN_KNIGHT6 2002
#define UCONST_CLAN_KNIGHT5 2001
#define UCONST_CLAN_KNIGHT4 1002
#define UCONST_CLAN_KNIGHT3 1001
#define UCONST_CLAN_KNIGHT2 200
#define UCONST_CLAN_KNIGHT1 100
#define UCONST_CLAN_MAIN 0
#define UCONST_CLAN_AUTH_EDIT 2
#define UCONST_CLAN_AUTH_VIEW 1
#define UCONST_ESTT_SILEN_ELDER_SHARING 9
#define UCONST_ESTT_ELDER_SHARING 8
#define UCONST_ESTT_BISHOP_SHARING 7
#define UCONST_ESTT_COLLECT 6
#define UCONST_ESTT_SUBJOB 5
#define UCONST_ESTT_TRANSFORM 4
#define UCONST_ESTT_SUB_CLAN 3
#define UCONST_ESTT_CLAN 2
#define UCONST_ESTT_FISHING 1
#define UCONST_ESTT_NORMAL 0
#define UCONST_RPT_NPC 22
#define UCONST_RPT_AGATHION 21
#define UCONST_RPT_BRANCH_START 20
#define UCONST_EV_SecondaryAuthFailEtc 5146
#define UCONST_EV_SecondaryAuthVerifyFail 5145
#define UCONST_EV_SecondaryAuthCreateFail 5144
#define UCONST_EV_SecondaryAuthSuccess 5143
#define UCONST_EV_SecondaryAuthBlocked 5142
#define UCONST_EV_SecondaryAuthVerify 5141
#define UCONST_EV_SecondaryAuthCreate 5140
#define UCONST_EV_GoodsInventoryResult 5135
#define UCONST_EV_GoodsInventoryError 5134
#define UCONST_EV_GoodsInventoryNoti 5133
#define UCONST_EV_GoodsInventoryItemDesc 5132
#define UCONST_EV_GoodsInventoryItemList 5131
#define UCONST_EV_ShowGoodsInventoryWnd 5130
#define UCONST_EV_BR_RestartByNPCButtonEnable 9150
#define UCONST_EV_BR_Die_EnableNPC 9140
#define UCONST_EV_BR_EventValentineShow 9130
#define UCONST_EV_BR_MinigameAllRanking 9121
#define UCONST_EV_BR_MinigameMyRanking 9120
#define UCONST_EV_BR_EventCommonHtml3 9113
#define UCONST_EV_BR_EventCommonHtml2 9112
#define UCONST_EV_BR_EventCommonHtml1 9111
#define UCONST_EV_BR_EventChristmasShow 9110
#define UCONST_EV_BR_EventRankerLastList 9103
#define UCONST_EV_BR_EventRankerNowList 9102
#define UCONST_EV_BR_EventHalloweenShow 9101
#define UCONST_EV_BR_EventHalloweenHelp 9100
#define UCONST_EV_BR_FireEventTimeInfo 9091
#define UCONST_EV_BR_FireEventStateInfo 9090
#define UCONST_EV_BR_PREMIUM_STATE 9080
#define UCONST_EV_BR_HIDE_CONFIRM 9071
#define UCONST_EV_BR_SHOW_CONFIRM 9070
#define UCONST_EV_BR_RESULT_BUY_PRODUCT 9060
#define UCONST_EV_BR_SETGAMEPOINT 9050
#define UCONST_EV_BR_AddEachProductInfo 9040
#define UCONST_EV_BR_SetNewProductInfo 9030
#define UCONST_EV_BR_SetRecentProduct 9025
#define UCONST_EV_BR_ProductListEnd 9022
#define UCONST_EV_BR_SetNewList 9021
#define UCONST_EV_BR_CashShopAddItem 9020
#define UCONST_EV_BR_CashShopToggleWindow 9010
#define UCONST_EV_NavitAdventTimeChange 5120
#define UCONST_EV_NavitAdventEffect 5110
#define UCONST_EV_NavitAdventPointInfo 5100
#define UCONST_EV_UnSetEnterChatting 5091
#define UCONST_EV_SetEnterChatting 5090
#define UCONST_EV_SkillCancel 5060
#define UCONST_EV_HDRRenderTestWndShow 5050
#define UCONST_EV_ListCtrlLoseSelected 5040
#define UCONST_EV_EnterOlympiadObserverMode 5030
#define UCONST_EV_ReplayRecEnded 5021
#define UCONST_EV_ReplayRecStarted 5020
#define UCONST_EV_ShowWeatherWnd 5010
#define UCONST_EV_ReceivePledgeMemberList 5000
#define UCONST_EV_ReceivePostFriendList 4990
#define UCONST_EV_ConfirmAddingPostFriend 4980
#define UCONST_EV_ReceiveFriendList 4970
#define UCONST_EV_UrlLinkClick 4960
#define UCONST_EV_PostEffectShow 4950
#define UCONST_EV_ShowNewVoteSystemHelp 4941
#define UCONST_EV_ReceiveNewVoteSystemInfo 4940
#define UCONST_EV_ExpandQuestAlarmKillMonster 4930
#define UCONST_EV_CommandAddAllianceCrestFile 4920
#define UCONST_EV_RecvPartyMaster 4919
#define UCONST_EV_HandOverPartyMaster 4918
#define UCONST_EV_WithdrawParty 4917
#define UCONST_EV_OustPartyMember 4916
#define UCONST_EV_BecamePartyMaster 4915
#define UCONST_EV_BecamePartyMember 4914
#define UCONST_EV_PartyHasDismissed 4913
#define UCONST_EV_MembershipType 4912
#define UCONST_EV_PartyLootingHasModified 4911
#define UCONST_EV_AskPartyLootingModify 4910
#define UCONST_EV_ShowAskCoupleActionDialog 4900
#define UCONST_EV_EffectViewerShow 4881
#define UCONST_EV_EffectViewerAddEffect 4880
#define UCONST_EV_UsePartyMatchAction 4870
#define UCONST_EV_AddPrivateMarketList 4861
#define UCONST_EV_ShowPrivateMarketList 4860
#define UCONST_EV_ShowNewUserPetitionHtml 4850
#define UCONST_EV_ShowNewUserPetitionContents 4840
#define UCONST_EV_AddNewUserPetitionCategoryStepTwo 4830
#define UCONST_EV_ShowNewUserPetitionDescription 4820
#define UCONST_EV_AddNewUserPetitionCategoryStepOne 4810
#define UCONST_EV_ShowNewUserPetitionWnd 4800
#define UCONST_EV_ReplyWritePost 4799
#define UCONST_EV_ReceivedStateSentPost 4798
#define UCONST_EV_OpenStateSentPost 4797
#define UCONST_EV_DeleteSentPost 4796
#define UCONST_EV_ReceivedStateReceivedPost 4795
#define UCONST_EV_OpenStateReceivedPost 4794
#define UCONST_EV_DeleteReceivedPost 4793
#define UCONST_EV_PostWriteEnd 4792
#define UCONST_EV_PostWriteAddItem 4791
#define UCONST_EV_PostWriteOpen 4790
#define UCONST_EV_ReplySentPostEnd 4782
#define UCONST_EV_ReplySentPostAddItem 4781
#define UCONST_EV_ReplySentPostStart 4780
#define UCONST_EV_EndSentPostList 4770
#define UCONST_EV_AddSentPostList 4760
#define UCONST_EV_StartSentPostList 4750
#define UCONST_EV_ReplyReceivedPostEnd 4742
#define UCONST_EV_ReplyReceivedPostAddItem 4741
#define UCONST_EV_ReplyReceivedPostStart 4740
#define UCONST_EV_EndReceivedPostList 4730
#define UCONST_EV_AddReceivedPostList 4720
#define UCONST_EV_StartReceivedPostList 4710
#define UCONST_EV_Notice_Post_Arrived 4700
#define UCONST_EV_SkillEnchantResult 4600
#define UCONST_EV_SlideShow 4550
#define UCONST_EV_CurSceneIndexInit 4540
#define UCONST_EV_UpdateSceneTreeData 4530
#define UCONST_EV_SceneDataSave 4520
#define UCONST_EV_SceneDataUpdate 4510
#define UCONST_EV_SceneListUpdate 4500
#define UCONST_EV_MSViewerWndShow 4410
#define UCONST_EV_MSViewerWndAddSkill 4400
#define UCONST_EV_PawnViewerWndAddAnimName 4360
#define UCONST_EV_PawnViewerWndClearAnimList 4350
#define UCONST_EV_PawnViewerWndUpdateHairAccCoord 4340
#define UCONST_EV_PawnViewerWndAddFaceTextureName 4330
#define UCONST_EV_PawnViewerWndAddHairMeshName 4320
#define UCONST_EV_PawnViewerWndAddItem 4300
#define UCONST_EV_ShowSeedMapInfo 4200
#define UCONST_EV_VitalityPointInfo 4100
#define UCONST_EV_MpccPartyMasterList 4080
#define UCONST_EV_MpccRoomChatMessage 4070
#define UCONST_EV_MpccRoomMemberInfo 4060
#define UCONST_EV_MpccRoomMemberStart 4050
#define UCONST_EV_ManageMpccRoomMember 4040
#define UCONST_EV_DismissMpccRoom 4030
#define UCONST_EV_ListMpccWaitingRoomInfo 4020
#define UCONST_EV_ListMpccWaitingStart 4010
#define UCONST_EV_MpccRoomInfo 4000
#define UCONST_EV_BlockStateResult 3910
#define UCONST_EV_BlockStatePlayer 3900
#define UCONST_EV_BlockStateTeam 3890
#define UCONST_EV_BlockListTimeUpset 3880
#define UCONST_EV_BlockListVote 3870
#define UCONST_EV_BlockListClose 3860
#define UCONST_EV_BlockListRemove 3850
#define UCONST_EV_BlockListAdd 3840
#define UCONST_EV_BlockListStart 3830
#define UCONST_EV_BlockRemainTime 3820
#define UCONST_EV_ChangeCharacterPawn 3810
#define UCONST_EV_ReserveShortCut 3801
#define UCONST_EV_FlightTransform 3800
#define UCONST_EV_CleftStateResult 3760
#define UCONST_EV_CleftStatePlayer 3750
#define UCONST_EV_CleftStateTeam 3740
#define UCONST_EV_CleftListClose 3730
#define UCONST_EV_CleftListRemove 3720
#define UCONST_EV_CleftListAdd 3710
#define UCONST_EV_CleftListStart 3700
#define UCONST_EV_CleftListInfo 3690
#define UCONST_EV_DominionWarEnd 3640
#define UCONST_EV_DominionWarStart 3630
#define UCONST_EV_DominionWarChannelSet 3620
#define UCONST_EV_DominionsOwnPos 3610
#define UCONST_EV_DominionInfo 3600
#define UCONST_EV_DominionInfoCnt 3590
#define UCONST_EV_ResultJoinDominionWar 3580
#define UCONST_EV_ShowDominionWarJoinListEnd 3572
#define UCONST_EV_ShowDominionWarJoinListEnemyDominionInfo 3571
#define UCONST_EV_ShowDominionWarJoinListStart 3570
#define UCONST_EV_BirthdayItemAlarm 3560
#define UCONST_EV_AITimer 3550
#define UCONST_EV_AirShipTeleportList 3543
#define UCONST_EV_AirShipTeleportListStart 3542
#define UCONST_EV_AirShipAltitude 3541
#define UCONST_EV_AirShipState 3540
#define UCONST_EV_AirShipUpdate 3530
#define UCONST_EV_ShowMiniGame1 3520
#define UCONST_EV_ResetDevice 3510
#define UCONST_EV_CrataeCubeRecordRetire 3501
#define UCONST_EV_CrataeCubeRecordMyItem 3500
#define UCONST_EV_CrataeCubeRecordEnd 3490
#define UCONST_EV_CrataeCubeRecordItem 3480
#define UCONST_EV_CrataeCubeRecordBegin 3470
#define UCONST_EV_PremiumItemList 3461
#define UCONST_EV_PremiumItemAlarm 3460
#define UCONST_EV_BookMarkShow 3451
#define UCONST_EV_BookMarkList 3450
#define UCONST_EV_ShowChangeNicknameNColor 3440
#define UCONST_EV_AirStateOff 3430
#define UCONST_EV_AirStateOn 3420
#define UCONST_EV_StateChanged 3410
#define UCONST_EV_ToggleDetailStatusWnd 3400
#define UCONST_EV_PVPMatchUserDie 3390
#define UCONST_EV_PVPMatchRecordEachUserInfo 3380
#define UCONST_EV_PVPMatchRecord 3370
#define UCONST_EV_FinishRotate 3360
#define UCONST_EV_OpenDialogRestart 3350
#define UCONST_EV_OpenDialogQuit 3340
#define UCONST_EV_ToggleXMasSealWndShowHide 3330
#define UCONST_EV_QuestHtmlWndHide 3324
#define UCONST_EV_QuestHtmlWndShow 3323
#define UCONST_EV_QuestHtmlWndLoadHtmlFromString 3322
#define UCONST_EV_QuestIDWndLoadHtmlFromString 3321
#define UCONST_EV_ItemDescWndSetWindowTitle 3320
#define UCONST_EV_ItemDescWndLoadHtmlFromString 3310
#define UCONST_EV_ItemDescWndShow 3300
#define UCONST_EV_NPCDialogWndLoadHtmlFromString 3290
#define UCONST_EV_NPCDialogWndHide 3280
#define UCONST_EV_NPCDialogWndShow 3270
#define UCONST_EV_CharacterCreateEnableRotate 3260
#define UCONST_EV_CharacterCreateClearName 3250
#define UCONST_EV_CharacterCreateClearWnd 3240
#define UCONST_EV_CharacterCreateClearSetupWnd 3230
#define UCONST_EV_CharacterCreateClearClassDesc 3220
#define UCONST_EV_CharacterCreateSetClassDesc 3210
#define UCONST_EV_FortressMapBarrackInfo 3202
#define UCONST_EV_ShowFortressMapInfo 3201
#define UCONST_EV_ShowFortressSiegeInfo 3200
#define UCONST_EV_AddAgitInfo 3190
#define UCONST_EV_ShowAgitInfo 3180
#define UCONST_EV_AddFortressInfo 3170
#define UCONST_EV_ShowFortressInfo 3160
#define UCONST_EV_AddCastleInfo 3150
#define UCONST_EV_ShowCastleInfo 3140
#define UCONST_EV_PartySummonDelete 3130
#define UCONST_EV_PartySummonUpdate 3120
#define UCONST_EV_PartySummonAdd 3110
#define UCONST_EV_FullScreenMoviePlayer 3100
#define UCONST_EV_ResizeMoviePlayer 3090
#define UCONST_EV_ShowWindow 3080
#define UCONST_EV_MouseOut 3070
#define UCONST_EV_MouseOver 3060
#define UCONST_EV_ITEM_AUCTION_NEXT_INFO 3051
#define UCONST_EV_ITEM_AUCTION_INFO 3050
#define UCONST_EV_EndMoviePlayer 3040
#define UCONST_EV_ShowMoviePlayer 3030
#define UCONST_EV_LobbyGetSelectedCharacterIndex 3026
#define UCONST_EV_LobbyShowDialog 3025
#define UCONST_EV_LobbyStartButtonClick 3024
#define UCONST_EV_LobbyClearCharacterName 3023
#define UCONST_EV_LobbyCharacterSelect 3022
#define UCONST_EV_LobbyAddCharacterName 3021
#define UCONST_EV_LobbyMenuButtonEnable 3020
#define UCONST_EV_TextLinkRButtonClick 3010
#define UCONST_EV_TextLinkLButtonClick 3000
#define UCONST_EV_MinimapRegionInfoBtnClick 2990
#define UCONST_EV_MinimapTravel 2980
#define UCONST_EV_NotifyPartyMemberPosition 2971
#define UCONST_EV_NotifyObject 2970
#define UCONST_EV_RequestTooltipInfo 2960
#define UCONST_EV_EditorUpdateProperty 2950
#define UCONST_EV_EditorSetProperty 2940
#define UCONST_EV_TrackerDetach 2930
#define UCONST_EV_TrackerAttach 2920
#define UCONST_EV_ResolutionChanged 2900
#define UCONST_EV_RemoveAttributeEnchantResult 2898
#define UCONST_EV_RemoveAttributeEnchantItemData 2897
#define UCONST_EV_RemoveAttributeEnchantWndShow 2896
#define UCONST_EV_AttributeEnchantResult 2895
#define UCONST_EV_AttributeEnchantItemList 2894
#define UCONST_EV_AttributeEnchantItemShow 2893
#define UCONST_EV_EnchantPutSupportItemResult 2892
#define UCONST_EV_EnchantPutTargetItemResult 2891
#define UCONST_EV_EnchantResult 2890
#define UCONST_EV_EnchantItemList 2880
#define UCONST_EV_EnchantHide 2870
#define UCONST_EV_EnchantShow 2860
#define UCONST_EV_QuestInfo 2850
#define UCONST_EV_QuestInfoStart 2840
#define UCONST_EV_RefineryRefineCancelResult 2830
#define UCONST_EV_RefineryConfirmCancelItemResult 2820
#define UCONST_EV_ShowRefineryCancelInteface 2810
#define UCONST_EV_RefineryRefineResult 2800
#define UCONST_EV_RefineryConfirmGemStoneResult 2790
#define UCONST_EV_RefineryConfirmRefinerItemResult 2780
#define UCONST_EV_RefineryConfirmTargetItemResult 2770
#define UCONST_EV_ShowRefineryInteface 2760
#define UCONST_EV_DuelEnemyRelation 2750
#define UCONST_EV_DuelUpdateUserInfo 2740
#define UCONST_EV_DuelEnd 2730
#define UCONST_EV_DuelStart 2720
#define UCONST_EV_DuelReady 2710
#define UCONST_EV_DuelAskStart 2700
#define UCONST_EV_ShowPlaySceneInterface 3000
#define UCONST_EV_ManorShopWndAddItem 2690
#define UCONST_EV_ManorShopWndOpen 2680
#define UCONST_EV_ManorCropInfoChangeWndShow 2670
#define UCONST_EV_ManorCropInfoSettingWndChangeValue 2668
#define UCONST_EV_ManorCropInfoSettingWndAddItemEnd 2667
#define UCONST_EV_ManorCropInfoSettingWndAddItem 2666
#define UCONST_EV_ManorCropInfoSettingWndShow 2665
#define UCONST_EV_ManorSeedInfoChangeWndShow 2660
#define UCONST_EV_ManorSeedInfoSettingWndChangeValue 2659
#define UCONST_EV_ManorSeedInfoSettingWndAddItemEnd 2658
#define UCONST_EV_ManorSeedInfoSettingWndAddItem 2657
#define UCONST_EV_ManorSeedInfoSettingWndShow 2656
#define UCONST_EV_ManorInfoWndDefaultAdd 2655
#define UCONST_EV_ManorInfoWndDefaultShow 2654
#define UCONST_EV_ManorInfoWndCropAdd 2653
#define UCONST_EV_ManorInfoWndCropShow 2652
#define UCONST_EV_ManorInfoWndSeedAdd 2651
#define UCONST_EV_ManorInfoWndSeedShow 2650
#define UCONST_EV_ManorCropSellChangeWndSetCropNameAndRewardType 2649
#define UCONST_EV_ManorCropSellChangeWndAddItem 2648
#define UCONST_EV_ManorCropSellChangeWndShow 2647
#define UCONST_EV_ManorCropSellWndSetCropSell 2646
#define UCONST_EV_ManorCropSellWndAddItem 2645
#define UCONST_EV_ManorCropSellWndShow 2640
#define UCONST_EV_InventoryToggleWindow 2631
#define UCONST_EV_InventoryAddHennaInfo 2630
#define UCONST_EV_InventoryItemListEnd 2620
#define UCONST_EV_InventoryUpdateItem 2610
#define UCONST_EV_InventoryAddItem 2600
#define UCONST_EV_InventoryHideWindow 2590
#define UCONST_EV_InventoryOpenWindow 2580
#define UCONST_EV_InventoryClear 2570
#define UCONST_EV_MultiSellInfoListEnd 2560
#define UCONST_EV_MultiSellInputItemInfo 2550
#define UCONST_EV_MultiSellOutputItemInfo 2540
#define UCONST_EV_MultiSellResultItemInfo 2535
#define UCONST_EV_MultiSellInfoListBegin 2530
#define UCONST_EV_FishViewportWndFinalAction 2522
#define UCONST_EV_FishViewportWndSetFishStatus 2521
#define UCONST_EV_FishViewportWndInitFishStatus 2520
#define UCONST_EV_FishRankEventButtonHide 2510
#define UCONST_EV_FishRankEventButtonShow 250
#define UCONST_EV_FishViewportWndInit 2490
#define UCONST_EV_FishViewportWndHide 2480
#define UCONST_EV_FishViewportWndShow 2470
#define UCONST_EV_ObserverWndHide 2460
#define UCONST_EV_ObserverWndShow 2450
#define UCONST_EV_TutorialViewerWndHide 2440
#define UCONST_EV_TutorialViewerWndShow 2430
#define UCONST_EV_BeginShowZoneTitleWnd 2420
#define UCONST_EV_GMSnoop 2410
#define UCONST_EV_GMUpdateHennaInfo 2404
#define UCONST_EV_GMAddHennaInfo 2403
#define UCONST_EV_GMObservingInventoryClear 2402
#define UCONST_EV_GMObservingInventoryAddItem 2401
#define UCONST_EV_GMObservingClanMember 2400
#define UCONST_EV_GMObservingClanMemberStart 2390
#define UCONST_EV_GMObservingClan 2380
#define UCONST_EV_GMObservingWarehouseItemList 2370
#define UCONST_EV_GMObservingWarehouseItemListStart 2360
#define UCONST_EV_GMObservingQuestItem 2350
#define UCONST_EV_GMObservingQuestListEnd 2340
#define UCONST_EV_GMObservingQuestList 2330
#define UCONST_EV_GMObservingQuestListStart 2320
#define UCONST_EV_GMObservingSkillList 2310
#define UCONST_EV_GMObservingSkillListStart 2300
#define UCONST_EV_GMObservingUserInfoUpdate 2290
#define UCONST_EV_ShowGMWnd 2280
#define UCONST_EV_EventMatchGMMessage 2270
#define UCONST_EV_EventMatchUpdateUserInfo 2260
#define UCONST_EV_EventMatchUpdateTeamInfo 2250
#define UCONST_EV_EventMatchUpdateScore 2240
#define UCONST_EV_EventMatchUpdateTeamName 2230
#define UCONST_EV_StartEventMatchObserver 2220
#define UCONST_EV_EventMatchPartyLeader 2211
#define UCONST_EV_EventMatchManage 2210
#define UCONST_EV_EventMatchDestroyed 2200
#define UCONST_EV_EventMatchCreated 2190
#define UCONST_EV_ShowEventMatchGMWnd 2180
#define UCONST_EV_DeliverAddItem 2170
#define UCONST_EV_DeliverOpenWindow 2160
#define UCONST_EV_SelectDeliverAddName 2150
#define UCONST_EV_SelectDeliverClear 2140
#define UCONST_EV_PrivateShopAddItem 2130
#define UCONST_EV_PrivateShopOpenWindow 2120
#define UCONST_EV_WarehouseDeleteItem 2111
#define UCONST_EV_WarehouseAddItem 2110
#define UCONST_EV_WarehouseOpenWindow 2100
#define UCONST_EV_ShopAddItem 2090
#define UCONST_EV_OnEndTransactionList 2081
#define UCONST_EV_ShopOpenWindow 2080
#define UCONST_EV_SetMaxCount 2070
#define UCONST_EV_SkillEnchantInfoWndAddExtendInfo 2067
#define UCONST_EV_SkillEnchantInfoWndHide 2066
#define UCONST_EV_SkillEnchantInfoWndAddSkill 2065
#define UCONST_EV_SkillEnchantInfoWndShow 2064
#define UCONST_EV_SkillTrainInfoWndAddExtendInfo 2060
#define UCONST_EV_SkillTrainInfoWndHide 2050
#define UCONST_EV_SkillTrainInfoWndShow 2040
#define UCONST_EV_SkillTrainListWndAddSkill 2030
#define UCONST_EV_SkillTrainListWndHide 2020
#define UCONST_EV_SkillTrainListWndShow 2010
#define UCONST_EV_TradeRequestStartExchange 2000
#define UCONST_EV_TradeUpdateInventoryItem 1990
#define UCONST_EV_TradeOtherOK 1980
#define UCONST_EV_TradeDone 1970
#define UCONST_EV_TradeAddItem 1960
#define UCONST_EV_TradeStart 1950
#define UCONST_EV_EnablePetitionFeedback 1940
#define UCONST_EV_PetitionChatMessage 1930
#define UCONST_EV_ShowUserPetitionWnd 1921
#define UCONST_EV_ShowPetitionWnd 1920
#define UCONST_EV_PCCafePointInfo 1910
#define UCONST_EV_LanguageChanged 1900
#define UCONST_EV_MinimapUpdateGameTime 1890
#define UCONST_EV_MinimapHideReduceBtn 1880
#define UCONST_EV_MinimapShowReduceBtn 1870
#define UCONST_EV_MinimapCursedWeaponLocation 1860
#define UCONST_EV_MinimapCursedWeaponList 1850
#define UCONST_EV_MinimapChangeZone 1840
#define UCONST_EV_MinimapHideQuest 1830
#define UCONST_EV_MinimapShowQuest 1820
#define UCONST_EV_MinimapDeleteAllTarget 1810
#define UCONST_EV_MinimapDeleteTarget 1800
#define UCONST_EV_MinimapAddTarget 1790
#define UCONST_EV_ShowMinimap 1780
#define UCONST_EV_ShowTownMap 1770
#define UCONST_EV_RadarColor 1760
#define UCONST_EV_RadarDeleteAllTarget 1750
#define UCONST_EV_RadarDeleteTarget 1740
#define UCONST_EV_RadarAddTarget 1730
#define UCONST_EV_DialogCancel 1720
#define UCONST_EV_DialogOK 1710
#define UCONST_EV_CalculatorWndShowHide 1700
#define UCONST_EV_HennaInfoWndShowHideUnEquip 1690
#define UCONST_EV_HennaListWndAddHennaUnEquip 1680
#define UCONST_EV_HennaListWndShowHideUnEquip 1670
#define UCONST_EV_HennaInfoWndShowHideEquip 1660
#define UCONST_EV_HennaListWndAddHennaEquip 1650
#define UCONST_EV_HennaListWndShowHideEquip 1640
#define UCONST_EV_PartyMatchCommand 1630
#define UCONST_EV_PartyMatchWaitList 1620
#define UCONST_EV_PartyMatchWaitListStart 1610
#define UCONST_EV_PartyMatchChatMessage 1600
#define UCONST_EV_PartyMatchRoomMemberUpdate 1590
#define UCONST_EV_PartyMatchRoomMember 1580
#define UCONST_EV_PartyMatchList 1570
#define UCONST_EV_PartyMatchRoomClose 1560
#define UCONST_EV_PartyMatchRoomStart 1550
#define UCONST_EV_PartyMatchStart 1540
#define UCONST_EV_ArriveNewMail 1530
#define UCONST_EV_ArriveShowQuest 1520
#define UCONST_EV_ArriveNewTutorialQuestion 1510
#define UCONST_EV_IMEStatusChange 1500
#define UCONST_EV_SiegeInfoSelectableTime 1490
#define UCONST_EV_SiegeInfoClanListEnd 1480
#define UCONST_EV_SiegeInfoClanList 1470
#define UCONST_EV_SiegeInfoClanListStart 1460
#define UCONST_EV_SiegeInfo 1450
#define UCONST_EV_RestartMenuHide 1440
#define UCONST_EV_RestartMenuShow 1430
#define UCONST_EV_CommandChannelPartyMember 1420
#define UCONST_EV_CommandChannelRoutingType 1400
#define UCONST_EV_CommandChannelPartyUpdate 1395
#define UCONST_EV_CommandChannelPartyList 1390
#define UCONST_EV_CommandChannelInfo 1380
#define UCONST_EV_CommandChannelEnd 1370
#define UCONST_EV_CommandChannelStart 1360
#define UCONST_EV_ActionSummonedList 1350
#define UCONST_EV_ActionSummonedListStart 1340
#define UCONST_EV_ActionPetList 1330
#define UCONST_EV_ActionPetListStart 1320
#define UCONST_EV_ActionListNew 1311
#define UCONST_EV_ActionList 1310
#define UCONST_EV_ActionListStart 1300
#define UCONST_EV_SkillList 1290
#define UCONST_EV_SkillListStart 1280
#define UCONST_EV_MacroDeleted 1270
#define UCONST_EV_MacroShowEditWnd 1260
#define UCONST_EV_MacroList 1250
#define UCONST_EV_MacroUpdate 1240
#define UCONST_EV_MacroShowListWnd 1230
#define UCONST_EV_LoadPetitionHtml 1221
#define UCONST_EV_LoadHelpHtml 1220
#define UCONST_EV_ShowHelp 1210
#define UCONST_EV_ShowBoardPacket 1200
#define UCONST_EV_ShowBBS 1190
#define UCONST_EV_PartyRenameMember 1181
#define UCONST_EV_PartySpelledList 1180
#define UCONST_EV_PartyDeleteAllParty 1170
#define UCONST_EV_PartyDeleteParty 1160
#define UCONST_EV_PartyUpdateParty 1150
#define UCONST_EV_PartyAddParty 1140
#define UCONST_EV_PetSummonedStatusClose 1130
#define UCONST_EV_SummonedStatusRemainTime 1120
#define UCONST_EV_SummonedStatusSpelledList 1110
#define UCONST_EV_SummonedStatusShow 1100
#define UCONST_EV_SummonedWndShow 1090
#define UCONST_EV_PetInventoryItemUpdate 1080
#define UCONST_EV_PetInventoryItemList 1070
#define UCONST_EV_PetInventoryItemStart 1060
#define UCONST_EV_PetStatusSpelledList 1050
#define UCONST_EV_PetStatusShow 1040
#define UCONST_EV_PetWndRegPetNameFailed 1030
#define UCONST_EV_PetWndShowNameBtn 1020
#define UCONST_EV_PetWndShow 1010
#define UCONST_EV_ShowBuffIcon 1000
#define UCONST_EV_TargetHideWindow 990
#define UCONST_EV_TargetUpdate 980
#define UCONST_EV_AbnormalStatusShortItem 970
#define UCONST_EV_AbnormalStatusEtcItem 960
#define UCONST_EV_AbnormalStatusNormalItem 950
#define UCONST_EV_OlympiadBuffInfo 940
#define UCONST_EV_OlympiadBuffShow 930
#define UCONST_EV_OlympiadUserInfo 920
#define UCONST_EV_OlympiadMatchEnd 910
#define UCONST_EV_OlympiadTargetShow 900
#define UCONST_EV_HeroRecord 890
#define UCONST_EV_HeroShowList 880
#define UCONST_EV_RecipeShopAddShopItem 870
#define UCONST_EV_RecipeShopAddBookItem 860
#define UCONST_EV_RecipeShopShowWnd 850
#define UCONST_EV_RecipeItemMakeInfo 840
#define UCONST_EV_RecipeAddBookItem 830
#define UCONST_EV_RecipeShowBookWnd 820
#define UCONST_EV_RecipeShowRecipeTreeWnd 810
#define UCONST_EV_RecipeShopItemInfo 800
#define UCONST_EV_RecipeShopSellItem 790
#define UCONST_EV_RecipeShowBuyListWnd 780
#define UCONST_EV_SSQPreInfo 770
#define UCONST_EV_SSQSealStatus 760
#define UCONST_EV_SSQMainEvent 750
#define UCONST_EV_SSQStatus 740
#define UCONST_EV_QuestSetCurrentID 730
#define UCONST_EV_QuestListEnd 720
#define UCONST_EV_QuestList 710
#define UCONST_EV_QuestListStart 700
#define UCONST_EV_ShortcutKeyAssignChanged 693
#define UCONST_EV_ShortcutDataReceived 692
#define UCONST_EV_ShortcutInit 691
#define UCONST_EV_ShowShortcutWnd 690
#define UCONST_EV_ShortcutPageUp 680
#define UCONST_EV_ShortcutPageDown 670
#define UCONST_EV_ShortcutJoypad 660
#define UCONST_EV_ShortcutClear 650
#define UCONST_EV_ShortcutPageUpdate 640
#define UCONST_EV_ShortcutUpdate 630
#define UCONST_EV_JoypadRButtonUp 620
#define UCONST_EV_JoypadRButtonDown 610
#define UCONST_EV_JoypadLButtonUp 600
#define UCONST_EV_JoypadLButtonDown 590
#define UCONST_EV_SystemMessage 580
#define UCONST_EV_ChatWndMacroCommand 572
#define UCONST_EV_ChatWndMsnStatus 571
#define UCONST_EV_ChatWndSetFocus 570
#define UCONST_EV_ChatWndSetString 560
#define UCONST_EV_ChatWndStatusChange 550
#define UCONST_EV_ChatMessage 540
#define UCONST_EV_ToggleShowPCCafeEventWnd 531
#define UCONST_EV_ShowPCCafeCouponUI 530
#define UCONST_EV_PartyMemberChanged 520
#define UCONST_EV_MinFrameRateChanged 510
#define UCONST_EV_ClanSkillListRenew 500
#define UCONST_EV_ClanSkillList 490
#define UCONST_EV_ClanSubClanUpdated 480
#define UCONST_EV_ClanClearWarList 470
#define UCONST_EV_ClanWarList 460
#define UCONST_EV_ClanDeleteMember 450
#define UCONST_EV_ClanMemberInfoUpdate 440
#define UCONST_EV_ClanMemberInfo 430
#define UCONST_EV_ClanDeleteAllMember 420
#define UCONST_EV_ClanAddMemberMultiple 410
#define UCONST_EV_ClanAddMember 400
#define UCONST_EV_ClanSetAcademyMaster 390
#define UCONST_EV_ClanAuthMember 380
#define UCONST_EV_ClanAuth 370
#define UCONST_EV_ClanCrestChange 360
#define UCONST_EV_ClanAuthGradeList 350
#define UCONST_EV_ClanMyAuth 340
#define UCONST_EV_ClanInfoUpdate 330
#define UCONST_EV_ClanInfo 320
#define UCONST_EV_ShowReplayQuitDialogBox 310
#define UCONST_EV_ReceiveTargetLevelDiff 300
#define UCONST_EV_ReceiveMagicSkillUse 290
#define UCONST_EV_ReceiveAttack 280
#define UCONST_EV_UpdateHennaInfo 260
#define UCONST_EV_UpdatePetInfo 250
#define UCONST_EV_UpdateMaxCP 240
#define UCONST_EV_UpdateCP 230
#define UCONST_EV_UpdateMaxMP 220
#define UCONST_EV_UpdateMP 210
#define UCONST_EV_UpdateMaxHP 200
#define UCONST_EV_UpdateHP 190
#define UCONST_EV_UpdateUserInfo 180
#define UCONST_EV_ServerAgeLimitChange 170
#define UCONST_EV_GamingStateExit 160
#define UCONST_EV_GamingStateEnter 150
#define UCONST_EV_ShowScreenNPCZoomMessage 141
#define UCONST_EV_ShowScreenMessage 140
#define UCONST_EV_ShowGuideWnd 130
#define UCONST_EV_RaidRecord 120
#define UCONST_EV_SetRadarZoneCode 110
#define UCONST_EV_MagicSkillList 100
#define UCONST_EV_ShortcutCommandSlot 91
#define UCONST_EV_ShortcutCommand 90
#define UCONST_EV_RadarTransitionFinished 80
#define UCONST_EV_RegenStatus 70
#define UCONST_EV_CardKeyLogin 60
#define UCONST_EV_Die 50
#define UCONST_EV_Restart 40
#define UCONST_EV_LoginFail 30
#define UCONST_EV_LoginOK 20
#define UCONST_EV_Test 10
#define UCONST_CREATE_ON_DEMAND 1
#define UCONST_MAX_PartyMemberCount 9

class NWINDOW_API UUIEventManager : public UInteractions
{
public:
    FStringNoInit mmand;
    DECLARE_FUNCTION(execGetUIState);
    DECLARE_FUNCTION(execSMessageBox);
    DECLARE_FUNCTION(execMessageBox);
    DECLARE_FUNCTION(execSetUIState);
    DECLARE_FUNCTION(execRegisterState);
    DECLARE_FUNCTION(execRegisterEvent);
    DECLARE_FUNCTION(execParseFloat);
    DECLARE_FUNCTION(execParseINT64);
    DECLARE_FUNCTION(execParseInt);
    DECLARE_FUNCTION(execParseString);
    DECLARE_FUNCTION(execParamAddINT64);
    DECLARE_FUNCTION(execParamAdd);
    DECLARE_FUNCTION(execExecuteEvent);
    DECLARE_CLASS(UUIEventManager,UInteractions,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIEventManager)
};


class NWINDOW_API UWindowHandle : public UUIEventManager
{
public:
    class UObject* m_pTargetWnd;
    FStringNoInit m_WindowNameWithFullPath;
    DECLARE_FUNCTION(execSetShowAndHideAnimType);
    DECLARE_FUNCTION(execIsCurrentState);
    DECLARE_FUNCTION(execExitState);
    DECLARE_FUNCTION(execEnterState);
    DECLARE_FUNCTION(execChangeControlOrder);
    DECLARE_FUNCTION(execMakeBaseUC);
    DECLARE_FUNCTION(execConvertToEditable);
    DECLARE_FUNCTION(execSetXMLDocumentInfo);
    DECLARE_FUNCTION(execGetXMLDocumentInfo);
    DECLARE_FUNCTION(execSaveXMLWindow);
    DECLARE_FUNCTION(execLoadXMLWindow);
    DECLARE_FUNCTION(execGetControlType);
    DECLARE_FUNCTION(execIsControlContainer);
    DECLARE_FUNCTION(execSetScript);
    DECLARE_FUNCTION(execSetBackTexture);
    DECLARE_FUNCTION(execDeleteChildWnd);
    DECLARE_FUNCTION(execGetClassName);
    DECLARE_FUNCTION(execAddChildWnd);
    DECLARE_FUNCTION(execSetEditable);
    DECLARE_FUNCTION(execInitRotation);
    DECLARE_FUNCTION(execIsFront);
    DECLARE_FUNCTION(execClearRotation);
    DECLARE_FUNCTION(execRotate);
    DECLARE_FUNCTION(execSetSettledWnd);
    DECLARE_FUNCTION(execSetScrollHeight);
    DECLARE_FUNCTION(execSetScrollPosition);
    DECLARE_FUNCTION(execSetScrollBarPosition);
    DECLARE_FUNCTION(execSetResizeFrameSize);
    DECLARE_FUNCTION(execSetFrameSize);
    DECLARE_FUNCTION(execClearAllChildShortcutItemTooltip);
    DECLARE_FUNCTION(execClearTooltip);
    DECLARE_FUNCTION(execGetTooltipCustomType);
    DECLARE_FUNCTION(execSetTooltipCustomType);
    DECLARE_FUNCTION(execSetTooltipType);
    DECLARE_FUNCTION(execGetTooltipText);
    DECLARE_FUNCTION(execSetTooltipText);
    DECLARE_FUNCTION(execNotifyAlarm);
    DECLARE_FUNCTION(execKillTimer);
    DECLARE_FUNCTION(execSetTimer);
    DECLARE_FUNCTION(execReleaseFocus);
    DECLARE_FUNCTION(execIsFocused);
    DECLARE_FUNCTION(execSetFocus);
    DECLARE_FUNCTION(execIsEnableWindow);
    DECLARE_FUNCTION(execDisableWindow);
    DECLARE_FUNCTION(execEnableWindow);
    DECLARE_FUNCTION(execSetDragOverTexture);
    DECLARE_FUNCTION(execSetVirtualDrag);
    DECLARE_FUNCTION(execIsVirtualDrag);
    DECLARE_FUNCTION(execSetStuckable);
    DECLARE_FUNCTION(execSetDraggable);
    DECLARE_FUNCTION(execIsDraggable);
    DECLARE_FUNCTION(execIsAnchored);
    DECLARE_FUNCTION(execClearAnchor);
    DECLARE_FUNCTION(execSetAnchor);
    DECLARE_FUNCTION(execDisableTick);
    DECLARE_FUNCTION(execEnableTick);
    DECLARE_FUNCTION(execMoveShake);
    DECLARE_FUNCTION(execMoveExWithTime);
    DECLARE_FUNCTION(execMoveEx);
    DECLARE_FUNCTION(execMoveTo);
    DECLARE_FUNCTION(execMove);
    DECLARE_FUNCTION(execIsRelativeSize);
    DECLARE_FUNCTION(execSetWindowSizeRel43);
    DECLARE_FUNCTION(execGetWindowSizeRel);
    DECLARE_FUNCTION(execSetWindowSizeRel);
    DECLARE_FUNCTION(execGetWindowSize);
    DECLARE_FUNCTION(execSetWindowSize);
    DECLARE_FUNCTION(execAddWindowSize);
    DECLARE_FUNCTION(execGetRect);
    DECLARE_FUNCTION(execSetModal);
    DECLARE_FUNCTION(execSetAlwaysFullAlpha);
    DECLARE_FUNCTION(execSetFontColor);
    DECLARE_FUNCTION(execIsAlwaysOnBack);
    DECLARE_FUNCTION(execIsAlwaysOnTop);
    DECLARE_FUNCTION(execIsVirtual);
    DECLARE_FUNCTION(execGetScriptName);
    DECLARE_FUNCTION(execGetScript);
    DECLARE_FUNCTION(execSetAlpha);
    DECLARE_FUNCTION(execGetAlpha);
    DECLARE_FUNCTION(execGetTopFrameWnd);
    DECLARE_FUNCTION(execIsChildOf);
    DECLARE_FUNCTION(execGetChildWindowList);
    DECLARE_FUNCTION(execGetParentWindowHandle);
    DECLARE_FUNCTION(execChangeParentWindow);
    DECLARE_FUNCTION(execGetParentWindowName);
    DECLARE_FUNCTION(execGetWindowName);
    DECLARE_FUNCTION(execIsMinimizedWindow);
    DECLARE_FUNCTION(execIsShowWindow);
    DECLARE_FUNCTION(execHideWindow);
    DECLARE_FUNCTION(execShowWindow);
    DECLARE_FUNCTION(execSetTitlePosOffset);
    DECLARE_FUNCTION(execSetWindowTitle);
    DECLARE_CLASS(UWindowHandle,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UWindowHandle)
};


class NWINDOW_API UTextureHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetColorModify);
    DECLARE_FUNCTION(execGetColor);
    DECLARE_FUNCTION(execSetRotatingDirection);
    DECLARE_FUNCTION(execSetAutoRotateType);
    DECLARE_FUNCTION(execGetTextureName);
    DECLARE_FUNCTION(execSetTextureWithObject);
    DECLARE_FUNCTION(execSetTextureWithClanCrest);
    DECLARE_FUNCTION(execSetTextureCtrlType);
    DECLARE_FUNCTION(execSetTextureSize);
    DECLARE_FUNCTION(execSetUV);
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_CLASS(UTextureHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextureHandle)
};


class NWINDOW_API UAnimTextureHandle : public UTextureHandle
{
public:
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execPause);
    DECLARE_FUNCTION(execPlay);
    DECLARE_FUNCTION(execSetTimes);
    DECLARE_FUNCTION(execSetLoopCount);
    DECLARE_CLASS(UAnimTextureHandle,UTextureHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAnimTextureHandle)
};


class NWINDOW_API UBarHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execGetValue);
    DECLARE_FUNCTION(execSetValue);
    DECLARE_CLASS(UBarHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UBarHandle)
};


class NWINDOW_API UButtonHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execSetNameText);
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_FUNCTION(execGetButtonName);
    DECLARE_CLASS(UButtonHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UButtonHandle)
};


class NWINDOW_API UCharacterViewportWindowHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execHideNPC);
    DECLARE_FUNCTION(execShowNPC);
    DECLARE_FUNCTION(execPlayAnimation);
    DECLARE_FUNCTION(execSpawnNPC);
    DECLARE_FUNCTION(execSetCharacterOffsetY);
    DECLARE_FUNCTION(execSetCharacterOffsetX);
    DECLARE_FUNCTION(execSetCharacterScale);
    DECLARE_FUNCTION(execEndZoom);
    DECLARE_FUNCTION(execStartZoom);
    DECLARE_FUNCTION(execEndRotation);
    DECLARE_FUNCTION(execStartRotation);
    DECLARE_CLASS(UCharacterViewportWindowHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCharacterViewportWindowHandle)
};


class NWINDOW_API UTextListBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetTextListBoxScrollPosition);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddStringToChatWindow);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UTextListBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextListBoxHandle)
};


class NWINDOW_API UChatWindowHandle : public UTextListBoxHandle
{
public:
    DECLARE_FUNCTION(execEnableTexture);
    DECLARE_CLASS(UChatWindowHandle,UTextListBoxHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UChatWindowHandle)
};


class NWINDOW_API UCheckBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execToggleDisable);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execIsDisable);
    DECLARE_FUNCTION(execIsChecked);
    DECLARE_FUNCTION(execSetCheck);
    DECLARE_FUNCTION(execSetTitle);
    DECLARE_CLASS(UCheckBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCheckBoxHandle)
};


class NWINDOW_API UComboBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetAdditionalString);
    DECLARE_FUNCTION(execAddStringWithIconWithGapWithStr);
    DECLARE_FUNCTION(execAddStringWithIconWithStr);
    DECLARE_FUNCTION(execAddStringWithIconWithGap);
    DECLARE_FUNCTION(execAddStringWithIcon);
    DECLARE_FUNCTION(execAddStringWithFileExt);
    DECLARE_FUNCTION(execGetFileExtInfo);
    DECLARE_FUNCTION(execAddStringWithColor);
    DECLARE_FUNCTION(execGetNumOfItems);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_FUNCTION(execGetReserved);
    DECLARE_FUNCTION(execGetString);
    DECLARE_FUNCTION(execSYS_AddStringWithReserved);
    DECLARE_FUNCTION(execAddStringWithReserved);
    DECLARE_FUNCTION(execSYS_AddString);
    DECLARE_FUNCTION(execAddStringWithGap);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UComboBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UComboBoxHandle)
};


class NWINDOW_API UDrawPanelHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execPreCheckPanelSize);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertDrawItem);
    DECLARE_CLASS(UDrawPanelHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UDrawPanelHandle)
};


class NWINDOW_API UEditBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execAddItemToAutoCompleteHistory);
    DECLARE_FUNCTION(execDeleteNameFromPledgeMemberSearchList);
    DECLARE_FUNCTION(execClearPledgeMemberSearchList);
    DECLARE_FUNCTION(execFillPledgeMemberSearchList);
    DECLARE_FUNCTION(execAddNameToPledgeMemberSearchList);
    DECLARE_FUNCTION(execDeleteNameFromFriendSearchList);
    DECLARE_FUNCTION(execClearFriendSearchList);
    DECLARE_FUNCTION(execAddNameToFriendSearchList);
    DECLARE_FUNCTION(execFillFriendSearchList);
    DECLARE_FUNCTION(execDeleteNameFromAdditionalFriendSearchList);
    DECLARE_FUNCTION(execClearAdditionalFriendSearchList);
    DECLARE_FUNCTION(execFillAdditionalFriendSearchList);
    DECLARE_FUNCTION(execAddNameToAdditionalFriendSearchList);
    DECLARE_FUNCTION(execClearHistory);
    DECLARE_FUNCTION(execSetEnableTextLink);
    DECLARE_FUNCTION(execGetMaxLength);
    DECLARE_FUNCTION(execSetMaxLength);
    DECLARE_FUNCTION(execSetHighLight);
    DECLARE_FUNCTION(execSetEditType);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSimulateBackspace);
    DECLARE_FUNCTION(execAddString);
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UEditBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEditBoxHandle)
};


class NWINDOW_API UFlashCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execInvoke);
    DECLARE_FUNCTION(execSetFlashFile);
    DECLARE_FUNCTION(execGotoFrame);
    DECLARE_FUNCTION(execGetCurrentFrame);
    DECLARE_FUNCTION(execGetTotalFrameCnt);
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execPause);
    DECLARE_FUNCTION(execPlay);
    DECLARE_CLASS(UFlashCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UFlashCtrlHandle)
};


class NWINDOW_API UHtmlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsPageLock);
    DECLARE_FUNCTION(execSetPageLock);
    DECLARE_FUNCTION(execSetHtmlBuffData);
    DECLARE_FUNCTION(execControllerExecution);
    DECLARE_FUNCTION(execGetFrameMaxHeight);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execLoadHtmlFromString);
    DECLARE_FUNCTION(execLoadHtml);
    DECLARE_CLASS(UHtmlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHtmlHandle)
};


class NWINDOW_API UItemWindowHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execPushSideTypeNextBtn);
    DECLARE_FUNCTION(execPushSideTypePrevBtn);
    DECLARE_FUNCTION(execGetSideTypeCurPage);
    DECLARE_FUNCTION(execGetSideTypePageNum);
    DECLARE_FUNCTION(execFindItemByClassID);
    DECLARE_FUNCTION(execSetItemUsability);
    DECLARE_FUNCTION(execSetExpandItemNum);
    DECLARE_FUNCTION(execSetCol);
    DECLARE_FUNCTION(execSetRow);
    DECLARE_FUNCTION(execSetDisableTex);
    DECLARE_FUNCTION(execGetIndexAt);
    DECLARE_FUNCTION(execSwapItems);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetFaded);
    DECLARE_FUNCTION(execFindItemWithReserved);
    DECLARE_FUNCTION(execFindItemWithAllProperty);
    DECLARE_FUNCTION(execFindItem);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetSelectedItem);
    DECLARE_FUNCTION(execDeleteItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execAddItemWithFaded);
    DECLARE_FUNCTION(execAddItem);
    DECLARE_FUNCTION(execClearSelect);
    DECLARE_FUNCTION(execGetItemNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_CLASS(UItemWindowHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UItemWindowHandle)
};


class NWINDOW_API UListBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetMaxRow);
    DECLARE_FUNCTION(execSetDrawOffset);
    DECLARE_FUNCTION(execSetListBoxScrollPosition);
    DECLARE_FUNCTION(execGetSelectedString);
    DECLARE_FUNCTION(execAddStringWithData);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UListBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UListBoxHandle)
};


class NWINDOW_API UListCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetResizable);
    DECLARE_FUNCTION(execSetHeaderTextOffset);
    DECLARE_FUNCTION(execSetHeaderAlignment);
    DECLARE_FUNCTION(execAdjustColumnWidth);
    DECLARE_FUNCTION(execInitListCtrl);
    DECLARE_FUNCTION(execGetRec);
    DECLARE_FUNCTION(execGetSelectedRec);
    DECLARE_FUNCTION(execModifyRecord);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetSelectedIndex);
    DECLARE_FUNCTION(execGetSelectedIndex);
    DECLARE_FUNCTION(execGetRecordCount);
    DECLARE_FUNCTION(execDeleteRecord);
    DECLARE_FUNCTION(execDeleteAllItem);
    DECLARE_FUNCTION(execInsertRecord);
    DECLARE_CLASS(UListCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UListCtrlHandle)
};


class NWINDOW_API UMinimapCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetContinent);
    DECLARE_FUNCTION(execEraseRegionInfo);
    DECLARE_FUNCTION(execEraseAllRegionInfo);
    DECLARE_FUNCTION(execUpdateRegionInfo);
    DECLARE_FUNCTION(execAddRegionInfo);
    DECLARE_FUNCTION(execDeleteAllCursedWeaponIcon);
    DECLARE_FUNCTION(execIsOverlapped);
    DECLARE_FUNCTION(execRequestReduceBtn);
    DECLARE_FUNCTION(execDrawGridIcon);
    DECLARE_FUNCTION(execSetSSQStatus);
    DECLARE_FUNCTION(execSetShowQuest);
    DECLARE_FUNCTION(execDeleteAllTarget);
    DECLARE_FUNCTION(execDeleteTarget);
    DECLARE_FUNCTION(execAddTarget);
    DECLARE_FUNCTION(execAdjustMapView);
    DECLARE_CLASS(UMinimapCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMinimapCtrlHandle)
};


class NWINDOW_API UMultiEditBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UMultiEditBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMultiEditBoxHandle)
};


class NWINDOW_API UNameCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetName);
    DECLARE_FUNCTION(execSetNameWithColor);
    DECLARE_FUNCTION(execSetName);
    DECLARE_CLASS(UNameCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UNameCtrlHandle)
};


class NWINDOW_API UProgressCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetBarTex);
    DECLARE_FUNCTION(execSetBackTex);
    DECLARE_FUNCTION(execStart);
    DECLARE_FUNCTION(execResume);
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execReset);
    DECLARE_FUNCTION(execSetPos);
    DECLARE_FUNCTION(execSetProgressTime);
    DECLARE_CLASS(UProgressCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UProgressCtrlHandle)
};


class NWINDOW_API UPropertyControllerHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetItemStringValue);
    DECLARE_FUNCTION(execGetItemIntegerValue);
    DECLARE_FUNCTION(execGetItemBooleanValue);
    DECLARE_FUNCTION(execSetItemStringValue);
    DECLARE_FUNCTION(execSetItemIntegerValue);
    DECLARE_FUNCTION(execSetItemBooleanValue);
    DECLARE_FUNCTION(execGetItemType);
    DECLARE_FUNCTION(execSetGroupVisible);
    DECLARE_FUNCTION(execSetGroupExpandState);
    DECLARE_FUNCTION(execAddGroup);
    DECLARE_FUNCTION(execDeleteGroup);
    DECLARE_FUNCTION(execGetGroupCheck);
    DECLARE_FUNCTION(execSetGroupCheck);
    DECLARE_FUNCTION(execGetGroupType);
    DECLARE_FUNCTION(execUpdatePropertyGroup);
    DECLARE_FUNCTION(execGetPropertyHeight);
    DECLARE_FUNCTION(execClearValue);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetProperty);
    DECLARE_CLASS(UPropertyControllerHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPropertyControllerHandle)
};


class NWINDOW_API URadarMapCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetMapInvisible);
    DECLARE_FUNCTION(execSetEnableRotation);
    DECLARE_FUNCTION(execSetMagnification);
    DECLARE_FUNCTION(execRequestObjectAround);
    DECLARE_FUNCTION(execUpdateObject);
    DECLARE_FUNCTION(execDeleteObject);
    DECLARE_FUNCTION(execAddObject);
    DECLARE_CLASS(URadarMapCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URadarMapCtrlHandle)
};


class NWINDOW_API URadioButtonHandle : public UWindowHandle
{
public:
    DECLARE_CLASS(URadioButtonHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URadioButtonHandle)
};


class NWINDOW_API USceneCameraCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveCameraData);
    DECLARE_FUNCTION(execUpdateCameraData);
    DECLARE_CLASS(USceneCameraCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneCameraCtrlHandle)
};


class NWINDOW_API USceneMusicCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveMusicData);
    DECLARE_FUNCTION(execUpdateMusicData);
    DECLARE_CLASS(USceneMusicCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneMusicCtrlHandle)
};


class NWINDOW_API USceneNpcCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveNpcData);
    DECLARE_FUNCTION(execUpdateNpcData);
    DECLARE_CLASS(USceneNpcCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneNpcCtrlHandle)
};


class NWINDOW_API UScenePcCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSavePcData);
    DECLARE_FUNCTION(execUpdatePcData);
    DECLARE_CLASS(UScenePcCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UScenePcCtrlHandle)
};


class NWINDOW_API USceneScreenCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveScreenData);
    DECLARE_FUNCTION(execUpdateScreenData);
    DECLARE_CLASS(USceneScreenCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneScreenCtrlHandle)
};


class NWINDOW_API USliderCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsMouseScrolling);
    DECLARE_FUNCTION(execSetTotalTickCount);
    DECLARE_FUNCTION(execGetTotalTickCount);
    DECLARE_FUNCTION(execSetCurrentTick);
    DECLARE_FUNCTION(execGetCurrentTick);
    DECLARE_CLASS(USliderCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USliderCtrlHandle)
};


class NWINDOW_API UStatusBarHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetRegenInfo);
    DECLARE_FUNCTION(execSetPointExpPercentRate);
    DECLARE_FUNCTION(execSetPointPercent);
    DECLARE_FUNCTION(execSetPoint);
    DECLARE_CLASS(UStatusBarHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusBarHandle)
};


class NWINDOW_API UStatusIconHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetIconSize);
    DECLARE_FUNCTION(execDelItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetColCount);
    DECLARE_FUNCTION(execGetRowCount);
    DECLARE_FUNCTION(execInsertCol);
    DECLARE_FUNCTION(execInsertRow);
    DECLARE_FUNCTION(execAddCol);
    DECLARE_FUNCTION(execAddRow);
    DECLARE_CLASS(UStatusIconHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusIconHandle)
};


class NWINDOW_API UTabHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_FUNCTION(execMergeTab);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execGetTopIndex);
    DECLARE_FUNCTION(execSetTopOrder);
    DECLARE_FUNCTION(execInitTabCtrl);
    DECLARE_CLASS(UTabHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTabHandle)
};


class NWINDOW_API UTextBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetTooltipString);
    DECLARE_FUNCTION(execSetInt);
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execGetTextColor);
    DECLARE_FUNCTION(execSetTextColor);
    DECLARE_FUNCTION(execSetText);
    DECLARE_FUNCTION(execGetText);
    DECLARE_CLASS(UTextBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextBoxHandle)
};


class NWINDOW_API UTreeHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetNodeItemText);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execGetParentNode);
    DECLARE_FUNCTION(execGetChildNode);
    DECLARE_FUNCTION(execIsExpandedNode);
    DECLARE_FUNCTION(execIsNodeNameExist);
    DECLARE_FUNCTION(execDeleteNode);
    DECLARE_FUNCTION(execGetExpandedNode);
    DECLARE_FUNCTION(execSetExpandedNode);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertNodeItem);
    DECLARE_FUNCTION(execInsertNode);
    DECLARE_CLASS(UTreeHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTreeHandle)
};


class NWINDOW_API UVideoPlayerCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execFullScreen);
    DECLARE_FUNCTION(execResize);
    DECLARE_FUNCTION(execEndMovie);
    DECLARE_FUNCTION(execPlayMovie);
    DECLARE_CLASS(UVideoPlayerCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UVideoPlayerCtrlHandle)
};


class NWINDOW_API UBookMarkAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestGetBookMarkPos);
    DECLARE_FUNCTION(execRequestChangeBookMarkSlot);
    DECLARE_FUNCTION(execRequestTelePortBookMark);
    DECLARE_FUNCTION(execRequestDeleteBookMarkSlot);
    DECLARE_FUNCTION(execRequestModifyBookMarkSlot);
    DECLARE_FUNCTION(execRequestSaveBookMarkSlot);
    DECLARE_FUNCTION(execRequestShowBookMark);
    DECLARE_FUNCTION(execRequestBookMarkSlotInfo);
    DECLARE_CLASS(UBookMarkAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UBookMarkAPI)
};


class NWINDOW_API UEnchantAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestExCancelEnchantItem);
    DECLARE_FUNCTION(execRequestExTryToPutEnchantSupportItem);
    DECLARE_FUNCTION(execRequestExTryToPutEnchantTargetItem);
    DECLARE_FUNCTION(execRequestRemoveAttribute);
    DECLARE_FUNCTION(execRequestEnchantItemAttribute);
    DECLARE_FUNCTION(execRequestEnchantItem);
    DECLARE_CLASS(UEnchantAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEnchantAPI)
};


class NWINDOW_API UEventMatchAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestEventMatchObserverEnd);
    DECLARE_FUNCTION(execSetSelectedUser);
    DECLARE_FUNCTION(execGetUserData);
    DECLARE_FUNCTION(execGetPartyMemberCount);
    DECLARE_FUNCTION(execGetTeamName);
    DECLARE_FUNCTION(execGetScore);
    DECLARE_FUNCTION(execGetEventMatchData);
    DECLARE_CLASS(UEventMatchAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEventMatchAPI)
};


class NWINDOW_API UFileListAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execLoadFlash);
    DECLARE_FUNCTION(execGetDriveInfoList);
    DECLARE_FUNCTION(execGetFileInfoList);
    DECLARE_CLASS(UFileListAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UFileListAPI)
};


struct UUIScript_eventOnModifyCurrentTickSliderCtrl_Parms
{
    FString strID;
    INT iCurrentTick;
};
struct UUIScript_eventOnFlashCtrlMsg_Parms
{
    class UFlashCtrlHandle* a_FlashCtrlHandle;
    FString a_Param;
};
struct UUIScript_eventOnHtmlMsgHideWindow_Parms
{
    class UHtmlHandle* a_HtmlHandle;
};
struct UUIScript_eventOnPropertyControllerResize_Parms
{
    INT a_Height;
};
struct UUIScript_eventOnTextureAnimEnd_Parms
{
    class UAnimTextureHandle* a_AnimTextureHandle;
};
struct UUIScript_eventOnComboBoxItemSelected_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnProgressTimeUp_Parms
{
    FString strID;
};
struct UUIScript_eventOnSelectItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnDBClickItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnRClickItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnRDBClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnRClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnDBClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnClickCheckBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnRButtonClickListBoxItem_Parms
{
    FString strID;
    INT SelectedIndex;
};
struct UUIScript_eventOnDBClickListBoxItem_Parms
{
    FString strID;
    INT SelectedIndex;
};
struct UUIScript_eventOnDBClickListCtrlRecord_Parms
{
    FString strID;
};
struct UUIScript_eventOnClickListCtrlRecord_Parms
{
    FString strID;
};
struct UUIScript_eventOnChatMarkedEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnChangeEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnCompleteEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnTabMerge_Parms
{
    FString sName;
};
struct UUIScript_eventOnTabSplit_Parms
{
    FString sName;
};
struct UUIScript_eventOnButtonTimer_Parms
{
    BITFIELD bExpired;
};
struct UUIScript_eventOnClickButtonWithHandle_Parms
{
    class UButtonHandle* a_ButtonHandle;
};
struct UUIScript_eventOnClickButton_Parms
{
    FString strID;
};
struct UUIScript_eventOnDropWnd_Parms
{
    class UWindowHandle* hTarget;
    class UWindowHandle* hDropWnd;
    INT X;
    INT Y;
};
struct UUIScript_eventOnDropItemWithHandle_Parms
{
    class UWindowHandle* hTarget;
    FItemInfo infItem;
    INT X;
    INT Y;
};
struct UUIScript_eventOnDropItemSource_Parms
{
    FString strTarget;
    FItemInfo infItem;
};
struct UUIScript_eventOnDragItemEnd_Parms
{
    FString strID;
};
struct UUIScript_eventOnDragItemStart_Parms
{
    FString strID;
    FItemInfo infItem;
};
struct UUIScript_eventOnDropItem_Parms
{
    FString strID;
    FItemInfo infItem;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMouseMove_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMouseOut_Parms
{
    class UWindowHandle* a_WindowHandle;
};
struct UUIScript_eventOnMouseOver_Parms
{
    class UWindowHandle* a_WindowHandle;
};
struct UUIScript_eventOnMButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonDblClick_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonDblClick_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnKeyUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    BYTE Key;
};
struct UUIScript_eventOnKeyDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    BYTE Key;
};
struct UUIScript_eventOnRegisterEvent_Parms
{
};
struct UUIScript_eventOnDrawerHideFinished_Parms
{
};
struct UUIScript_eventOnDrawerShowFinished_Parms
{
};
struct UUIScript_eventOnDefaultPosition_Parms
{
};
struct UUIScript_eventOnSendPacketWhenHiding_Parms
{
};
struct UUIScript_eventOnExitState_Parms
{
    FName a_NextStateName;
};
struct UUIScript_eventOnEnterState_Parms
{
    FName a_PreStateName;
};
struct UUIScript_eventOnMinimize_Parms
{
};
struct UUIScript_eventOnTimer_Parms
{
    INT TimerID;
};
struct UUIScript_eventOnEventWithParamMap_Parms
{
    INT a_EventID;
    FParamMap a_ParamMap;
};
struct UUIScript_eventOnEvent_Parms
{
    INT a_EventID;
    FString a_Param;
};
struct UUIScript_eventOnHide_Parms
{
};
struct UUIScript_eventOnShow_Parms
{
};
struct UUIScript_eventOnTick_Parms
{
};
struct UUIScript_eventOnLoad_Parms
{
};
class NWINDOW_API UUIScript : public UUIEventManager
{
public:
    class UWindowHandle* m_hOwnerWnd;
    BITFIELD m_bCreated:1 GCC_PACK(4);
    DECLARE_FUNCTION(execGetShortcutString);
    DECLARE_FUNCTION(execIsUseSecondaryAuth);
    DECLARE_FUNCTION(execRequestSecondaryAuthModify);
    DECLARE_FUNCTION(execRequestSecondaryAuthVerify);
    DECLARE_FUNCTION(execRequestSecondaryAuthCreate);
    DECLARE_FUNCTION(execIsUseGoodsInvnentory);
    DECLARE_FUNCTION(execGetGoodsIconName);
    DECLARE_FUNCTION(execRequestUseGoodsInventoryItem);
    DECLARE_FUNCTION(execRequestGoodsInventoryItemDesc);
    DECLARE_FUNCTION(execRequestGoodsInventoryItemList);
    DECLARE_FUNCTION(execGetFormattedTimeStrMMHH);
    DECLARE_FUNCTION(execBR_GetDayType);
    DECLARE_FUNCTION(execBR_ConvertTimeToStr);
    DECLARE_FUNCTION(execBR_GetShowEventUI);
    DECLARE_FUNCTION(execIsUsingPrimeShop);
    DECLARE_FUNCTION(execShowCashChargeWebSite);
    DECLARE_FUNCTION(execRequestBR_MinigameInsertScore);
    DECLARE_FUNCTION(execRequestBR_MinigameLoadScores);
    DECLARE_FUNCTION(execRequestBR_RecentProductList);
    DECLARE_FUNCTION(execRequestBR_BuyProduct);
    DECLARE_FUNCTION(execRequestBR_ProductInfo);
    DECLARE_FUNCTION(execRequestBR_ProductList);
    DECLARE_FUNCTION(execRequestBR_GamePoint);
    DECLARE_FUNCTION(execSetUseHDRRenderEffect);
    DECLARE_FUNCTION(execSetHDRRenderVal);
    DECLARE_FUNCTION(execRequestFinishNPCZoomCamera);
    DECLARE_FUNCTION(execToggleReplayRec);
    DECLARE_FUNCTION(execSetMotionBlurAlpha);
    DECLARE_FUNCTION(execSetMotionBlurUse);
    DECLARE_FUNCTION(execRequestPartyMatchWaitList);
    DECLARE_FUNCTION(execRequestSetPostEffect);
    DECLARE_FUNCTION(execRequestSetRGBVal);
    DECLARE_FUNCTION(execRequestSetRGBConversionEffect);
    DECLARE_FUNCTION(execRequestSetHSVVal);
    DECLARE_FUNCTION(execRequestSetHSVConversionEffect);
    DECLARE_FUNCTION(execRequestSetYCbCrVal);
    DECLARE_FUNCTION(execRequestSetYCbCrConversionEffect);
    DECLARE_FUNCTION(execOpenL2Home);
    DECLARE_FUNCTION(execOpenGivenURL);
    DECLARE_FUNCTION(execGetRadioButtonHandle);
    DECLARE_FUNCTION(execRequestAddExpandQuestAlarm);
    DECLARE_FUNCTION(execRequestAskMemberShip);
    DECLARE_FUNCTION(execRequestPartyLootingModifyAgreement);
    DECLARE_FUNCTION(execRequestPartyLootingModify);
    DECLARE_FUNCTION(execGetMyComputerPath);
    DECLARE_FUNCTION(execGetDesktopPath);
    DECLARE_FUNCTION(execGetMydocumentPath);
    DECLARE_FUNCTION(execAnswerCoupleAction);
    DECLARE_FUNCTION(execGetDrivesInfoList);
    DECLARE_FUNCTION(execGetFilesInfoList);
    DECLARE_FUNCTION(execRequestMoveToMerchant);
    DECLARE_FUNCTION(execRefreshPrivateMarketInfo);
    DECLARE_FUNCTION(execClearAllPrivateMarketInfo);
    DECLARE_FUNCTION(execRequestChangeDiamondMesh);
    DECLARE_FUNCTION(execRequestChangeParticleEmitter);
    DECLARE_FUNCTION(execRequestSetSnowMeshScale);
    DECLARE_FUNCTION(execRequestSetSnowSpeed);
    DECLARE_FUNCTION(execRequestSetSnowEmitterParticleNum);
    DECLARE_FUNCTION(execRequestSetSnowWeight);
    DECLARE_FUNCTION(execRequestDeleteSnowEffect);
    DECLARE_FUNCTION(execRequestCreateSnowEffect);
    DECLARE_FUNCTION(execRequestSetRainMeshScale);
    DECLARE_FUNCTION(execRequestSetRainSpeed);
    DECLARE_FUNCTION(execRequestSetRainEmitterParticleNum);
    DECLARE_FUNCTION(execRequestSetRainWeight);
    DECLARE_FUNCTION(execRequestSetWeatherEffect);
    DECLARE_FUNCTION(execRequestDeleteRainEffect);
    DECLARE_FUNCTION(execRequestCreateRainEffect);
    DECLARE_FUNCTION(execRequestBR_EventRankerList);
    DECLARE_FUNCTION(execGetGameStateName);
    DECLARE_FUNCTION(execRequestBuySellUIClose);
    DECLARE_FUNCTION(execGetUseNewPetitionBool);
    DECLARE_FUNCTION(execRequestShowStepThree);
    DECLARE_FUNCTION(execRequestShowStepTwo);
    DECLARE_FUNCTION(execRequestShowNewUserPetition);
    DECLARE_FUNCTION(execRequestPostItemList);
    DECLARE_FUNCTION(execRequestCancelSentPost);
    DECLARE_FUNCTION(execRequestRequestSentPost);
    DECLARE_FUNCTION(execRequestDeleteSentPost);
    DECLARE_FUNCTION(execRequestRequestSentPostList);
    DECLARE_FUNCTION(execRequestRejectPost);
    DECLARE_FUNCTION(execRequestReceivePost);
    DECLARE_FUNCTION(execRequestRequestReceivedPost);
    DECLARE_FUNCTION(execRequestDeleteReceivedPost);
    DECLARE_FUNCTION(execRequestRequestReceivedPostList);
    DECLARE_FUNCTION(execRequestSendPost);
    DECLARE_FUNCTION(execRequestRefundItem);
    DECLARE_FUNCTION(execGetChatColorByType);
    DECLARE_FUNCTION(execGetDominionFlagIconTex);
    DECLARE_FUNCTION(execRequestDominionInfo);
    DECLARE_FUNCTION(execRequestJoinDominionWar);
    DECLARE_FUNCTION(execRequestStopShowCrataeCubeRank);
    DECLARE_FUNCTION(execRequestStartShowCrataeCubeRank);
    DECLARE_FUNCTION(execRequestWithDrawPremiumItem);
    DECLARE_FUNCTION(execGetNicknameColorWithIndex);
    DECLARE_FUNCTION(execGetMaxNicknameColorIndexCnt);
    DECLARE_FUNCTION(execRequestChangeNicknameNColor);
    DECLARE_FUNCTION(execChatNotificationFilter);
    DECLARE_FUNCTION(execRequestPVPMatchRecord);
    DECLARE_FUNCTION(execRequestFortressMapInfo);
    DECLARE_FUNCTION(execRequestFortressSiegeInfo);
    DECLARE_FUNCTION(execRequestAllAgitInfo);
    DECLARE_FUNCTION(execRequestAllFortressInfo);
    DECLARE_FUNCTION(execRequestAllCastleInfo);
    DECLARE_FUNCTION(execCharacterCreateGetClassType);
    DECLARE_FUNCTION(execCheckValidName);
    DECLARE_FUNCTION(execCheckNameLength);
    DECLARE_FUNCTION(execDefaultCharacterStop);
    DECLARE_FUNCTION(execDefaultCharacterTurn);
    DECLARE_FUNCTION(execSetCharacterStyle);
    DECLARE_FUNCTION(execShowOnlyOneDefaultCharacter);
    DECLARE_FUNCTION(execGetClassDescription);
    DECLARE_FUNCTION(execExecLobbyEvent);
    DECLARE_FUNCTION(execSetCurrentMakingRace);
    DECLARE_FUNCTION(execShowAllDefaultCharacter);
    DECLARE_FUNCTION(execSpawnDefaultCharacter);
    DECLARE_FUNCTION(execClearDefaultCharacterInfo);
    DECLARE_FUNCTION(execSetDefaultCharacter);
    DECLARE_FUNCTION(execRequestPrevState);
    DECLARE_FUNCTION(execRequestCreateCharacter);
    DECLARE_FUNCTION(execSetSelectedCharacter);
    DECLARE_FUNCTION(execIsDisciplineCharacter);
    DECLARE_FUNCTION(execIsScheduledToDeleteCharacter);
    DECLARE_FUNCTION(execResetCharacterPosition);
    DECLARE_FUNCTION(execRequestDeleteCharacter);
    DECLARE_FUNCTION(execRequestRestoreCharacter);
    DECLARE_FUNCTION(execGetSelectedCharacterInfo);
    DECLARE_FUNCTION(execRequestCharacterSelect);
    DECLARE_FUNCTION(execStartGame);
    DECLARE_FUNCTION(execGotoLogin);
    DECLARE_FUNCTION(execCreateNewCharacter);
    DECLARE_FUNCTION(execShowEnableTrackerBox);
    DECLARE_FUNCTION(execExecuteAlign);
    DECLARE_FUNCTION(execDeleteAttachedWindow);
    DECLARE_FUNCTION(execClearTracker);
    DECLARE_FUNCTION(execGetTrackerAttachedWindow);
    DECLARE_FUNCTION(execGetTrackerAttachedWindowList);
    DECLARE_FUNCTION(execShowExampleAnimation);
    DECLARE_FUNCTION(execShowVirtualWindowBackground);
    DECLARE_FUNCTION(execGetXMLControlIndex);
    DECLARE_FUNCTION(execGetXMLControlString);
    DECLARE_FUNCTION(execGetInterfaceDir);
    DECLARE_FUNCTION(execInitCreditState);
    DECLARE_FUNCTION(execShowMessageInLogin);
    DECLARE_FUNCTION(execGetQuestLocation);
    DECLARE_FUNCTION(execToggleMsnWindow);
    DECLARE_FUNCTION(execGetManorNameInManorList);
    DECLARE_FUNCTION(execGetManorIDInManorList);
    DECLARE_FUNCTION(execGetManorCount);
    DECLARE_FUNCTION(execRequestProcureCropList);
    DECLARE_FUNCTION(execFishFinalAction);
    DECLARE_FUNCTION(execInitFishViewportWnd);
    DECLARE_FUNCTION(execRequestFishRanking);
    DECLARE_FUNCTION(execGetSceneMusicCtrlHandle);
    DECLARE_FUNCTION(execGetSceneScreenCtrlHandle);
    DECLARE_FUNCTION(execGetScenePcCtrlHandle);
    DECLARE_FUNCTION(execGetSceneNpcCtrlHandle);
    DECLARE_FUNCTION(execGetSceneCameraCtrlHandle);
    DECLARE_FUNCTION(execGetCharacterViewportWindowHandle);
    DECLARE_FUNCTION(execGetWindowHandle);
    DECLARE_FUNCTION(execGetVideoPlayerCtrlHandle);
    DECLARE_FUNCTION(execGetTreeHandle);
    DECLARE_FUNCTION(execGetTextureHandle);
    DECLARE_FUNCTION(execGetTextListBoxHandle);
    DECLARE_FUNCTION(execGetTextBoxHandle);
    DECLARE_FUNCTION(execGetTabHandle);
    DECLARE_FUNCTION(execGetStatusIconHandle);
    DECLARE_FUNCTION(execGetStatusBarHandle);
    DECLARE_FUNCTION(execGetSliderCtrlHandle);
    DECLARE_FUNCTION(execGetRadarMapCtrlHandle);
    DECLARE_FUNCTION(execGetPropertyControllerHandle);
    DECLARE_FUNCTION(execGetProgressCtrlHandle);
    DECLARE_FUNCTION(execGetNameCtrlHandle);
    DECLARE_FUNCTION(execGetMinimapCtrlHandle);
    DECLARE_FUNCTION(execGetListCtrlHandle);
    DECLARE_FUNCTION(execGetListBoxHandle);
    DECLARE_FUNCTION(execGetItemWindowHandle);
    DECLARE_FUNCTION(execGetHtmlHandle);
    DECLARE_FUNCTION(execGetMultiEditBoxHandle);
    DECLARE_FUNCTION(execGetEditBoxHandle);
    DECLARE_FUNCTION(execGetDrawPanelHandle);
    DECLARE_FUNCTION(execGetComboBoxHandle);
    DECLARE_FUNCTION(execGetCheckBoxHandle);
    DECLARE_FUNCTION(execGetChatWindowHandle);
    DECLARE_FUNCTION(execGetButtonHandle);
    DECLARE_FUNCTION(execGetBarHandle);
    DECLARE_FUNCTION(execGetAnimTextureHandle);
    DECLARE_FUNCTION(execFindHandle);
    DECLARE_FUNCTION(execGetHandle);
    DECLARE_FUNCTION(execRequestObserverModeEnd);
    DECLARE_FUNCTION(execRequestExEnchantSkill);
    DECLARE_FUNCTION(execRequestExEnchantSkillInfoDetail);
    DECLARE_FUNCTION(execRequestExEnchantSkillInfo);
    DECLARE_FUNCTION(execRequestAcquireSkillSubClan);
    DECLARE_FUNCTION(execRequestAcquireSkill);
    DECLARE_FUNCTION(execRequestAcquireSkillInfo);
    DECLARE_FUNCTION(execBeginBenchMark);
    DECLARE_FUNCTION(execBeginPlay);
    DECLARE_FUNCTION(execEraseReplayFile);
    DECLARE_FUNCTION(execBeginReplay);
    DECLARE_FUNCTION(execGetDirList);
    DECLARE_FUNCTION(execGetFileList);
    DECLARE_FUNCTION(execGetCharacterSelectionActor);
    DECLARE_FUNCTION(execGetPlayerPosition);
    DECLARE_FUNCTION(execGetPlayerActor);
    DECLARE_FUNCTION(execSetChatMessage);
    DECLARE_FUNCTION(execRequestHennaUnEquip);
    DECLARE_FUNCTION(execRequestHennaUnEquipList);
    DECLARE_FUNCTION(execRequestHennaUnEquipInfo);
    DECLARE_FUNCTION(execRequestHennaEquip);
    DECLARE_FUNCTION(execRequestHennaItemList);
    DECLARE_FUNCTION(execRequestHennaItemInfo);
    DECLARE_FUNCTION(execGetLootingMethodName);
    DECLARE_FUNCTION(execGetInZoneNameWithZoneID);
    DECLARE_FUNCTION(execGetCurrentZoneID);
    DECLARE_FUNCTION(execGetCurrentZoneName);
    DECLARE_FUNCTION(execGetZoneNameWithZoneID);
    DECLARE_FUNCTION(execRequestOpenMinimap);
    DECLARE_FUNCTION(execStopSound);
    DECLARE_FUNCTION(execPlaySound);
    DECLARE_FUNCTION(execProcessCommandInterPartyChatMessage);
    DECLARE_FUNCTION(execProcessCommandChatMessage);
    DECLARE_FUNCTION(execProcessPartyMatchChatMessage);
    DECLARE_FUNCTION(execProcessPetitionChatMessage);
    DECLARE_FUNCTION(execProcessChatMessage);
    DECLARE_FUNCTION(execSetItemTextLink);
    DECLARE_FUNCTION(execReturnTooltipInfo);
    DECLARE_FUNCTION(execSetOggVoiceVolume);
    DECLARE_FUNCTION(execSetWavVoiceVolume);
    DECLARE_FUNCTION(execSetMusicVolume);
    DECLARE_FUNCTION(execSetSoundVolume);
    DECLARE_FUNCTION(execGetConstantFloat);
    DECLARE_FUNCTION(execGetConstantBool);
    DECLARE_FUNCTION(execGetConstantString);
    DECLARE_FUNCTION(execGetConstantInt);
    DECLARE_FUNCTION(execSetINIString);
    DECLARE_FUNCTION(execSetINIFloat);
    DECLARE_FUNCTION(execSetINIInt);
    DECLARE_FUNCTION(execSetINIBool);
    DECLARE_FUNCTION(execGetINIString);
    DECLARE_FUNCTION(execGetINIFloat);
    DECLARE_FUNCTION(execGetINIInt);
    DECLARE_FUNCTION(execGetINIBool);
    DECLARE_FUNCTION(execRefreshINI);
    DECLARE_FUNCTION(execRequestSaveInventoryOrder);
    DECLARE_FUNCTION(execGetRaceTicketString);
    DECLARE_FUNCTION(execGetLottoString);
    DECLARE_FUNCTION(execIsMagicalArmor);
    DECLARE_FUNCTION(execGetMagicalDefense);
    DECLARE_FUNCTION(execGetPhysicalDefense);
    DECLARE_FUNCTION(execGetShieldDefense);
    DECLARE_FUNCTION(execGetAttackSpeedString);
    DECLARE_FUNCTION(execGetMagicalDamage);
    DECLARE_FUNCTION(execGetPhysicalDamage);
    DECLARE_FUNCTION(execGetWeaponTypeString);
    DECLARE_FUNCTION(execGetSlotTypeString);
    DECLARE_FUNCTION(execGetInventoryItemCount);
    DECLARE_FUNCTION(execGetOptionString);
    DECLARE_FUNCTION(execGetOptionFloat);
    DECLARE_FUNCTION(execGetOptionInt);
    DECLARE_FUNCTION(execGetOptionBool);
    DECLARE_FUNCTION(execSetOptionString);
    DECLARE_FUNCTION(execSetOptionFloat);
    DECLARE_FUNCTION(execSetOptionInt);
    DECLARE_FUNCTION(execSetOptionBool);
    DECLARE_FUNCTION(execStopMacro);
    DECLARE_FUNCTION(execIsStackableItem);
    DECLARE_FUNCTION(execUseSkill);
    DECLARE_FUNCTION(execDoAction);
    DECLARE_FUNCTION(execExecuteCommandFromAction);
    DECLARE_FUNCTION(execExecuteCommand);
    DECLARE_FUNCTION(execSetFixedDefaultCamera);
    DECLARE_FUNCTION(execSetIgnorePartyInviting);
    DECLARE_FUNCTION(execSetRenderCharacterCount);
    DECLARE_FUNCTION(execSetShaderWaterEffect);
    DECLARE_FUNCTION(execSetDepthBufferShadow);
    DECLARE_FUNCTION(execSetDOF);
    DECLARE_FUNCTION(execSetL2Shader);
    DECLARE_FUNCTION(execSetWeatherEffect);
    DECLARE_FUNCTION(execSetHDR);
    DECLARE_FUNCTION(execSetReflectionEffect);
    DECLARE_FUNCTION(execSetPawnClippingRange);
    DECLARE_FUNCTION(execSetTerrainClippingRange);
    DECLARE_FUNCTION(execSetBackgroundEffect);
    DECLARE_FUNCTION(execSetShadow);
    DECLARE_FUNCTION(execSetMotionDetail);
    DECLARE_FUNCTION(execSetModelingDetail);
    DECLARE_FUNCTION(execSetTextureDetail);
    DECLARE_FUNCTION(execSetKeyCrypt);
    DECLARE_FUNCTION(execSetDefaultPosition);
    DECLARE_FUNCTION(execGetShaderVersion);
    DECLARE_FUNCTION(execGetResolutionIndex);
    DECLARE_FUNCTION(execGetMultiSample);
    DECLARE_FUNCTION(execSetResolution);
    DECLARE_FUNCTION(execGetRefreshRateList);
    DECLARE_FUNCTION(execGetResolutionList);
    DECLARE_FUNCTION(execGetLanguage);
    DECLARE_FUNCTION(execIsEnableKeyCrypt);
    DECLARE_FUNCTION(execIsCheckKeyCrypt);
    DECLARE_FUNCTION(execIsUseKeyCrypt);
    DECLARE_FUNCTION(execIsEnableEngSelection);
    DECLARE_FUNCTION(execCanUseHDR);
    DECLARE_FUNCTION(execCanUseJoystick);
    DECLARE_FUNCTION(execCanUseAudio);
    DECLARE_FUNCTION(execGetServerType);
    DECLARE_FUNCTION(execGetServerNo);
    DECLARE_FUNCTION(execGetServerAgeLimit);
    DECLARE_FUNCTION(execExecQuit);
    DECLARE_FUNCTION(execExecRestart);
    DECLARE_FUNCTION(execEndSystemMessageParam);
    DECLARE_FUNCTION(execAddSystemMessageParam);
    DECLARE_FUNCTION(execAddSystemMessageString);
    DECLARE_FUNCTION(execAddSystemMessage);
    DECLARE_FUNCTION(execGetPrivateShopMessage);
    DECLARE_FUNCTION(execSetPrivateShopMessage);
    DECLARE_FUNCTION(execIsSameChatPrefix);
    DECLARE_FUNCTION(execGetChatPrefix);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetCurrentResolution);
    DECLARE_FUNCTION(execGetClickLocation);
    DECLARE_FUNCTION(execCheckItemLimit);
    DECLARE_FUNCTION(execIsTriggerSkill);
    DECLARE_FUNCTION(execIsSongDance);
    DECLARE_FUNCTION(execIsDebuff);
    DECLARE_FUNCTION(execGetRoutingString);
    DECLARE_FUNCTION(execGetUserRankString);
    DECLARE_FUNCTION(execRequestBypassToServer);
    DECLARE_FUNCTION(execGetAllianceCrestTexFromAllianceCrestID);
    DECLARE_FUNCTION(execGetPledgeCrestTexFromPledgeCrestID);
    DECLARE_FUNCTION(execGetCurrentIMELang);
    DECLARE_FUNCTION(execPlayConsoleSound);
    DECLARE_FUNCTION(execGetNumericColor);
    DECLARE_FUNCTION(execConvertTimeToString);
    DECLARE_FUNCTION(execConvertNumToTextNoAdena);
    DECLARE_FUNCTION(execConvertNumToText);
    DECLARE_FUNCTION(execMakeCostString);
    DECLARE_FUNCTION(execMakeCostStringINT64);
    DECLARE_FUNCTION(execGetItemGradeTextureName);
    DECLARE_FUNCTION(execGetItemGradeString);
    DECLARE_FUNCTION(execMakeFullItemName);
    DECLARE_FUNCTION(execNextStringWithWidth);
    DECLARE_FUNCTION(execDivideStringWithWidth);
    DECLARE_FUNCTION(execGetTextSize);
    DECLARE_FUNCTION(execGetTextSizeDefault);
    DECLARE_FUNCTION(execMakeFullSystemMsg);
    DECLARE_FUNCTION(execGetScript);
    DECLARE_FUNCTION(execGetSystemMessageWithParamNumber);
    DECLARE_FUNCTION(execGetSystemMsgInfo);
    DECLARE_FUNCTION(execGetSystemMessage);
    DECLARE_FUNCTION(execGetSystemString);
    DECLARE_FUNCTION(execIsKeyDown);
    DECLARE_FUNCTION(execDebug);
    DECLARE_FUNCTION(execConvertTimetoStr);
    DECLARE_FUNCTION(execGetTimeString);
    DECLARE_FUNCTION(execMakeTimeStr);
    DECLARE_FUNCTION(execMakeBuffTimeStr);
    DECLARE_FUNCTION(execGetTeleportFlagCount);
    DECLARE_FUNCTION(execGetTeleportBookMarkCount);
    DECLARE_FUNCTION(execGetAdena);
    DECLARE_FUNCTION(execGetClanNameValue);
    DECLARE_FUNCTION(execGetClanName);
    DECLARE_FUNCTION(execIsBuilderPC);
    DECLARE_FUNCTION(execGetClassStep);
    DECLARE_FUNCTION(execGetDecoIndex);
    DECLARE_FUNCTION(execGetAccessoryItemID);
    DECLARE_FUNCTION(execGetSkillInfo);
    DECLARE_FUNCTION(execGetPetInfo);
    DECLARE_FUNCTION(execGetUserInfo);
    DECLARE_FUNCTION(execGetTargetInfo);
    DECLARE_FUNCTION(execGetPlayerInfo);
    DECLARE_FUNCTION(execGetClassIconName);
    DECLARE_FUNCTION(execGetClassStr);
    DECLARE_FUNCTION(execGetClassType);
    DECLARE_FUNCTION(execRequestInviteMpcc);
    DECLARE_FUNCTION(execRequestInviteParty);
    DECLARE_FUNCTION(execHasClanEmblem);
    DECLARE_FUNCTION(execHasClanCrest);
    DECLARE_FUNCTION(execGetCastleName);
    DECLARE_FUNCTION(execRequestPCCafeCouponUse);
    DECLARE_FUNCTION(execRequestClanMemberAuth);
    DECLARE_FUNCTION(execRequestEditClanAuth);
    DECLARE_FUNCTION(execRequestClanAuth);
    DECLARE_FUNCTION(execRequestClanWarList);
    DECLARE_FUNCTION(execRequestClanChangeNickName);
    DECLARE_FUNCTION(execRequestAllianceRegisterCrestByFilePath);
    DECLARE_FUNCTION(execRequestClanUnregisterEmblem);
    DECLARE_FUNCTION(execRequestClanRegisterEmblem);
    DECLARE_FUNCTION(execRequestClanRegisterEmblemByFilePath);
    DECLARE_FUNCTION(execRequestClanUnregisterCrest);
    DECLARE_FUNCTION(execRequestClanRegisterCrest);
    DECLARE_FUNCTION(execRequestClanRegisterCrestByFilePath);
    DECLARE_FUNCTION(execRequestClanReorganizeMember);
    DECLARE_FUNCTION(execRequestClanWithdrawWarWithClanName);
    DECLARE_FUNCTION(execRequestClanWithdrawWar);
    DECLARE_FUNCTION(execRequestClanDeclareWarWithClanName);
    DECLARE_FUNCTION(execRequestClanDeclareWarWithUserID);
    DECLARE_FUNCTION(execRequestClanDeclareWar);
    DECLARE_FUNCTION(execRequestClanAskJoin);
    DECLARE_FUNCTION(execRequestClanExpelMember);
    DECLARE_FUNCTION(execRequestClanLeave);
    DECLARE_FUNCTION(execRequestClanDeletePupil);
    DECLARE_FUNCTION(execRequestClanAssignPupil);
    DECLARE_FUNCTION(execRequestClanChangeGrade);
    DECLARE_FUNCTION(execRequestClanGradeList);
    DECLARE_FUNCTION(execRequestClanMemberInfo);
    DECLARE_FUNCTION(execGetPartyMemberLocationWithID);
    DECLARE_FUNCTION(execGetPartyMemberLocation);
    DECLARE_FUNCTION(execGetPartyMemberCount);
    DECLARE_FUNCTION(execSendPrivateShopList);
    DECLARE_FUNCTION(execRequestQuitPrivateShop);
    DECLARE_FUNCTION(execRequestDispel);
    DECLARE_FUNCTION(execRequestDuelSurrender);
    DECLARE_FUNCTION(execRequestDuelAnswerStart);
    DECLARE_FUNCTION(execRequestDuelStart);
    DECLARE_FUNCTION(execRequestItemList);
    DECLARE_FUNCTION(execRequestCrystallizeItem);
    DECLARE_FUNCTION(execRequestUnequipItem);
    DECLARE_FUNCTION(execRequestDropItem);
    DECLARE_FUNCTION(execRequestDestroyItem);
    DECLARE_FUNCTION(execRequestUseItem);
    DECLARE_FUNCTION(execBR_RequestRestartPoint);
    DECLARE_FUNCTION(execRequestRestartPoint);
    DECLARE_FUNCTION(execRequestMultiSellChoose);
    DECLARE_FUNCTION(execRequestBBSBoard);
    DECLARE_FUNCTION(execRequestPreviewItem);
    DECLARE_FUNCTION(execRequestPackageSend);
    DECLARE_FUNCTION(execRequestPackageSendableItemList);
    DECLARE_FUNCTION(execRequestChangePetName);
    DECLARE_FUNCTION(execRequestWarehouseWithdraw);
    DECLARE_FUNCTION(execRequestWarehouseDeposit);
    DECLARE_FUNCTION(execRequestTargetUser);
    DECLARE_FUNCTION(execRequestAssist);
    DECLARE_FUNCTION(execRequestAction);
    DECLARE_FUNCTION(execRequestAttack);
    DECLARE_FUNCTION(execRequestSetCrop);
    DECLARE_FUNCTION(execRequestSetSeed);
    DECLARE_FUNCTION(execRequestBuySeed);
    DECLARE_FUNCTION(execRequestBuyItem);
    DECLARE_FUNCTION(execRequestSellItem);
    DECLARE_FUNCTION(execAnswerTradeRequest);
    DECLARE_FUNCTION(execRequestAddTradeItem);
    DECLARE_FUNCTION(execRequestStartTrade);
    DECLARE_FUNCTION(execRequestTradeDone);
    DECLARE_FUNCTION(execRequestRaidRecord);
    DECLARE_FUNCTION(execRequestSkillList);
    DECLARE_FUNCTION(execRequestTargetCancel);
    DECLARE_FUNCTION(execRequestSelfTarget);
    DECLARE_FUNCTION(execRequestAuthCardKeyLogin);
    DECLARE_FUNCTION(execRequestExit);
    DECLARE_FUNCTION(execIsPKMode);
    void eventOnModifyCurrentTickSliderCtrl(const FString& strID, INT iCurrentTick)
    {
        UUIScript_eventOnModifyCurrentTickSliderCtrl_Parms Parms;
        Parms.strID=strID;
        Parms.iCurrentTick=iCurrentTick;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnModifyCurrentTickSliderCtrl),&Parms);
    }
    void eventOnFlashCtrlMsg(class UFlashCtrlHandle* a_FlashCtrlHandle, const FString& a_Param)
    {
        UUIScript_eventOnFlashCtrlMsg_Parms Parms;
        Parms.a_FlashCtrlHandle=a_FlashCtrlHandle;
        Parms.a_Param=a_Param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnFlashCtrlMsg),&Parms);
    }
    void eventOnHtmlMsgHideWindow(class UHtmlHandle* a_HtmlHandle)
    {
        UUIScript_eventOnHtmlMsgHideWindow_Parms Parms;
        Parms.a_HtmlHandle=a_HtmlHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnHtmlMsgHideWindow),&Parms);
    }
    void eventOnPropertyControllerResize(INT a_Height)
    {
        UUIScript_eventOnPropertyControllerResize_Parms Parms;
        Parms.a_Height=a_Height;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnPropertyControllerResize),&Parms);
    }
    void eventOnTextureAnimEnd(class UAnimTextureHandle* a_AnimTextureHandle)
    {
        UUIScript_eventOnTextureAnimEnd_Parms Parms;
        Parms.a_AnimTextureHandle=a_AnimTextureHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTextureAnimEnd),&Parms);
    }
    void eventOnComboBoxItemSelected(const FString& strID, INT Index)
    {
        UUIScript_eventOnComboBoxItemSelected_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnComboBoxItemSelected),&Parms);
    }
    void eventOnProgressTimeUp(const FString& strID)
    {
        UUIScript_eventOnProgressTimeUp_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnProgressTimeUp),&Parms);
    }
    void eventOnSelectItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnSelectItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnSelectItemWithHandle),&Parms);
    }
    void eventOnDBClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnDBClickItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickItemWithHandle),&Parms);
    }
    void eventOnRClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnRClickItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickItemWithHandle),&Parms);
    }
    void eventOnRDBClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnRDBClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRDBClickItem),&Parms);
    }
    void eventOnRClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnRClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickItem),&Parms);
    }
    void eventOnDBClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnDBClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickItem),&Parms);
    }
    void eventOnClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickItem),&Parms);
    }
    void eventOnClickCheckBox(const FString& strID)
    {
        UUIScript_eventOnClickCheckBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickCheckBox),&Parms);
    }
    void eventOnRButtonClickListBoxItem(const FString& strID, INT SelectedIndex)
    {
        UUIScript_eventOnRButtonClickListBoxItem_Parms Parms;
        Parms.strID=strID;
        Parms.SelectedIndex=SelectedIndex;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonClickListBoxItem),&Parms);
    }
    void eventOnDBClickListBoxItem(const FString& strID, INT SelectedIndex)
    {
        UUIScript_eventOnDBClickListBoxItem_Parms Parms;
        Parms.strID=strID;
        Parms.SelectedIndex=SelectedIndex;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickListBoxItem),&Parms);
    }
    void eventOnDBClickListCtrlRecord(const FString& strID)
    {
        UUIScript_eventOnDBClickListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickListCtrlRecord),&Parms);
    }
    void eventOnClickListCtrlRecord(const FString& strID)
    {
        UUIScript_eventOnClickListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickListCtrlRecord),&Parms);
    }
    void eventOnChatMarkedEditBox(const FString& strID)
    {
        UUIScript_eventOnChatMarkedEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnChatMarkedEditBox),&Parms);
    }
    void eventOnChangeEditBox(const FString& strID)
    {
        UUIScript_eventOnChangeEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnChangeEditBox),&Parms);
    }
    void eventOnCompleteEditBox(const FString& strID)
    {
        UUIScript_eventOnCompleteEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnCompleteEditBox),&Parms);
    }
    void eventOnTabMerge(const FString& sName)
    {
        UUIScript_eventOnTabMerge_Parms Parms;
        Parms.sName=sName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTabMerge),&Parms);
    }
    void eventOnTabSplit(const FString& sName)
    {
        UUIScript_eventOnTabSplit_Parms Parms;
        Parms.sName=sName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTabSplit),&Parms);
    }
    void eventOnButtonTimer(BITFIELD bExpired)
    {
        UUIScript_eventOnButtonTimer_Parms Parms;
        Parms.bExpired=bExpired;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnButtonTimer),&Parms);
    }
    void eventOnClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
    {
        UUIScript_eventOnClickButtonWithHandle_Parms Parms;
        Parms.a_ButtonHandle=a_ButtonHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickButtonWithHandle),&Parms);
    }
    void eventOnClickButton(const FString& strID)
    {
        UUIScript_eventOnClickButton_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickButton),&Parms);
    }
    void eventOnDropWnd(class UWindowHandle* hTarget, class UWindowHandle* hDropWnd, INT X, INT Y)
    {
        UUIScript_eventOnDropWnd_Parms Parms;
        Parms.hTarget=hTarget;
        Parms.hDropWnd=hDropWnd;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropWnd),&Parms);
    }
    void eventOnDropItemWithHandle(class UWindowHandle* hTarget, FItemInfo infItem, INT X, INT Y)
    {
        UUIScript_eventOnDropItemWithHandle_Parms Parms;
        Parms.hTarget=hTarget;
        Parms.infItem=infItem;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItemWithHandle),&Parms);
    }
    void eventOnDropItemSource(const FString& strTarget, FItemInfo infItem)
    {
        UUIScript_eventOnDropItemSource_Parms Parms;
        Parms.strTarget=strTarget;
        Parms.infItem=infItem;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItemSource),&Parms);
    }
    void eventOnDragItemEnd(const FString& strID)
    {
        UUIScript_eventOnDragItemEnd_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDragItemEnd),&Parms);
    }
    void eventOnDragItemStart(const FString& strID, FItemInfo infItem)
    {
        UUIScript_eventOnDragItemStart_Parms Parms;
        Parms.strID=strID;
        Parms.infItem=infItem;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDragItemStart),&Parms);
    }
    void eventOnDropItem(const FString& strID, FItemInfo infItem, INT X, INT Y)
    {
        UUIScript_eventOnDropItem_Parms Parms;
        Parms.strID=strID;
        Parms.infItem=infItem;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItem),&Parms);
    }
    void eventOnMouseMove(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMouseMove_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseMove),&Parms);
    }
    void eventOnMouseOut(class UWindowHandle* a_WindowHandle)
    {
        UUIScript_eventOnMouseOut_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseOut),&Parms);
    }
    void eventOnMouseOver(class UWindowHandle* a_WindowHandle)
    {
        UUIScript_eventOnMouseOver_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseOver),&Parms);
    }
    void eventOnMButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMButtonUp),&Parms);
    }
    void eventOnMButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMButtonDown),&Parms);
    }
    void eventOnRButtonDblClick(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonDblClick_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonDblClick),&Parms);
    }
    void eventOnRButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonUp),&Parms);
    }
    void eventOnRButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonDown),&Parms);
    }
    void eventOnLButtonDblClick(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonDblClick_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonDblClick),&Parms);
    }
    void eventOnLButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonUp),&Parms);
    }
    void eventOnLButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonDown),&Parms);
    }
    void eventOnKeyUp(class UWindowHandle* a_WindowHandle, BYTE Key)
    {
        UUIScript_eventOnKeyUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.Key=Key;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnKeyUp),&Parms);
    }
    void eventOnKeyDown(class UWindowHandle* a_WindowHandle, BYTE Key)
    {
        UUIScript_eventOnKeyDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.Key=Key;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnKeyDown),&Parms);
    }
    void eventOnRegisterEvent()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRegisterEvent),NULL);
    }
    void eventOnDrawerHideFinished()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDrawerHideFinished),NULL);
    }
    void eventOnDrawerShowFinished()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDrawerShowFinished),NULL);
    }
    void eventOnDefaultPosition()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDefaultPosition),NULL);
    }
    void eventOnSendPacketWhenHiding()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnSendPacketWhenHiding),NULL);
    }
    void eventOnExitState(FName a_NextStateName)
    {
        UUIScript_eventOnExitState_Parms Parms;
        Parms.a_NextStateName=a_NextStateName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnExitState),&Parms);
    }
    void eventOnEnterState(FName a_PreStateName)
    {
        UUIScript_eventOnEnterState_Parms Parms;
        Parms.a_PreStateName=a_PreStateName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEnterState),&Parms);
    }
    void eventOnMinimize()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMinimize),NULL);
    }
    void eventOnTimer(INT TimerID)
    {
        UUIScript_eventOnTimer_Parms Parms;
        Parms.TimerID=TimerID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTimer),&Parms);
    }
    void eventOnEventWithParamMap(INT a_EventID, FParamMap a_ParamMap)
    {
        UUIScript_eventOnEventWithParamMap_Parms Parms;
        Parms.a_EventID=a_EventID;
        Parms.a_ParamMap=a_ParamMap;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEventWithParamMap),&Parms);
    }
    void eventOnEvent(INT a_EventID, const FString& a_Param)
    {
        UUIScript_eventOnEvent_Parms Parms;
        Parms.a_EventID=a_EventID;
        Parms.a_Param=a_Param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEvent),&Parms);
    }
    void eventOnHide()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnHide),NULL);
    }
    void eventOnShow()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnShow),NULL);
    }
    void eventOnTick()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTick),NULL);
    }
    void eventOnLoad()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLoad),NULL);
    }
    DECLARE_CLASS(UUIScript,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIScript)
};


class NWINDOW_API UGFxUIScript : public UUIScript
{
public:
    DECLARE_CLASS(UGFxUIScript,UUIScript,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGFxUIScript)
};


class NWINDOW_API UGMAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestSnoopEnd);
    DECLARE_FUNCTION(execGetObservingUserInfo);
    DECLARE_FUNCTION(execRequestGMCommand);
    DECLARE_FUNCTION(execBeginGMChangeServer);
    DECLARE_CLASS(UGMAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGMAPI)
};


class NWINDOW_API UInputAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetInputKey);
    DECLARE_FUNCTION(execGetKeyString);
    DECLARE_FUNCTION(execIsAltPressed);
    DECLARE_FUNCTION(execIsCtrlPressed);
    DECLARE_FUNCTION(execIsShiftPressed);
    DECLARE_CLASS(UInputAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UInputAPI)
};


class NWINDOW_API UMacroAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestMakeMacro);
    DECLARE_FUNCTION(execRequestDeleteMacro);
    DECLARE_FUNCTION(execRequestUseMacro);
    DECLARE_FUNCTION(execRequestMacroList);
    DECLARE_CLASS(UMacroAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMacroAPI)
};


class NWINDOW_API UPetAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestGetItemFromPet);
    DECLARE_FUNCTION(execRequestGiveItemToPet);
    DECLARE_FUNCTION(execRequestPetUseItem);
    DECLARE_FUNCTION(execRequestPetInventoryItemList);
    DECLARE_CLASS(UPetAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPetAPI)
};


class NWINDOW_API UPostWndAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestPledgeMemberList);
    DECLARE_FUNCTION(execRequestPostFriendList);
    DECLARE_FUNCTION(execRequestDeletingPostFriend);
    DECLARE_FUNCTION(execRequestAddingPostFriend);
    DECLARE_FUNCTION(execRequestFriendList);
    DECLARE_CLASS(UPostWndAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPostWndAPI)
};


class NWINDOW_API URecipeAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestRecipeShopListSet);
    DECLARE_FUNCTION(execRequestRecipeShopMessageSet);
    DECLARE_FUNCTION(execRequestRecipeShopManageQuit);
    DECLARE_FUNCTION(execRequestRecipeItemDelete);
    DECLARE_FUNCTION(execRequestRecipeBookOpen);
    DECLARE_FUNCTION(execRequestRecipeItemMakeInfo);
    DECLARE_FUNCTION(execRequestRecipeItemMakeSelf);
    DECLARE_FUNCTION(execRequestRecipeShopMakeDo);
    DECLARE_FUNCTION(execRequestRecipeShopSellList);
    DECLARE_FUNCTION(execRequestRecipeShopMakeInfo);
    DECLARE_CLASS(URecipeAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URecipeAPI)
};


class NWINDOW_API URefineryAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestRefineCancel);
    DECLARE_FUNCTION(execConfirmCancelItem);
    DECLARE_FUNCTION(execRequestRefine);
    DECLARE_FUNCTION(execConfirmGemStone);
    DECLARE_FUNCTION(execConfirmRefinerItem);
    DECLARE_FUNCTION(execConfirmTargetItem);
    DECLARE_CLASS(URefineryAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URefineryAPI)
};


class NWINDOW_API UShortcutAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execRestoreDefault);
    DECLARE_FUNCTION(execDeactivateAll);
    DECLARE_FUNCTION(execDeactivateGroup);
    DECLARE_FUNCTION(execActivateGroup);
    DECLARE_FUNCTION(execExecuteShortcutBySlot);
    DECLARE_FUNCTION(execRequestShortcutScriptData);
    DECLARE_FUNCTION(execRequestList);
    DECLARE_FUNCTION(execSave);
    DECLARE_FUNCTION(execUnlockShortcut);
    DECLARE_FUNCTION(execLockShortcut);
    DECLARE_FUNCTION(execGetAssignedKeyFromCommand);
    DECLARE_FUNCTION(execGetActiveGroupList);
    DECLARE_FUNCTION(execGetGroupList);
    DECLARE_FUNCTION(execGetGroupCommandList);
    DECLARE_FUNCTION(execAssignCommand);
    DECLARE_FUNCTION(execAssignSpecialKey);
    DECLARE_FUNCTION(execSetShortcutPage);
    DECLARE_CLASS(UShortcutAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UShortcutAPI)
};


class NWINDOW_API UTeamMatchAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestExBlockGameVote);
    DECLARE_FUNCTION(execRequestExBlockGameEnter);
    DECLARE_FUNCTION(execRequestBlockGameAllData);
    DECLARE_FUNCTION(execRequestExCleftEnter);
    DECLARE_FUNCTION(execRequestCleftAllData);
    DECLARE_CLASS(UTeamMatchAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTeamMatchAPI)
};


class NWINDOW_API UUIAPI_WINDOW : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetSelectedRadioButtonName);
    DECLARE_FUNCTION(execClearAnchor);
    DECLARE_FUNCTION(execSetAnchor);
    DECLARE_FUNCTION(execGetTooltipText);
    DECLARE_FUNCTION(execSetTooltipText);
    DECLARE_FUNCTION(execSetTooltipType);
    DECLARE_FUNCTION(execSetTabOrder);
    DECLARE_FUNCTION(execSetResizeFrameSize);
    DECLARE_FUNCTION(execSetFrameSize);
    DECLARE_FUNCTION(execSetWindowSizeRel43);
    DECLARE_FUNCTION(execSetWindowSizeRel);
    DECLARE_FUNCTION(execSetWindowSize);
    DECLARE_FUNCTION(execIsFocused);
    DECLARE_FUNCTION(execSetFocus);
    DECLARE_FUNCTION(execNotifyAlarm);
    DECLARE_FUNCTION(execIconize);
    DECLARE_FUNCTION(execMoveShake);
    DECLARE_FUNCTION(execMoveEx);
    DECLARE_FUNCTION(execMoveTo);
    DECLARE_FUNCTION(execMove);
    DECLARE_FUNCTION(execSetAlpha);
    DECLARE_FUNCTION(execSetAlwaysOnTop);
    DECLARE_FUNCTION(execIsEnableWindow);
    DECLARE_FUNCTION(execDisableWindow);
    DECLARE_FUNCTION(execEnableWindow);
    DECLARE_FUNCTION(execSetWindowTitleByText);
    DECLARE_FUNCTION(execSetWindowTitle);
    DECLARE_FUNCTION(execKillUITimer);
    DECLARE_FUNCTION(execSetUITimer);
    DECLARE_FUNCTION(execGetRect);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execHideWindow);
    DECLARE_FUNCTION(execShowWindow);
    DECLARE_FUNCTION(execIsMinimizedWindow);
    DECLARE_FUNCTION(execIsShowWindow);
    DECLARE_CLASS(UUIAPI_WINDOW,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_WINDOW)
};


class NWINDOW_API UUIAPI_BUTTON : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_CLASS(UUIAPI_BUTTON,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_BUTTON)
};


class NWINDOW_API UUIAPI_CHECKBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execToggleDisable);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execIsDisable);
    DECLARE_FUNCTION(execIsChecked);
    DECLARE_FUNCTION(execSetCheck);
    DECLARE_FUNCTION(execSetTitle);
    DECLARE_CLASS(UUIAPI_CHECKBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_CHECKBOX)
};


class NWINDOW_API UUIAPI_COMBOBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execAddStringWithColor);
    DECLARE_FUNCTION(execGetNumOfItems);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_FUNCTION(execGetReserved);
    DECLARE_FUNCTION(execGetString);
    DECLARE_FUNCTION(execSYS_AddStringWithReserved);
    DECLARE_FUNCTION(execAddStringWithReserved);
    DECLARE_FUNCTION(execSYS_AddString);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UUIAPI_COMBOBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_COMBOBOX)
};


class NWINDOW_API UUIAPI_EDITBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetHighLight);
    DECLARE_FUNCTION(execSetEditType);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSimulateBackspace);
    DECLARE_FUNCTION(execAddString);
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UUIAPI_EDITBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_EDITBOX)
};


class NWINDOW_API UUIAPI_EFFECTBUTTON : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execBeginEffect);
    DECLARE_CLASS(UUIAPI_EFFECTBUTTON,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_EFFECTBUTTON)
};


class NWINDOW_API UUIAPI_INVENWEIGHT : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execZeroWeight);
    DECLARE_FUNCTION(execReduceWeight);
    DECLARE_FUNCTION(execAddWeight);
    DECLARE_CLASS(UUIAPI_INVENWEIGHT,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_INVENWEIGHT)
};


class NWINDOW_API UUIAPI_ITEMWINDOW : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetFaded);
    DECLARE_FUNCTION(execFindItem);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetSelectedItem);
    DECLARE_FUNCTION(execDeleteItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execAddItem);
    DECLARE_FUNCTION(execClearSelect);
    DECLARE_FUNCTION(execGetItemNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_CLASS(UUIAPI_ITEMWINDOW,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_ITEMWINDOW)
};


class NWINDOW_API UUIAPI_LISTCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetSelectedIndex);
    DECLARE_FUNCTION(execGetSelectedIndex);
    DECLARE_FUNCTION(execGetRecordCount);
    DECLARE_FUNCTION(execDeleteRecord);
    DECLARE_FUNCTION(execDeleteAllItem);
    DECLARE_FUNCTION(execModifyRecord);
    DECLARE_FUNCTION(execInsertRecord);
    DECLARE_CLASS(UUIAPI_LISTCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_LISTCTRL)
};


class NWINDOW_API UUIAPI_MINIMAPCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execDeleteAllCursedWeaponIcon);
    DECLARE_FUNCTION(execIsOverlapped);
    DECLARE_FUNCTION(execRequestReduceBtn);
    DECLARE_FUNCTION(execDrawGridIcon);
    DECLARE_FUNCTION(execSetSSQStatus);
    DECLARE_FUNCTION(execSetShowQuest);
    DECLARE_FUNCTION(execDeleteAllTarget);
    DECLARE_FUNCTION(execDeleteTarget);
    DECLARE_FUNCTION(execAddTarget);
    DECLARE_FUNCTION(execAdjustMapView);
    DECLARE_CLASS(UUIAPI_MINIMAPCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MINIMAPCTRL)
};


class NWINDOW_API UUIAPI_MULTIEDITBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UUIAPI_MULTIEDITBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTIEDITBOX)
};


class NWINDOW_API UUIAPI_MULTISELLITEMINFO : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetItemInfo);
    DECLARE_CLASS(UUIAPI_MULTISELLITEMINFO,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTISELLITEMINFO)
};


class NWINDOW_API UUIAPI_MULTISELLNEEDEDITEM : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddData);
    DECLARE_CLASS(UUIAPI_MULTISELLNEEDEDITEM,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTISELLNEEDEDITEM)
};


class NWINDOW_API UUIAPI_SHORTCUTITEMWINDOW : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execUpdateShortcut);
    DECLARE_CLASS(UUIAPI_SHORTCUTITEMWINDOW,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_SHORTCUTITEMWINDOW)
};


class NWINDOW_API UUIAPI_SLIDERCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execGetTotalTickCount);
    DECLARE_FUNCTION(execSetCurrentTick);
    DECLARE_FUNCTION(execGetCurrentTick);
    DECLARE_CLASS(UUIAPI_SLIDERCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_SLIDERCTRL)
};


class NWINDOW_API UUIAPI_STATUSBARCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetRegenInfo);
    DECLARE_FUNCTION(execSetPointExpPercentRate);
    DECLARE_FUNCTION(execSetPointPercent);
    DECLARE_FUNCTION(execSetPoint);
    DECLARE_CLASS(UUIAPI_STATUSBARCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_STATUSBARCTRL)
};


class NWINDOW_API UUIAPI_STATUSICONCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execDelItem);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetColCount);
    DECLARE_FUNCTION(execGetRowCount);
    DECLARE_FUNCTION(execInsertCol);
    DECLARE_FUNCTION(execInsertRow);
    DECLARE_FUNCTION(execAddCol);
    DECLARE_FUNCTION(execAddRow);
    DECLARE_CLASS(UUIAPI_STATUSICONCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_STATUSICONCTRL)
};


class NWINDOW_API UUIAPI_TEXTBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetTooltipString);
    DECLARE_FUNCTION(execGetText);
    DECLARE_FUNCTION(execSetInt);
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execSetText);
    DECLARE_FUNCTION(execSetTextColor);
    DECLARE_CLASS(UUIAPI_TEXTBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTBOX)
};


class NWINDOW_API UUIAPI_TEXTLISTBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UUIAPI_TEXTLISTBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTLISTBOX)
};


class NWINDOW_API UUIAPI_TEXTURECTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execGetTextureName);
    DECLARE_FUNCTION(execSetTextureWithObject);
    DECLARE_FUNCTION(execSetTextureWithClanCrest);
    DECLARE_FUNCTION(execSetTextureCtrlType);
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execSetUV);
    DECLARE_CLASS(UUIAPI_TEXTURECTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTURECTRL)
};


class NWINDOW_API UUIAPI_TREECTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetNodeItemText);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execGetParentNode);
    DECLARE_FUNCTION(execGetChildNode);
    DECLARE_FUNCTION(execIsExpandedNode);
    DECLARE_FUNCTION(execIsNodeNameExist);
    DECLARE_FUNCTION(execDeleteNode);
    DECLARE_FUNCTION(execGetExpandedNode);
    DECLARE_FUNCTION(execSetExpandedNode);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertNodeItem);
    DECLARE_FUNCTION(execInsertNode);
    DECLARE_CLASS(UUIAPI_TREECTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TREECTRL)
};


class NWINDOW_API UUIDataManager : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetEnableClassIndexList);
    DECLARE_FUNCTION(execGetClassnameSysstringIndexByClassIndex);
    DECLARE_CLASS(UUIDataManager,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDataManager)
};


class NWINDOW_API UUIDATA_CLAN : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetSubClanSkillLevel);
    DECLARE_FUNCTION(execGetSkillLevel);
    DECLARE_FUNCTION(execRequestSubClanSkillList);
    DECLARE_FUNCTION(execRequestClanSkillList);
    DECLARE_FUNCTION(execRequestClanInfo);
    DECLARE_FUNCTION(execGetNameValue);
    DECLARE_FUNCTION(execGetAllianceCrestTexture);
    DECLARE_FUNCTION(execGetEmblemTexture);
    DECLARE_FUNCTION(execGetCrestTexture);
    DECLARE_FUNCTION(execGetAllianceName);
    DECLARE_FUNCTION(execGetName);
    DECLARE_CLASS(UUIDATA_CLAN,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_CLAN)
};


class NWINDOW_API UUIDATA_GAMETIP : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetDataByIndex);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_CLASS(UUIDATA_GAMETIP,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_GAMETIP)
};


class NWINDOW_API UUIDATA_HENNA : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetIconTex);
    DECLARE_FUNCTION(execGetDescription);
    DECLARE_FUNCTION(execGetItemName);
    DECLARE_CLASS(UUIDATA_HENNA,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_HENNA)
};


class NWINDOW_API UUIDATA_HUNTINGZONE : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetHuntingDescription);
    DECLARE_FUNCTION(execGetHuntingZone);
    DECLARE_FUNCTION(execGetHuntingZoneLoc);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetMinLevel);
    DECLARE_FUNCTION(execGetHuntingZoneType);
    DECLARE_FUNCTION(execGetHuntingZoneName);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_CLASS(UUIDATA_HUNTINGZONE,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_HUNTINGZONE)
};


class NWINDOW_API UUIDATA_ITEM : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetItemNameClass);
    DECLARE_FUNCTION(execGetEtcItemTextureName);
    DECLARE_FUNCTION(execGetSetItemEnchantEffectDescription);
    DECLARE_FUNCTION(execGetSetItemEffectDescription);
    DECLARE_FUNCTION(execGetSetItemEnchantValue);
    DECLARE_FUNCTION(execGetSetItemID);
    DECLARE_FUNCTION(execGetSetItemFirstID);
    DECLARE_FUNCTION(execIsExistSetItem);
    DECLARE_FUNCTION(execGetSetItemNum);
    DECLARE_FUNCTION(execGetRefineryItemName);
    DECLARE_FUNCTION(execIsCrystallizable);
    DECLARE_FUNCTION(execGetItemInfo);
    DECLARE_FUNCTION(execGetItemCrystalType);
    DECLARE_FUNCTION(execGetItemDataType);
    DECLARE_FUNCTION(execGetItemWeight);
    DECLARE_FUNCTION(execGetItemDescription);
    DECLARE_FUNCTION(execGetItemTextureName);
    DECLARE_FUNCTION(execGetItemAdditionalName);
    DECLARE_FUNCTION(execGetItemName);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_ITEM,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_ITEM)
};


class NWINDOW_API UUIDATA_MACRO : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetMacroCount);
    DECLARE_FUNCTION(execGetMacroInfo);
    DECLARE_CLASS(UUIDATA_MACRO,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_MACRO)
};


class NWINDOW_API UUIDATA_NPC : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetNpcProperty);
    DECLARE_FUNCTION(execGetNPCName);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_NPC,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_NPC)
};


class NWINDOW_API UUIDATA_PARTY : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetMemberVirtualName);
    DECLARE_FUNCTION(execMovePartyMember);
    DECLARE_FUNCTION(execGetMemberName);
    DECLARE_CLASS(UUIDATA_PARTY,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PARTY)
};


class NWINDOW_API UUIDATA_PAWNVIEWER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execAddSkillByID);
    DECLARE_FUNCTION(execAddSkillByName);
    DECLARE_FUNCTION(execExecuteSkill);
    DECLARE_FUNCTION(execPlayBlendingAnim);
    DECLARE_FUNCTION(execBeginMixedAnimation);
    DECLARE_FUNCTION(execStopAnimation);
    DECLARE_FUNCTION(execIsPlayingAnimation);
    DECLARE_FUNCTION(execPauseAnimation);
    DECLARE_FUNCTION(execResumeAnimation);
    DECLARE_FUNCTION(execPlayAnimation);
    DECLARE_FUNCTION(execGetSelectedAnimationState);
    DECLARE_FUNCTION(execUnlimitZoom);
    DECLARE_FUNCTION(execStopTime);
    DECLARE_FUNCTION(execL2Teleport);
    DECLARE_FUNCTION(execIsL2Seamless);
    DECLARE_FUNCTION(execExecuteCommand);
    DECLARE_FUNCTION(execRotateFace);
    DECLARE_FUNCTION(execChangeCharacter);
    DECLARE_FUNCTION(execAttackTarget);
    DECLARE_FUNCTION(execToggleAttackMode);
    DECLARE_FUNCTION(execSummonNewCharacter);
    DECLARE_FUNCTION(execGetItemTextureName);
    DECLARE_FUNCTION(execGetItemMeshName);
    DECLARE_FUNCTION(execEquipItem);
    DECLARE_FUNCTION(execDeletePC);
    DECLARE_FUNCTION(execStopSkill);
    DECLARE_FUNCTION(execUseSkill);
    DECLARE_FUNCTION(execReserveTestPawn);
    DECLARE_FUNCTION(execDestroyTestPawn);
    DECLARE_FUNCTION(execReCreateTestPawn);
    DECLARE_FUNCTION(execCreateTestPawn);
    DECLARE_FUNCTION(execGetAppSecondsQPC);
    DECLARE_FUNCTION(execAddFaceTextureToComboBox);
    DECLARE_FUNCTION(execUpdateHairMeshAndTextureInfo);
    DECLARE_FUNCTION(execGetRearHairTextureString);
    DECLARE_FUNCTION(execGetFrontHairTextureString);
    DECLARE_FUNCTION(execGetIndexRearHairMeshUserData);
    DECLARE_FUNCTION(execGetIndexFrontHairMeshUserData);
    DECLARE_FUNCTION(execGetRearHairUserData);
    DECLARE_FUNCTION(execGetFrontHairUserData);
    DECLARE_FUNCTION(execGetMaxHairMesh);
    DECLARE_FUNCTION(execIsNPCPawn);
    DECLARE_FUNCTION(execAddHairMeshToComboBox);
    DECLARE_FUNCTION(execSetPawnResourceSelectedCharacter);
    DECLARE_FUNCTION(execSetSelectedCharacterFaceStyle);
    DECLARE_FUNCTION(execGetSelectedCharacterFaceStyle);
    DECLARE_FUNCTION(execGetSelectedCharacterHairStyle);
    DECLARE_FUNCTION(execGetSelectedCharacterHairColor);
    DECLARE_FUNCTION(execAddAnimationList);
    DECLARE_FUNCTION(execLoadSelectedCharacter);
    DECLARE_FUNCTION(execGetPawnCurrentFrame);
    DECLARE_FUNCTION(execGetPawnFrameCount);
    DECLARE_FUNCTION(execRequestLoadAllItem);
    DECLARE_CLASS(UUIDATA_PAWNVIEWER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PAWNVIEWER)
};


class NWINDOW_API UUIDATA_PET : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetPetEXPRate);
    DECLARE_FUNCTION(execGetIsPetOrSummoned);
    DECLARE_FUNCTION(execGetPetCarringWeight);
    DECLARE_FUNCTION(execGetPetCarryWeight);
    DECLARE_FUNCTION(execGetPetMaxEXP);
    DECLARE_FUNCTION(execGetPetMinEXP);
    DECLARE_FUNCTION(execGetPetMaxFatigue);
    DECLARE_FUNCTION(execGetPetMaxMP);
    DECLARE_FUNCTION(execGetPetMaxHP);
    DECLARE_FUNCTION(execGetPetEXP);
    DECLARE_FUNCTION(execGetPetFatigue);
    DECLARE_FUNCTION(execGetPetLevel);
    DECLARE_FUNCTION(execGetPetSP);
    DECLARE_FUNCTION(execGetPetMP);
    DECLARE_FUNCTION(execGetPetHP);
    DECLARE_FUNCTION(execGetPetID);
    DECLARE_FUNCTION(execGetPetName);
    DECLARE_CLASS(UUIDATA_PET,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PET)
};


class NWINDOW_API UUIDATA_PLAYER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetInventoryCount);
    DECLARE_FUNCTION(execGetInventoryLimit);
    DECLARE_FUNCTION(execHasCrystallizeAbility);
    DECLARE_FUNCTION(execGetPlayerEnvironment);
    DECLARE_FUNCTION(execGetPlayerMoveType);
    DECLARE_FUNCTION(execGetPlayerEXPRate);
    DECLARE_FUNCTION(execGetRecipeShopMsg);
    DECLARE_FUNCTION(execGetPlayerID);
    DECLARE_FUNCTION(execIsHero);
    DECLARE_CLASS(UUIDATA_PLAYER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PLAYER)
};


class NWINDOW_API UUIDATA_QUEST : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetQuestReward);
    DECLARE_FUNCTION(execGetQuestIscategory);
    DECLARE_FUNCTION(execIsShowableItemNumQuest);
    DECLARE_FUNCTION(execIsShowableJournalQuest);
    DECLARE_FUNCTION(execGetQuestZone);
    DECLARE_FUNCTION(execGetClearedQuest);
    DECLARE_FUNCTION(execGetQuestType);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetMinLevel);
    DECLARE_FUNCTION(execGetIntro);
    DECLARE_FUNCTION(execGetRequirement);
    DECLARE_FUNCTION(execGetStartNPCID);
    DECLARE_FUNCTION(execGetStartNPCLoc);
    DECLARE_FUNCTION(execGetTargetName);
    DECLARE_FUNCTION(execGetTargetLoc);
    DECLARE_FUNCTION(execGetQuestItem);
    DECLARE_FUNCTION(execGetQuestDescription);
    DECLARE_FUNCTION(execGetQuestJournalName);
    DECLARE_FUNCTION(execGetQuestName);
    DECLARE_FUNCTION(execIsMinimapOnly);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_QUEST,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_QUEST)
};


class NWINDOW_API UUIDATA_RAID : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetRaidLoc);
    DECLARE_FUNCTION(execGetRaidDescription);
    DECLARE_FUNCTION(execGetRaidMonsterZone);
    DECLARE_FUNCTION(execGetRaidMonsterLevel);
    DECLARE_FUNCTION(execGetRaidMonsterID);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_CLASS(UUIDATA_RAID,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_RAID)
};


class NWINDOW_API UUIDATA_RECIPE : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetRecipeIsMultipleProduct);
    DECLARE_FUNCTION(execGetRecipeMaterialItemBy2Condition);
    DECLARE_FUNCTION(execGetRecipeDescriptionBy2Condition);
    DECLARE_FUNCTION(execGetRecipeIconNameBy2Condition);
    DECLARE_FUNCTION(execGetRecipeNameBy2Condition);
    DECLARE_FUNCTION(execGetRecipeMaterialItem);
    DECLARE_FUNCTION(execGetRecipeSuccessRate);
    DECLARE_FUNCTION(execGetRecipeDescription);
    DECLARE_FUNCTION(execGetRecipeLevel);
    DECLARE_FUNCTION(execGetRecipeMpConsume);
    DECLARE_FUNCTION(execGetRecipeCrystalType);
    DECLARE_FUNCTION(execGetRecipeProductNum);
    DECLARE_FUNCTION(execGetRecipeProductID);
    DECLARE_FUNCTION(execGetRecipeIconName);
    DECLARE_FUNCTION(execGetRecipeItemID);
    DECLARE_CLASS(UUIDATA_RECIPE,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_RECIPE)
};


class NWINDOW_API UUIDATA_SKILL : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetCastRange);
    DECLARE_FUNCTION(execGetMpConsume);
    DECLARE_FUNCTION(execGetHpConsume);
    DECLARE_FUNCTION(execGetOperateType);
    DECLARE_FUNCTION(execGetEnchantIcon);
    DECLARE_FUNCTION(execGetEnchantSkillLevel);
    DECLARE_FUNCTION(execGetEnchantName);
    DECLARE_FUNCTION(execGetDescription);
    DECLARE_FUNCTION(execGetName);
    DECLARE_FUNCTION(execGetIconName);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_SKILL,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_SKILL)
};


class NWINDOW_API UUIDATA_STATICOBJECT : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetStaticObjectShowHP);
    DECLARE_FUNCTION(execGetStaticObjectName);
    DECLARE_FUNCTION(execGetServerObjectHP);
    DECLARE_FUNCTION(execGetServerObjectMaxHP);
    DECLARE_FUNCTION(execGetServerObjectType);
    DECLARE_FUNCTION(execGetServerObjectNameID);
    DECLARE_CLASS(UUIDATA_STATICOBJECT,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_STATICOBJECT)
};


class NWINDOW_API UUIDATA_TARGET : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetTargetActor);
    DECLARE_FUNCTION(execIsVehicle);
    DECLARE_FUNCTION(execIsHPShowableNPC);
    DECLARE_FUNCTION(execIsCanBeAttacked);
    DECLARE_FUNCTION(execIsPet);
    DECLARE_FUNCTION(execIsNpc);
    DECLARE_FUNCTION(execIsServerObject);
    DECLARE_FUNCTION(execGetTargetClassID);
    DECLARE_FUNCTION(execGetTargetPledgeID);
    DECLARE_FUNCTION(execGetTargetNameColor);
    DECLARE_FUNCTION(execGetTargetName);
    DECLARE_FUNCTION(execGetTargetMP);
    DECLARE_FUNCTION(execGetTargetMaxMP);
    DECLARE_FUNCTION(execGetTargetHP);
    DECLARE_FUNCTION(execGetTargetMaxHP);
    DECLARE_FUNCTION(execGetTargetUserRank);
    DECLARE_FUNCTION(execGetTargetID);
    DECLARE_CLASS(UUIDATA_TARGET,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TARGET)
};


class NWINDOW_API UUIDATA_TRANSFORM : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetNpcID);
    DECLARE_CLASS(UUIDATA_TRANSFORM,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TRANSFORM)
};


class NWINDOW_API UUIDATA_TUTORIALLIST : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execCheckTutorial);
    DECLARE_CLASS(UUIDATA_TUTORIALLIST,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TUTORIALLIST)
};


class NWINDOW_API UUIDATA_USER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetClanType);
    DECLARE_FUNCTION(execGetUserName);
    DECLARE_CLASS(UUIDATA_USER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_USER)
};


class NWINDOW_API UVehicleAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execAirShipMoveDown);
    DECLARE_FUNCTION(execAirShipMoveUp);
    DECLARE_FUNCTION(execRequestExAirShipTeleport);
    DECLARE_FUNCTION(execGetVehicle);
    DECLARE_CLASS(UVehicleAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UVehicleAPI)
};


class NWINDOW_API UActionAPI : public UObject
{
public:
    DECLARE_FUNCTION(execGetActionNameBySocialIndex);
    DECLARE_FUNCTION(execRequestSummonedActionList);
    DECLARE_FUNCTION(execRequestPetActionList);
    DECLARE_FUNCTION(execRequestActionList);
    DECLARE_CLASS(UActionAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UActionAPI)
};


class NWINDOW_API UAuctionAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestInfoItemAuction);
    DECLARE_FUNCTION(execRequestBidItemAuction);
    DECLARE_CLASS(UAuctionAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAuctionAPI)
};


class NWINDOW_API UAudioAPI : public UObject
{
public:
    DECLARE_FUNCTION(execStopMusic);
    DECLARE_FUNCTION(execPlayMusic);
    DECLARE_FUNCTION(execPlaySound);
    DECLARE_CLASS(UAudioAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAudioAPI)
};


class NWINDOW_API UCommandChannelAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestCommandChannelPartyMembersInfo);
    DECLARE_FUNCTION(execRequestCommandChannelWithdraw);
    DECLARE_FUNCTION(execRequestCommandChannelBanParty);
    DECLARE_FUNCTION(execRequestCommandChannelInfo);
    DECLARE_CLASS(UCommandChannelAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCommandChannelAPI)
};


class NWINDOW_API UGraphicAPI : public UObject
{
public:
    DECLARE_FUNCTION(execDoFResume);
    DECLARE_FUNCTION(execDoFPause);
    DECLARE_FUNCTION(execDoFSetEndDistance);
    DECLARE_FUNCTION(execDoFSetStartDistance);
    DECLARE_FUNCTION(execDoFSetFocusDistance);
    DECLARE_FUNCTION(execDoFSetFocusLocation);
    DECLARE_FUNCTION(execDoFSetFocusPlayer);
    DECLARE_FUNCTION(execDoFSetFocusActor);
    DECLARE_CLASS(UGraphicAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGraphicAPI)
};


class NWINDOW_API UHennaAPI : public UObject
{
public:
    DECLARE_FUNCTION(execGetHennaInfo);
    DECLARE_FUNCTION(execGetHennaInfoCount);
    DECLARE_CLASS(UHennaAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHennaAPI)
};


class NWINDOW_API UHeroTowerAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestHeroMatchRecord);
    DECLARE_FUNCTION(execRequestWriteHeroWords);
    DECLARE_CLASS(UHeroTowerAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHeroTowerAPI)
};


class NWINDOW_API UMiniMapAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestSeedPhase);
    DECLARE_FUNCTION(execRequestCursedWeaponLocation);
    DECLARE_FUNCTION(execRequestCursedWeaponList);
    DECLARE_CLASS(UMiniMapAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMiniMapAPI)
};


class NWINDOW_API UOlympiadAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestOlympiadMatchList);
    DECLARE_FUNCTION(execRequestOlympiadObserverEnd);
    DECLARE_CLASS(UOlympiadAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UOlympiadAPI)
};


class NWINDOW_API UPartyMatchAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestMpccPartymasterList);
    DECLARE_FUNCTION(execRequestWithdrawMpccRoom);
    DECLARE_FUNCTION(execRequestDismissMpccRoom);
    DECLARE_FUNCTION(execRequestOustFromMpccRoom);
    DECLARE_FUNCTION(execRequestJoinMpccRoom);
    DECLARE_FUNCTION(execRequestManageMpccRoom);
    DECLARE_FUNCTION(execRequestListMpccWaiting);
    DECLARE_FUNCTION(execRequestAskJoinPartyRoom);
    DECLARE_FUNCTION(execRequestExitPartyMatchingWaitingRoom);
    DECLARE_FUNCTION(execRequestPartyMatchWaitList);
    DECLARE_FUNCTION(execRequestBanFromPartyRoom);
    DECLARE_FUNCTION(execRequestWithdrawPartyRoom);
    DECLARE_FUNCTION(execRequestDismissPartyRoom);
    DECLARE_FUNCTION(execRequestManagePartyRoom);
    DECLARE_FUNCTION(execRequestJoinPartyRoomAuto);
    DECLARE_FUNCTION(execRequestJoinPartyRoom);
    DECLARE_FUNCTION(execRequestPartyRoomList);
    DECLARE_FUNCTION(execRequestOpenPartyMatch);
    DECLARE_CLASS(UPartyMatchAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPartyMatchAPI)
};


class NWINDOW_API UPetitionAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestPetitionFeedBack);
    DECLARE_FUNCTION(execRequestPetition);
    DECLARE_FUNCTION(execRequestPetitionCancel);
    DECLARE_CLASS(UPetitionAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPetitionAPI)
};


class NWINDOW_API UQuestAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSetQuestTargetInfo);
    DECLARE_FUNCTION(execRequestDestroyQuest);
    DECLARE_FUNCTION(execRequestQuestList);
    DECLARE_CLASS(UQuestAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UQuestAPI)
};


class NWINDOW_API USceneEditorAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSaveCurSceneTimeAndDesc);
    DECLARE_FUNCTION(execGetCurSceneTimeAndDesc);
    DECLARE_FUNCTION(execSaveSceneData);
    DECLARE_FUNCTION(execLoadSceneData);
    DECLARE_FUNCTION(execCopyScene);
    DECLARE_FUNCTION(execDeleteScene);
    DECLARE_FUNCTION(execAddScene);
    DECLARE_FUNCTION(execPlayScene);
    DECLARE_FUNCTION(execInitSceneEditorData);
    DECLARE_CLASS(USceneEditorAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneEditorAPI)
};


class NWINDOW_API USiegeAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestSetCastleSiegeTime);
    DECLARE_FUNCTION(execRequestConfirmCastleSiegeWaitingList);
    DECLARE_FUNCTION(execRequestJoinCastleSiege);
    DECLARE_FUNCTION(execRequestCastleSiegeDefenderList);
    DECLARE_FUNCTION(execRequestCastleSiegeAttackerList);
    DECLARE_CLASS(USiegeAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USiegeAPI)
};


class NWINDOW_API USSAOAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSSAO_BlurNormalDifference);
    DECLARE_FUNCTION(execSSAO_BlurDepthDifference);
    DECLARE_FUNCTION(execSSAO_BlurIntensity);
    DECLARE_FUNCTION(execSSAO_SampleDistance);
    DECLARE_FUNCTION(execSSAO_NoiseScale);
    DECLARE_FUNCTION(execSSAO_DepthDifference);
    DECLARE_FUNCTION(execSSAO_FadeFront);
    DECLARE_FUNCTION(execSSAO_MaxIntensity);
    DECLARE_FUNCTION(execSSAO_Strength);
    DECLARE_FUNCTION(execSSAO_Blend);
    DECLARE_FUNCTION(execSSAO_Level);
    DECLARE_CLASS(USSAOAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USSAOAPI)
};


class NWINDOW_API USSQAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestSSQStatus);
    DECLARE_CLASS(USSQAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USSQAPI)
};


class NWINDOW_API UTutorialAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestExSetTutorial);
    DECLARE_CLASS(UTutorialAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTutorialAPI)
};


class NWINDOW_API UUIDATA_REFINERYOPTION : public UObject
{
public:
    DECLARE_FUNCTION(execGetOptionDescription);
    DECLARE_FUNCTION(execGetQuality);
    DECLARE_CLASS(UUIDATA_REFINERYOPTION,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_REFINERYOPTION)
};

#endif

AUTOGENERATE_FUNCTION(UActionAPI,-1,execGetActionNameBySocialIndex);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestSummonedActionList);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestPetActionList);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestActionList);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execPause);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execPlay);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execSetTimes);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execSetLoopCount);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetColorModify);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execGetColor);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetRotatingDirection);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetAutoRotateType);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execGetTextureName);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureWithObject);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureWithClanCrest);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureCtrlType);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureSize);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetUV);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UAuctionAPI,-1,execRequestInfoItemAuction);
AUTOGENERATE_FUNCTION(UAuctionAPI,-1,execRequestBidItemAuction);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execStopMusic);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlayMusic);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlaySound);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execGetValue);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execSetValue);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetShowAndHideAnimType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsCurrentState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execExitState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnterState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execChangeControlOrder);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMakeBaseUC);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execConvertToEditable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetXMLDocumentInfo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetXMLDocumentInfo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSaveXMLWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execLoadXMLWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetControlType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsControlContainer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScript);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetBackTexture);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDeleteChildWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetClassName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execAddChildWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetEditable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execInitRotation);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsFront);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearRotation);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execRotate);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetSettledWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollHeight);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollPosition);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollBarPosition);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetResizeFrameSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFrameSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearAllChildShortcutItemTooltip);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearTooltip);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTooltipCustomType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipCustomType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTooltipText);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipText);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execNotifyAlarm);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execKillTimer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTimer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execReleaseFocus);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsFocused);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFocus);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsEnableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDisableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetDragOverTexture);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetVirtualDrag);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsVirtualDrag);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetStuckable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetDraggable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsDraggable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAnchored);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearAnchor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAnchor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDisableTick);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnableTick);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveShake);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveExWithTime);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveEx);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveTo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMove);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsRelativeSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSizeRel43);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowSizeRel);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSizeRel);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execAddWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetRect);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetModal);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAlwaysFullAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFontColor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAlwaysOnBack);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAlwaysOnTop);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsVirtual);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScriptName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScript);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTopFrameWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsChildOf);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetChildWindowList);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetParentWindowHandle);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execChangeParentWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetParentWindowName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsMinimizedWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsShowWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execHideWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execShowWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTitlePosOffset);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowTitle);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestGetBookMarkPos);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestChangeBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestTelePortBookMark);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestDeleteBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestModifyBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestSaveBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestShowBookMark);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestBookMarkSlotInfo);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execGetUIState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execSMessageBox);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execMessageBox);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execSetUIState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execRegisterState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execRegisterEvent);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseFloat);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseINT64);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseInt);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseString);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParamAddINT64);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParamAdd);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execExecuteEvent);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetNameText);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execGetButtonName);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execHideNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execShowNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execPlayAnimation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSpawnNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffsetY);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffsetX);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterScale);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execEndZoom);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execStartZoom);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execEndRotation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execStartRotation);
AUTOGENERATE_FUNCTION(UChatWindowHandle,-1,execEnableTexture);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execSetTextListBoxScrollPosition);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execAddStringToChatWindow);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execToggleDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execIsDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execIsChecked);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetCheck);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetTitle);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetAdditionalString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithGapWithStr);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithStr);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithGap);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIcon);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithFileExt);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetFileExtInfo);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithColor);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetNumOfItems);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSYS_AddStringWithReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSYS_AddString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithGap);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelPartyMembersInfo);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelWithdraw);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelBanParty);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelInfo);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execPreCheckPanelSize);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execInsertDrawItem);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddItemToAutoCompleteHistory);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execDeleteNameFromPledgeMemberSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearPledgeMemberSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execFillPledgeMemberSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddNameToPledgeMemberSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execDeleteNameFromFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddNameToFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execFillFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execDeleteNameFromAdditionalFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearAdditionalFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execFillAdditionalFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddNameToAdditionalFriendSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearHistory);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetEnableTextLink);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execGetMaxLength);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetMaxLength);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetHighLight);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetEditType);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSimulateBackspace);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExCancelEnchantItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExTryToPutEnchantSupportItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExTryToPutEnchantTargetItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestRemoveAttribute);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestEnchantItemAttribute);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestEnchantItem);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execRequestEventMatchObserverEnd);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execSetSelectedUser);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetUserData);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetPartyMemberCount);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetTeamName);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetScore);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetEventMatchData);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execLoadFlash);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execGetDriveInfoList);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execGetFileInfoList);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execInvoke);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execSetFlashFile);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGotoFrame);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGetCurrentFrame);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGetTotalFrameCnt);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execPause);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execPlay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetShortcutString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseSecondaryAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthModify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthVerify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthCreate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseGoodsInvnentory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGoodsIconName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUseGoodsInventoryItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGoodsInventoryItemDesc);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGoodsInventoryItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFormattedTimeStrMMHH);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_GetDayType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_ConvertTimeToStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_GetShowEventUI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUsingPrimeShop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowCashChargeWebSite);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_MinigameInsertScore);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_MinigameLoadScores);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_RecentProductList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_BuyProduct);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_ProductInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_ProductList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_GamePoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetUseHDRRenderEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetHDRRenderVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFinishNPCZoomCamera);
AUTOGENERATE_FUNCTION(UUIScript,-1,execToggleReplayRec);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionBlurAlpha);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionBlurUse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyMatchWaitList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetPostEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRGBVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRGBConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetHSVVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetHSVConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetYCbCrVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetYCbCrConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenL2Home);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenGivenURL);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRadioButtonHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAddExpandQuestAlarm);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAskMemberShip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyLootingModifyAgreement);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyLootingModify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMyComputerPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDesktopPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMydocumentPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAnswerCoupleAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDrivesInfoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFilesInfoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMoveToMerchant);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefreshPrivateMarketInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearAllPrivateMarketInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeDiamondMesh);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeParticleEmitter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowMeshScale);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowSpeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowEmitterParticleNum);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowWeight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteSnowEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateSnowEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainMeshScale);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainSpeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainEmitterParticleNum);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainWeight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetWeatherEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteRainEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateRainEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_EventRankerList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGameStateName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuySellUIClose);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUseNewPetitionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowStepThree);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowStepTwo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowNewUserPetition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPostItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCancelSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestSentPostList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRejectPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestReceivePost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestReceivedPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteReceivedPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestReceivedPostList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSendPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRefundItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatColorByType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDominionFlagIconTex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDominionInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestJoinDominionWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStopShowCrataeCubeRank);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStartShowCrataeCubeRank);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWithDrawPremiumItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNicknameColorWithIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxNicknameColorIndexCnt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeNicknameNColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execChatNotificationFilter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPVPMatchRecord);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFortressMapInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFortressSiegeInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllAgitInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllFortressInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllCastleInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCharacterCreateGetClassType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckValidName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckNameLength);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDefaultCharacterStop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDefaultCharacterTurn);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetCharacterStyle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowOnlyOneDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassDescription);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecLobbyEvent);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetCurrentMakingRace);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowAllDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSpawnDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearDefaultCharacterInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPrevState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetSelectedCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsDisciplineCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsScheduledToDeleteCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execResetCharacterPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRestoreCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSelectedCharacterInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCharacterSelect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStartGame);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGotoLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCreateNewCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowEnableTrackerBox);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteAlign);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDeleteAttachedWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearTracker);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTrackerAttachedWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTrackerAttachedWindowList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowExampleAnimation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowVirtualWindowBackground);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetXMLControlIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetXMLControlString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInterfaceDir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execInitCreditState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowMessageInLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetQuestLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execToggleMsnWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorNameInManorList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorIDInManorList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestProcureCropList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFishFinalAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execInitFishViewportWnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFishRanking);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneMusicCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneScreenCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetScenePcCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneNpcCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneCameraCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCharacterViewportWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetVideoPlayerCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTreeHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextureHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextListBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTabHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatusIconHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatusBarHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSliderCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRadarMapCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPropertyControllerHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetProgressCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNameCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMinimapCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetListCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetListBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetHtmlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMultiEditBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEditBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDrawPanelHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetComboBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCheckBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetButtonHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetBarHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAnimTextureHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFindHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestObserverModeEnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkillInfoDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkillSubClan);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginBenchMark);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginPlay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEraseReplayFile);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginReplay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDirList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFileList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCharacterSelectionActor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerActor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquipList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquipInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaEquip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaItemInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLootingMethodName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInZoneNameWithZoneID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentZoneID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentZoneName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetZoneNameWithZoneID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOpenMinimap);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStopSound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPlaySound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessCommandInterPartyChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessCommandChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessPartyMatchChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessPetitionChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetItemTextLink);
AUTOGENERATE_FUNCTION(UUIScript,-1,execReturnTooltipInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOggVoiceVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetWavVoiceVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMusicVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetSoundVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefreshINI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSaveInventoryOrder);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRaceTicketString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLottoString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsMagicalArmor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMagicalDefense);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPhysicalDefense);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetShieldDefense);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAttackSpeedString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMagicalDamage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPhysicalDamage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWeaponTypeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSlotTypeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInventoryItemCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStopMacro);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsStackableItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execUseSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDoAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteCommandFromAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteCommand);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetFixedDefaultCamera);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetIgnorePartyInviting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetRenderCharacterCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetShaderWaterEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDepthBufferShadow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDOF);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetL2Shader);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetWeatherEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetHDR);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetReflectionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetPawnClippingRange);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTerrainClippingRange);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetBackgroundEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetShadow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetModelingDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTextureDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDefaultPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetShaderVersion);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetResolutionIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMultiSample);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetResolution);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRefreshRateList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetResolutionList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLanguage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsEnableKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsCheckKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsEnableEngSelection);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseHDR);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseJoystick);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseAudio);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerNo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerAgeLimit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecQuit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecRestart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEndSystemMessageParam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessageParam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessageString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPrivateShopMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetPrivateShopMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsSameChatPrefix);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatPrefix);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentResolution);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClickLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckItemLimit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsTriggerSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsSongDance);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsDebuff);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRoutingString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUserRankString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBypassToServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAllianceCrestTexFromAllianceCrestID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeCrestTexFromPledgeCrestID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentIMELang);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPlayConsoleSound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNumericColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertTimeToString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertNumToTextNoAdena);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertNumToText);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeCostString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeCostStringINT64);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemGradeTextureName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemGradeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeFullItemName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execNextStringWithWidth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDivideStringWithWidth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextSize);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextSizeDefault);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeFullSystemMsg);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetScript);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMessageWithParamNumber);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMsgInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsKeyDown);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDebug);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertTimetoStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeTimeStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeBuffTimeStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTeleportFlagCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTeleportBookMarkCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAdena);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClanNameValue);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBuilderPC);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassStep);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDecoIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAccessoryItemID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPetInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUserInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTargetInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassIconName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInviteMpcc);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInviteParty);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasClanEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasClanCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCastleName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPCCafeCouponUse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanMemberAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEditClanAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWarList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanChangeNickName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllianceRegisterCrestByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanUnregisterEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterEmblemByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanUnregisterCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterCrestByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanReorganizeMember);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWithdrawWarWithClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWithdrawWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWarWithClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWarWithUserID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAskJoin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanExpelMember);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanLeave);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeletePupil);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAssignPupil);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanChangeGrade);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanGradeList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanMemberInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberLocationWithID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSendPrivateShopList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestQuitPrivateShop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDispel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelSurrender);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelAnswerStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCrystallizeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUnequipItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDropItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDestroyItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUseItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_RequestRestartPoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRestartPoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMultiSellChoose);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBBSBoard);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPreviewItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPackageSend);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPackageSendableItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangePetName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWarehouseWithdraw);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWarehouseDeposit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTargetUser);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAssist);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAttack);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetCrop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuySeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuyItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSellItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAnswerTradeRequest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAddTradeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStartTrade);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTradeDone);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRaidRecord);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSkillList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTargetCancel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSelfTarget);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAuthCardKeyLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPKMode);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execRequestSnoopEnd);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execGetObservingUserInfo);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execRequestGMCommand);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execBeginGMChangeServer);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFResume);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFPause);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetEndDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetStartDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusLocation);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusPlayer);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusActor);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetHennaInfo);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetHennaInfoCount);
AUTOGENERATE_FUNCTION(UHeroTowerAPI,-1,execRequestHeroMatchRecord);
AUTOGENERATE_FUNCTION(UHeroTowerAPI,-1,execRequestWriteHeroWords);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execIsPageLock);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execSetPageLock);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execSetHtmlBuffData);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execControllerExecution);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execGetFrameMaxHeight);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execLoadHtmlFromString);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execLoadHtml);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execGetInputKey);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execGetKeyString);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsAltPressed);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsCtrlPressed);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsShiftPressed);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execPushSideTypeNextBtn);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execPushSideTypePrevBtn);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSideTypeCurPage);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSideTypePageNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemByClassID);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetItemUsability);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetExpandItemNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetCol);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetRow);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetDisableTex);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetIndexAt);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSwapItems);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetFaded);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemWithReserved);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemWithAllProperty);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSelectedItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execDeleteItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execAddItemWithFaded);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execAddItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClearSelect);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItemNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetMaxRow);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetDrawOffset);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetListBoxScrollPosition);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execGetSelectedString);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execAddStringWithData);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetResizable);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetHeaderTextOffset);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetHeaderAlignment);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execAdjustColumnWidth);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execInitListCtrl);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetRec);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetSelectedRec);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execModifyRecord);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetSelectedIndex);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetSelectedIndex);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetRecordCount);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execDeleteRecord);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execDeleteAllItem);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execInsertRecord);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestMakeMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestDeleteMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestUseMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestMacroList);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestSeedPhase);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestCursedWeaponLocation);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestCursedWeaponList);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetContinent);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseAllRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execUpdateRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAddRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteAllCursedWeaponIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execIsOverlapped);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execRequestReduceBtn);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDrawGridIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetSSQStatus);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetShowQuest);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteAllTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAddTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAdjustMapView);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execSetString);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execGetName);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execSetNameWithColor);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execSetName);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestOlympiadMatchList);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestOlympiadObserverEnd);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestMpccPartymasterList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestWithdrawMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestDismissMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestOustFromMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestManageMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestListMpccWaiting);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestAskJoinPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestExitPartyMatchingWaitingRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestPartyMatchWaitList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestBanFromPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestWithdrawPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestDismissPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestManagePartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinPartyRoomAuto);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestPartyRoomList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestOpenPartyMatch);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestGetItemFromPet);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestGiveItemToPet);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestPetUseItem);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestPetInventoryItemList);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetitionFeedBack);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetition);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetitionCancel);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestPledgeMemberList);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestPostFriendList);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestDeletingPostFriend);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestAddingPostFriend);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestFriendList);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetBarTex);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetBackTex);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execStart);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execResume);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execReset);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetPos);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetProgressTime);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemStringValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemIntegerValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemBooleanValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemStringValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemIntegerValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemBooleanValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemType);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupVisible);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupExpandState);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execAddGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execDeleteGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetGroupCheck);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupCheck);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetGroupType);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execUpdatePropertyGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetPropertyHeight);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execClearValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetProperty);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execSetQuestTargetInfo);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execRequestDestroyQuest);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execRequestQuestList);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetMapInvisible);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetEnableRotation);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetMagnification);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execRequestObjectAround);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execUpdateObject);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execDeleteObject);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execAddObject);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopListSet);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMessageSet);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopManageQuit);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemDelete);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeBookOpen);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemMakeInfo);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemMakeSelf);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMakeDo);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopSellList);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMakeInfo);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execRequestRefineCancel);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmCancelItem);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execRequestRefine);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmGemStone);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmRefinerItem);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmTargetItem);
AUTOGENERATE_FUNCTION(USceneCameraCtrlHandle,-1,execSaveCameraData);
AUTOGENERATE_FUNCTION(USceneCameraCtrlHandle,-1,execUpdateCameraData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execSaveCurSceneTimeAndDesc);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execGetCurSceneTimeAndDesc);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execSaveSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execLoadSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execCopyScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execDeleteScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execAddScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execPlayScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execInitSceneEditorData);
AUTOGENERATE_FUNCTION(USceneMusicCtrlHandle,-1,execSaveMusicData);
AUTOGENERATE_FUNCTION(USceneMusicCtrlHandle,-1,execUpdateMusicData);
AUTOGENERATE_FUNCTION(USceneNpcCtrlHandle,-1,execSaveNpcData);
AUTOGENERATE_FUNCTION(USceneNpcCtrlHandle,-1,execUpdateNpcData);
AUTOGENERATE_FUNCTION(UScenePcCtrlHandle,-1,execSavePcData);
AUTOGENERATE_FUNCTION(UScenePcCtrlHandle,-1,execUpdatePcData);
AUTOGENERATE_FUNCTION(USceneScreenCtrlHandle,-1,execSaveScreenData);
AUTOGENERATE_FUNCTION(USceneScreenCtrlHandle,-1,execUpdateScreenData);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execClear);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRestoreDefault);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execDeactivateAll);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execDeactivateGroup);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execActivateGroup);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execExecuteShortcutBySlot);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRequestShortcutScriptData);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRequestList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execSave);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execUnlockShortcut);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execLockShortcut);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetAssignedKeyFromCommand);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetActiveGroupList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetGroupList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetGroupCommandList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execAssignCommand);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execAssignSpecialKey);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execSetShortcutPage);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestSetCastleSiegeTime);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestConfirmCastleSiegeWaitingList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestJoinCastleSiege);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestCastleSiegeDefenderList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestCastleSiegeAttackerList);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execIsMouseScrolling);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execSetTotalTickCount);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execGetTotalTickCount);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execSetCurrentTick);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execGetCurrentTick);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurNormalDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurDepthDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurIntensity);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_SampleDistance);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_NoiseScale);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_DepthDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_FadeFront);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_MaxIntensity);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Strength);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Blend);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Level);
AUTOGENERATE_FUNCTION(USSQAPI,-1,execRequestSSQStatus);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetRegenInfo);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetPointExpPercentRate);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetPointPercent);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetPoint);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execSetIconSize);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execDelItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execSetItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetColCount);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetRowCount);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execInsertCol);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execInsertRow);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execAddCol);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execAddRow);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execMergeTab);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execGetTopIndex);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetTopOrder);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execInitTabCtrl);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExBlockGameVote);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExBlockGameEnter);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestBlockGameAllData);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExCleftEnter);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestCleftAllData);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetTooltipString);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetInt);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetTextColor);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetTextColor);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetText);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetText);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execSetNodeItemText);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetParentNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetChildNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execIsExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execIsNodeNameExist);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execDeleteNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execSetExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execInsertNodeItem);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execInsertNode);
AUTOGENERATE_FUNCTION(UTutorialAPI,-1,execRequestExSetTutorial);
AUTOGENERATE_FUNCTION(UUIAPI_BUTTON,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetSelectedRadioButtonName);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execClearAnchor);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAnchor);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetTooltipText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTooltipText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTooltipType);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTabOrder);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetResizeFrameSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetFrameSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSizeRel43);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSizeRel);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsFocused);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetFocus);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execNotifyAlarm);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIconize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveShake);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveEx);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveTo);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMove);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAlpha);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAlwaysOnTop);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsEnableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execDisableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execEnableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowTitleByText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowTitle);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execKillUITimer);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetUITimer);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetRect);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execHideWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execShowWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsMinimizedWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsShowWindow);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execToggleDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execIsDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execIsChecked);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetCheck);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetTitle);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddStringWithColor);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetNumOfItems);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSYS_AddStringWithReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddStringWithReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSYS_AddString);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetHighLight);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetEditType);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSimulateBackspace);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_EFFECTBUTTON,-1,execBeginEffect);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execZeroWeight);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execReduceWeight);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execAddWeight);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetFaded);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execFindItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetSelectedItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execDeleteItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execAddItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execClearSelect);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetItemNum);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execSetSelectedIndex);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execGetSelectedIndex);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execGetRecordCount);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execDeleteRecord);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execDeleteAllItem);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execModifyRecord);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execInsertRecord);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteAllCursedWeaponIcon);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execIsOverlapped);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execRequestReduceBtn);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDrawGridIcon);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execSetSSQStatus);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execSetShowQuest);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteAllTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execAddTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execAdjustMapView);
AUTOGENERATE_FUNCTION(UUIAPI_MULTIEDITBOX,-1,execSetString);
AUTOGENERATE_FUNCTION(UUIAPI_MULTIEDITBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLITEMINFO,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLITEMINFO,-1,execSetItemInfo);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLNEEDEDITEM,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLNEEDEDITEM,-1,execAddData);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execUpdateShortcut);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execGetTotalTickCount);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execSetCurrentTick);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execGetCurrentTick);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetRegenInfo);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPointExpPercentRate);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPointPercent);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPoint);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execDelItem);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execGetItem);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execGetColCount);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execGetRowCount);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execInsertCol);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execInsertRow);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execAddCol);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execAddRow);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetTooltipString);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execGetText);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetInt);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetText);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetTextColor);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTLISTBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTLISTBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execGetTextureName);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureWithObject);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureWithClanCrest);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureCtrlType);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetUV);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execSetNodeItemText);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetParentNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetChildNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execIsExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execIsNodeNameExist);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execDeleteNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execSetExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execInsertNodeItem);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execInsertNode);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetEnableClassIndexList);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetClassnameSysstringIndexByClassIndex);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetSubClanSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestSubClanSkillList);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestClanSkillList);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestClanInfo);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetNameValue);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetAllianceCrestTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetEmblemTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetCrestTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetAllianceName);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetName);
AUTOGENERATE_FUNCTION(UUIDATA_GAMETIP,-1,execGetDataByIndex);
AUTOGENERATE_FUNCTION(UUIDATA_GAMETIP,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetIconTex);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDescription);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetItemName);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingDescription);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZone);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneLoc);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetMinLevel);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneType);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneName);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemNameClass);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEtcItemTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemEnchantEffectDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemEffectDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemEnchantValue);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsExistSetItem);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemNum);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetRefineryItemName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsCrystallizable);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemInfo);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemCrystalType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemDataType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemWeight);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemAdditionalName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroCount);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroInfo);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNpcProperty);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCName);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execGetMemberVirtualName);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execMovePartyMember);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execGetMemberName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByID);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execExecuteSkill);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPlayBlendingAnim);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execBeginMixedAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execStopAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execIsPlayingAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPauseAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execResumeAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPlayAnimation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSelectedAnimationState);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUnlimitZoom);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execStopTime);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execL2Teleport);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execIsL2Seamless);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execExecuteCommand);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execRotateFace);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execChangeCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAttackTarget);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execToggleAttackMode);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSummonNewCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetItemTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetItemMeshName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execEquipItem);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execDeletePC);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execStopSkill);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUseSkill);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execReserveTestPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execDestroyTestPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execReCreateTestPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execCreateTestPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetAppSecondsQPC);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddFaceTextureToComboBox);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUpdateHairMeshAndTextureInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetRearHairTextureString);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetFrontHairTextureString);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetIndexRearHairMeshUserData);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetIndexFrontHairMeshUserData);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetRearHairUserData);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetFrontHairUserData);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetMaxHairMesh);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execIsNPCPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddHairMeshToComboBox);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetPawnResourceSelectedCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetSelectedCharacterFaceStyle);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSelectedCharacterFaceStyle);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSelectedCharacterHairStyle);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSelectedCharacterHairColor);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddAnimationList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execLoadSelectedCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetPawnCurrentFrame);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetPawnFrameCount);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execRequestLoadAllItem);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetEXPRate);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetIsPetOrSummoned);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetCarringWeight);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetCarryWeight);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMaxEXP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMinEXP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMaxFatigue);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMaxMP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMaxHP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetEXP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetFatigue);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetLevel);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetSP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetMP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetHP);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetID);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetName);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetInventoryCount);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetInventoryLimit);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execHasCrystallizeAbility);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerEnvironment);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerMoveType);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerEXPRate);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetRecipeShopMsg);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerID);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execIsHero);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestReward);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestIscategory);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsShowableItemNumQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsShowableJournalQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestZone);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetClearedQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestType);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetMinLevel);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetIntro);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetRequirement);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetStartNPCID);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetStartNPCLoc);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetTargetName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetTargetLoc);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestItem);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestDescription);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestJournalName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsMinimapOnly);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidLoc);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidDescription);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterZone);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterLevel);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterID);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeIsMultipleProduct);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeMaterialItemBy2Condition);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeDescriptionBy2Condition);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeIconNameBy2Condition);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeNameBy2Condition);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeMaterialItem);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeSuccessRate);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeDescription);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeLevel);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeMpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeCrystalType);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeProductNum);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeProductID);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeIconName);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeItemID);
AUTOGENERATE_FUNCTION(UUIDATA_REFINERYOPTION,-1,execGetOptionDescription);
AUTOGENERATE_FUNCTION(UUIDATA_REFINERYOPTION,-1,execGetQuality);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetCastRange);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetMpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetHpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetOperateType);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantIcon);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetDescription);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetIconName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetStaticObjectShowHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetStaticObjectName);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectMaxHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectType);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectNameID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetActor);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsVehicle);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsHPShowableNPC);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsCanBeAttacked);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsPet);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsNpc);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsServerObject);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetClassID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetPledgeID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetNameColor);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetName);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMaxMP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetHP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMaxHP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetUserRank);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetID);
AUTOGENERATE_FUNCTION(UUIDATA_TRANSFORM,-1,execGetNpcID);
AUTOGENERATE_FUNCTION(UUIDATA_TUTORIALLIST,-1,execCheckTutorial);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execGetClanType);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execGetUserName);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execAirShipMoveDown);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execAirShipMoveUp);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execRequestExAirShipTeleport);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execGetVehicle);
AUTOGENERATE_FUNCTION(UVideoPlayerCtrlHandle,-1,execFullScreen);
AUTOGENERATE_FUNCTION(UVideoPlayerCtrlHandle,-1,execResize);
AUTOGENERATE_FUNCTION(UVideoPlayerCtrlHandle,-1,execEndMovie);
AUTOGENERATE_FUNCTION(UVideoPlayerCtrlHandle,-1,execPlayMovie);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif

#if __STATIC_LINK
#ifndef NWINDOW_NATIVE_DEFS
#define NWINDOW_NATIVE_DEFS

DECLARE_NATIVE_TYPE(NWindow,UActionAPI);
DECLARE_NATIVE_TYPE(NWindow,UAnimTextureHandle);
DECLARE_NATIVE_TYPE(NWindow,UTextureHandle);
DECLARE_NATIVE_TYPE(NWindow,UAuctionAPI);
DECLARE_NATIVE_TYPE(NWindow,UAudioAPI);
DECLARE_NATIVE_TYPE(NWindow,UBarHandle);
DECLARE_NATIVE_TYPE(NWindow,UWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UBookMarkAPI);
DECLARE_NATIVE_TYPE(NWindow,UUIEventManager);
DECLARE_NATIVE_TYPE(NWindow,UButtonHandle);
DECLARE_NATIVE_TYPE(NWindow,UCharacterViewportWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UChatWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UTextListBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UCheckBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UComboBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UCommandChannelAPI);
DECLARE_NATIVE_TYPE(NWindow,UDrawPanelHandle);
DECLARE_NATIVE_TYPE(NWindow,UEditBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UEnchantAPI);
DECLARE_NATIVE_TYPE(NWindow,UEventMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UFileListAPI);
DECLARE_NATIVE_TYPE(NWindow,UFlashCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UGFxUIScript);
DECLARE_NATIVE_TYPE(NWindow,UUIScript);
DECLARE_NATIVE_TYPE(NWindow,UGMAPI);
DECLARE_NATIVE_TYPE(NWindow,UGraphicAPI);
DECLARE_NATIVE_TYPE(NWindow,UHennaAPI);
DECLARE_NATIVE_TYPE(NWindow,UHeroTowerAPI);
DECLARE_NATIVE_TYPE(NWindow,UHtmlHandle);
DECLARE_NATIVE_TYPE(NWindow,UInputAPI);
DECLARE_NATIVE_TYPE(NWindow,UItemWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UListBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UListCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UMacroAPI);
DECLARE_NATIVE_TYPE(NWindow,UMiniMapAPI);
DECLARE_NATIVE_TYPE(NWindow,UMinimapCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UMultiEditBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UNameCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UOlympiadAPI);
DECLARE_NATIVE_TYPE(NWindow,UPartyMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UPetAPI);
DECLARE_NATIVE_TYPE(NWindow,UPetitionAPI);
DECLARE_NATIVE_TYPE(NWindow,UPostWndAPI);
DECLARE_NATIVE_TYPE(NWindow,UProgressCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UPropertyControllerHandle);
DECLARE_NATIVE_TYPE(NWindow,UQuestAPI);
DECLARE_NATIVE_TYPE(NWindow,URadarMapCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,URadioButtonHandle);
DECLARE_NATIVE_TYPE(NWindow,URecipeAPI);
DECLARE_NATIVE_TYPE(NWindow,URefineryAPI);
DECLARE_NATIVE_TYPE(NWindow,USceneCameraCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneEditorAPI);
DECLARE_NATIVE_TYPE(NWindow,USceneMusicCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneNpcCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UScenePcCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneScreenCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UShortcutAPI);
DECLARE_NATIVE_TYPE(NWindow,USiegeAPI);
DECLARE_NATIVE_TYPE(NWindow,USliderCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USSAOAPI);
DECLARE_NATIVE_TYPE(NWindow,USSQAPI);
DECLARE_NATIVE_TYPE(NWindow,UStatusBarHandle);
DECLARE_NATIVE_TYPE(NWindow,UStatusIconHandle);
DECLARE_NATIVE_TYPE(NWindow,UTabHandle);
DECLARE_NATIVE_TYPE(NWindow,UTeamMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UTextBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UTreeHandle);
DECLARE_NATIVE_TYPE(NWindow,UTutorialAPI);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_BUTTON);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_WINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_CHECKBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_COMBOBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_EDITBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_EFFECTBUTTON);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_INVENWEIGHT);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_ITEMWINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_LISTCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MINIMAPCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTIEDITBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTISELLITEMINFO);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTISELLNEEDEDITEM);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_SHORTCUTITEMWINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_SLIDERCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_STATUSBARCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_STATUSICONCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTLISTBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTURECTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TREECTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIDataManager);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_CLAN);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_GAMETIP);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_HENNA);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_HUNTINGZONE);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_ITEM);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_MACRO);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_NPC);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PARTY);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PAWNVIEWER);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PET);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PLAYER);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_QUEST);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_RAID);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_RECIPE);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_REFINERYOPTION);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_SKILL);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_STATICOBJECT);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TARGET);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TRANSFORM);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TUTORIALLIST);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_USER);
DECLARE_NATIVE_TYPE(NWindow,UVehicleAPI);
DECLARE_NATIVE_TYPE(NWindow,UVideoPlayerCtrlHandle);

#define AUTO_INITIALIZE_REGISTRANTS_NWINDOW \
	UActionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUActionAPINative; \
	UAnimTextureHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAnimTextureHandleNative; \
	UTextureHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextureHandleNative; \
	UAuctionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAuctionAPINative; \
	UAudioAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAudioAPINative; \
	UBarHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUBarHandleNative; \
	UWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUWindowHandleNative; \
	UBookMarkAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUBookMarkAPINative; \
	UUIEventManager::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIEventManagerNative; \
	UButtonHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUButtonHandleNative; \
	UCharacterViewportWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCharacterViewportWindowHandleNative; \
	UChatWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUChatWindowHandleNative; \
	UTextListBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextListBoxHandleNative; \
	UCheckBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCheckBoxHandleNative; \
	UComboBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUComboBoxHandleNative; \
	UCommandChannelAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCommandChannelAPINative; \
	UDrawPanelHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUDrawPanelHandleNative; \
	UEditBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEditBoxHandleNative; \
	UEnchantAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEnchantAPINative; \
	UEventMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEventMatchAPINative; \
	UFileListAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUFileListAPINative; \
	UFlashCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUFlashCtrlHandleNative; \
	UGFxUIScript::StaticClass(); \
	UUIScript::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIScriptNative; \
	UGMAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGMAPINative; \
	UGraphicAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGraphicAPINative; \
	UHennaAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHennaAPINative; \
	UHeroTowerAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHeroTowerAPINative; \
	UHtmlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHtmlHandleNative; \
	UInputAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUInputAPINative; \
	UItemWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUItemWindowHandleNative; \
	UListBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUListBoxHandleNative; \
	UListCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUListCtrlHandleNative; \
	UMacroAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMacroAPINative; \
	UMiniMapAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMiniMapAPINative; \
	UMinimapCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMinimapCtrlHandleNative; \
	UMultiEditBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMultiEditBoxHandleNative; \
	UNameCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUNameCtrlHandleNative; \
	UOlympiadAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUOlympiadAPINative; \
	UPartyMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPartyMatchAPINative; \
	UPetAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPetAPINative; \
	UPetitionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPetitionAPINative; \
	UPostWndAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPostWndAPINative; \
	UProgressCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUProgressCtrlHandleNative; \
	UPropertyControllerHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPropertyControllerHandleNative; \
	UQuestAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUQuestAPINative; \
	URadarMapCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURadarMapCtrlHandleNative; \
	URadioButtonHandle::StaticClass(); \
	URecipeAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURecipeAPINative; \
	URefineryAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURefineryAPINative; \
	USceneCameraCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneCameraCtrlHandleNative; \
	USceneEditorAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneEditorAPINative; \
	USceneMusicCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneMusicCtrlHandleNative; \
	USceneNpcCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneNpcCtrlHandleNative; \
	UScenePcCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUScenePcCtrlHandleNative; \
	USceneScreenCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneScreenCtrlHandleNative; \
	UShortcutAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUShortcutAPINative; \
	USiegeAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSiegeAPINative; \
	USliderCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSliderCtrlHandleNative; \
	USSAOAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSSAOAPINative; \
	USSQAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSSQAPINative; \
	UStatusBarHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatusBarHandleNative; \
	UStatusIconHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatusIconHandleNative; \
	UTabHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTabHandleNative; \
	UTeamMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTeamMatchAPINative; \
	UTextBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextBoxHandleNative; \
	UTreeHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTreeHandleNative; \
	UTutorialAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTutorialAPINative; \
	UUIAPI_BUTTON::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_BUTTONNative; \
	UUIAPI_WINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_WINDOWNative; \
	UUIAPI_CHECKBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_CHECKBOXNative; \
	UUIAPI_COMBOBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_COMBOBOXNative; \
	UUIAPI_EDITBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_EDITBOXNative; \
	UUIAPI_EFFECTBUTTON::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_EFFECTBUTTONNative; \
	UUIAPI_INVENWEIGHT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_INVENWEIGHTNative; \
	UUIAPI_ITEMWINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_ITEMWINDOWNative; \
	UUIAPI_LISTCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_LISTCTRLNative; \
	UUIAPI_MINIMAPCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MINIMAPCTRLNative; \
	UUIAPI_MULTIEDITBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTIEDITBOXNative; \
	UUIAPI_MULTISELLITEMINFO::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTISELLITEMINFONative; \
	UUIAPI_MULTISELLNEEDEDITEM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTISELLNEEDEDITEMNative; \
	UUIAPI_SHORTCUTITEMWINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_SHORTCUTITEMWINDOWNative; \
	UUIAPI_SLIDERCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_SLIDERCTRLNative; \
	UUIAPI_STATUSBARCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_STATUSBARCTRLNative; \
	UUIAPI_STATUSICONCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_STATUSICONCTRLNative; \
	UUIAPI_TEXTBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTBOXNative; \
	UUIAPI_TEXTLISTBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTLISTBOXNative; \
	UUIAPI_TEXTURECTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTURECTRLNative; \
	UUIAPI_TREECTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TREECTRLNative; \
	UUIDataManager::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDataManagerNative; \
	UUIDATA_CLAN::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_CLANNative; \
	UUIDATA_GAMETIP::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_GAMETIPNative; \
	UUIDATA_HENNA::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_HENNANative; \
	UUIDATA_HUNTINGZONE::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_HUNTINGZONENative; \
	UUIDATA_ITEM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_ITEMNative; \
	UUIDATA_MACRO::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_MACRONative; \
	UUIDATA_NPC::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_NPCNative; \
	UUIDATA_PARTY::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PARTYNative; \
	UUIDATA_PAWNVIEWER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PAWNVIEWERNative; \
	UUIDATA_PET::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PETNative; \
	UUIDATA_PLAYER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PLAYERNative; \
	UUIDATA_QUEST::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_QUESTNative; \
	UUIDATA_RAID::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_RAIDNative; \
	UUIDATA_RECIPE::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_RECIPENative; \
	UUIDATA_REFINERYOPTION::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_REFINERYOPTIONNative; \
	UUIDATA_SKILL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_SKILLNative; \
	UUIDATA_STATICOBJECT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_STATICOBJECTNative; \
	UUIDATA_TARGET::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TARGETNative; \
	UUIDATA_TRANSFORM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TRANSFORMNative; \
	UUIDATA_TUTORIALLIST::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TUTORIALLISTNative; \
	UUIDATA_USER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_USERNative; \
	UVehicleAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUVehicleAPINative; \
	UVideoPlayerCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUVideoPlayerCtrlHandleNative; \

#endif // NWindow_NATIVE_DEFS

#ifdef NATIVES_ONLY
NATIVE_INFO(UActionAPI) GNWindowUActionAPINatives[] = 
{ 
	MAP_NATIVE(UActionAPI,execGetActionNameBySocialIndex)
	MAP_NATIVE(UActionAPI,execRequestSummonedActionList)
	MAP_NATIVE(UActionAPI,execRequestPetActionList)
	MAP_NATIVE(UActionAPI,execRequestActionList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UActionAPI);

NATIVE_INFO(UAnimTextureHandle) GNWindowUAnimTextureHandleNatives[] = 
{ 
	MAP_NATIVE(UAnimTextureHandle,execStop)
	MAP_NATIVE(UAnimTextureHandle,execPause)
	MAP_NATIVE(UAnimTextureHandle,execPlay)
	MAP_NATIVE(UAnimTextureHandle,execSetTimes)
	MAP_NATIVE(UAnimTextureHandle,execSetLoopCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAnimTextureHandle);

NATIVE_INFO(UTextureHandle) GNWindowUTextureHandleNatives[] = 
{ 
	MAP_NATIVE(UTextureHandle,execSetColorModify)
	MAP_NATIVE(UTextureHandle,execGetColor)
	MAP_NATIVE(UTextureHandle,execSetRotatingDirection)
	MAP_NATIVE(UTextureHandle,execSetAutoRotateType)
	MAP_NATIVE(UTextureHandle,execGetTextureName)
	MAP_NATIVE(UTextureHandle,execSetTextureWithObject)
	MAP_NATIVE(UTextureHandle,execSetTextureWithClanCrest)
	MAP_NATIVE(UTextureHandle,execSetTextureCtrlType)
	MAP_NATIVE(UTextureHandle,execSetTextureSize)
	MAP_NATIVE(UTextureHandle,execSetUV)
	MAP_NATIVE(UTextureHandle,execSetTexture)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextureHandle);

NATIVE_INFO(UAuctionAPI) GNWindowUAuctionAPINatives[] = 
{ 
	MAP_NATIVE(UAuctionAPI,execRequestInfoItemAuction)
	MAP_NATIVE(UAuctionAPI,execRequestBidItemAuction)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAuctionAPI);

NATIVE_INFO(UAudioAPI) GNWindowUAudioAPINatives[] = 
{ 
	MAP_NATIVE(UAudioAPI,execStopMusic)
	MAP_NATIVE(UAudioAPI,execPlayMusic)
	MAP_NATIVE(UAudioAPI,execPlaySound)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAudioAPI);

NATIVE_INFO(UBarHandle) GNWindowUBarHandleNatives[] = 
{ 
	MAP_NATIVE(UBarHandle,execSetTexture)
	MAP_NATIVE(UBarHandle,execClear)
	MAP_NATIVE(UBarHandle,execGetValue)
	MAP_NATIVE(UBarHandle,execSetValue)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UBarHandle);

NATIVE_INFO(UWindowHandle) GNWindowUWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UWindowHandle,execSetShowAndHideAnimType)
	MAP_NATIVE(UWindowHandle,execIsCurrentState)
	MAP_NATIVE(UWindowHandle,execExitState)
	MAP_NATIVE(UWindowHandle,execEnterState)
	MAP_NATIVE(UWindowHandle,execChangeControlOrder)
	MAP_NATIVE(UWindowHandle,execMakeBaseUC)
	MAP_NATIVE(UWindowHandle,execConvertToEditable)
	MAP_NATIVE(UWindowHandle,execSetXMLDocumentInfo)
	MAP_NATIVE(UWindowHandle,execGetXMLDocumentInfo)
	MAP_NATIVE(UWindowHandle,execSaveXMLWindow)
	MAP_NATIVE(UWindowHandle,execLoadXMLWindow)
	MAP_NATIVE(UWindowHandle,execGetControlType)
	MAP_NATIVE(UWindowHandle,execIsControlContainer)
	MAP_NATIVE(UWindowHandle,execSetScript)
	MAP_NATIVE(UWindowHandle,execSetBackTexture)
	MAP_NATIVE(UWindowHandle,execDeleteChildWnd)
	MAP_NATIVE(UWindowHandle,execGetClassName)
	MAP_NATIVE(UWindowHandle,execAddChildWnd)
	MAP_NATIVE(UWindowHandle,execSetEditable)
	MAP_NATIVE(UWindowHandle,execInitRotation)
	MAP_NATIVE(UWindowHandle,execIsFront)
	MAP_NATIVE(UWindowHandle,execClearRotation)
	MAP_NATIVE(UWindowHandle,execRotate)
	MAP_NATIVE(UWindowHandle,execSetSettledWnd)
	MAP_NATIVE(UWindowHandle,execSetScrollHeight)
	MAP_NATIVE(UWindowHandle,execSetScrollPosition)
	MAP_NATIVE(UWindowHandle,execSetScrollBarPosition)
	MAP_NATIVE(UWindowHandle,execSetResizeFrameSize)
	MAP_NATIVE(UWindowHandle,execSetFrameSize)
	MAP_NATIVE(UWindowHandle,execClearAllChildShortcutItemTooltip)
	MAP_NATIVE(UWindowHandle,execClearTooltip)
	MAP_NATIVE(UWindowHandle,execGetTooltipCustomType)
	MAP_NATIVE(UWindowHandle,execSetTooltipCustomType)
	MAP_NATIVE(UWindowHandle,execSetTooltipType)
	MAP_NATIVE(UWindowHandle,execGetTooltipText)
	MAP_NATIVE(UWindowHandle,execSetTooltipText)
	MAP_NATIVE(UWindowHandle,execNotifyAlarm)
	MAP_NATIVE(UWindowHandle,execKillTimer)
	MAP_NATIVE(UWindowHandle,execSetTimer)
	MAP_NATIVE(UWindowHandle,execReleaseFocus)
	MAP_NATIVE(UWindowHandle,execIsFocused)
	MAP_NATIVE(UWindowHandle,execSetFocus)
	MAP_NATIVE(UWindowHandle,execIsEnableWindow)
	MAP_NATIVE(UWindowHandle,execDisableWindow)
	MAP_NATIVE(UWindowHandle,execEnableWindow)
	MAP_NATIVE(UWindowHandle,execSetDragOverTexture)
	MAP_NATIVE(UWindowHandle,execSetVirtualDrag)
	MAP_NATIVE(UWindowHandle,execIsVirtualDrag)
	MAP_NATIVE(UWindowHandle,execSetStuckable)
	MAP_NATIVE(UWindowHandle,execSetDraggable)
	MAP_NATIVE(UWindowHandle,execIsDraggable)
	MAP_NATIVE(UWindowHandle,execIsAnchored)
	MAP_NATIVE(UWindowHandle,execClearAnchor)
	MAP_NATIVE(UWindowHandle,execSetAnchor)
	MAP_NATIVE(UWindowHandle,execDisableTick)
	MAP_NATIVE(UWindowHandle,execEnableTick)
	MAP_NATIVE(UWindowHandle,execMoveShake)
	MAP_NATIVE(UWindowHandle,execMoveExWithTime)
	MAP_NATIVE(UWindowHandle,execMoveEx)
	MAP_NATIVE(UWindowHandle,execMoveTo)
	MAP_NATIVE(UWindowHandle,execMove)
	MAP_NATIVE(UWindowHandle,execIsRelativeSize)
	MAP_NATIVE(UWindowHandle,execSetWindowSizeRel43)
	MAP_NATIVE(UWindowHandle,execGetWindowSizeRel)
	MAP_NATIVE(UWindowHandle,execSetWindowSizeRel)
	MAP_NATIVE(UWindowHandle,execGetWindowSize)
	MAP_NATIVE(UWindowHandle,execSetWindowSize)
	MAP_NATIVE(UWindowHandle,execAddWindowSize)
	MAP_NATIVE(UWindowHandle,execGetRect)
	MAP_NATIVE(UWindowHandle,execSetModal)
	MAP_NATIVE(UWindowHandle,execSetAlwaysFullAlpha)
	MAP_NATIVE(UWindowHandle,execSetFontColor)
	MAP_NATIVE(UWindowHandle,execIsAlwaysOnBack)
	MAP_NATIVE(UWindowHandle,execIsAlwaysOnTop)
	MAP_NATIVE(UWindowHandle,execIsVirtual)
	MAP_NATIVE(UWindowHandle,execGetScriptName)
	MAP_NATIVE(UWindowHandle,execGetScript)
	MAP_NATIVE(UWindowHandle,execSetAlpha)
	MAP_NATIVE(UWindowHandle,execGetAlpha)
	MAP_NATIVE(UWindowHandle,execGetTopFrameWnd)
	MAP_NATIVE(UWindowHandle,execIsChildOf)
	MAP_NATIVE(UWindowHandle,execGetChildWindowList)
	MAP_NATIVE(UWindowHandle,execGetParentWindowHandle)
	MAP_NATIVE(UWindowHandle,execChangeParentWindow)
	MAP_NATIVE(UWindowHandle,execGetParentWindowName)
	MAP_NATIVE(UWindowHandle,execGetWindowName)
	MAP_NATIVE(UWindowHandle,execIsMinimizedWindow)
	MAP_NATIVE(UWindowHandle,execIsShowWindow)
	MAP_NATIVE(UWindowHandle,execHideWindow)
	MAP_NATIVE(UWindowHandle,execShowWindow)
	MAP_NATIVE(UWindowHandle,execSetTitlePosOffset)
	MAP_NATIVE(UWindowHandle,execSetWindowTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UWindowHandle);

NATIVE_INFO(UBookMarkAPI) GNWindowUBookMarkAPINatives[] = 
{ 
	MAP_NATIVE(UBookMarkAPI,execRequestGetBookMarkPos)
	MAP_NATIVE(UBookMarkAPI,execRequestChangeBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestTelePortBookMark)
	MAP_NATIVE(UBookMarkAPI,execRequestDeleteBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestModifyBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestSaveBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestShowBookMark)
	MAP_NATIVE(UBookMarkAPI,execRequestBookMarkSlotInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UBookMarkAPI);

NATIVE_INFO(UUIEventManager) GNWindowUUIEventManagerNatives[] = 
{ 
	MAP_NATIVE(UUIEventManager,execGetUIState)
	MAP_NATIVE(UUIEventManager,execSMessageBox)
	MAP_NATIVE(UUIEventManager,execMessageBox)
	MAP_NATIVE(UUIEventManager,execSetUIState)
	MAP_NATIVE(UUIEventManager,execRegisterState)
	MAP_NATIVE(UUIEventManager,execRegisterEvent)
	MAP_NATIVE(UUIEventManager,execParseFloat)
	MAP_NATIVE(UUIEventManager,execParseINT64)
	MAP_NATIVE(UUIEventManager,execParseInt)
	MAP_NATIVE(UUIEventManager,execParseString)
	MAP_NATIVE(UUIEventManager,execParamAddINT64)
	MAP_NATIVE(UUIEventManager,execParamAdd)
	MAP_NATIVE(UUIEventManager,execExecuteEvent)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIEventManager);

NATIVE_INFO(UButtonHandle) GNWindowUButtonHandleNatives[] = 
{ 
	MAP_NATIVE(UButtonHandle,execSetTexture)
	MAP_NATIVE(UButtonHandle,execSetNameText)
	MAP_NATIVE(UButtonHandle,execSetButtonName)
	MAP_NATIVE(UButtonHandle,execGetButtonName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UButtonHandle);

NATIVE_INFO(UCharacterViewportWindowHandle) GNWindowUCharacterViewportWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UCharacterViewportWindowHandle,execHideNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execShowNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execPlayAnimation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSpawnNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffsetY)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffsetX)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterScale)
	MAP_NATIVE(UCharacterViewportWindowHandle,execEndZoom)
	MAP_NATIVE(UCharacterViewportWindowHandle,execStartZoom)
	MAP_NATIVE(UCharacterViewportWindowHandle,execEndRotation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execStartRotation)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCharacterViewportWindowHandle);

NATIVE_INFO(UChatWindowHandle) GNWindowUChatWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UChatWindowHandle,execEnableTexture)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UChatWindowHandle);

NATIVE_INFO(UTextListBoxHandle) GNWindowUTextListBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UTextListBoxHandle,execSetTextListBoxScrollPosition)
	MAP_NATIVE(UTextListBoxHandle,execClear)
	MAP_NATIVE(UTextListBoxHandle,execAddStringToChatWindow)
	MAP_NATIVE(UTextListBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextListBoxHandle);

NATIVE_INFO(UCheckBoxHandle) GNWindowUCheckBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UCheckBoxHandle,execToggleDisable)
	MAP_NATIVE(UCheckBoxHandle,execSetDisable)
	MAP_NATIVE(UCheckBoxHandle,execIsDisable)
	MAP_NATIVE(UCheckBoxHandle,execIsChecked)
	MAP_NATIVE(UCheckBoxHandle,execSetCheck)
	MAP_NATIVE(UCheckBoxHandle,execSetTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCheckBoxHandle);

NATIVE_INFO(UComboBoxHandle) GNWindowUComboBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UComboBoxHandle,execGetAdditionalString)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithGapWithStr)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithStr)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithGap)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIcon)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithFileExt)
	MAP_NATIVE(UComboBoxHandle,execGetFileExtInfo)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithColor)
	MAP_NATIVE(UComboBoxHandle,execGetNumOfItems)
	MAP_NATIVE(UComboBoxHandle,execClear)
	MAP_NATIVE(UComboBoxHandle,execSetSelectedNum)
	MAP_NATIVE(UComboBoxHandle,execGetSelectedNum)
	MAP_NATIVE(UComboBoxHandle,execGetReserved)
	MAP_NATIVE(UComboBoxHandle,execGetString)
	MAP_NATIVE(UComboBoxHandle,execSYS_AddStringWithReserved)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithReserved)
	MAP_NATIVE(UComboBoxHandle,execSYS_AddString)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithGap)
	MAP_NATIVE(UComboBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UComboBoxHandle);

NATIVE_INFO(UCommandChannelAPI) GNWindowUCommandChannelAPINatives[] = 
{ 
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelPartyMembersInfo)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelWithdraw)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelBanParty)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCommandChannelAPI);

NATIVE_INFO(UDrawPanelHandle) GNWindowUDrawPanelHandleNatives[] = 
{ 
	MAP_NATIVE(UDrawPanelHandle,execPreCheckPanelSize)
	MAP_NATIVE(UDrawPanelHandle,execClear)
	MAP_NATIVE(UDrawPanelHandle,execInsertDrawItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UDrawPanelHandle);

NATIVE_INFO(UEditBoxHandle) GNWindowUEditBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UEditBoxHandle,execAddItemToAutoCompleteHistory)
	MAP_NATIVE(UEditBoxHandle,execDeleteNameFromPledgeMemberSearchList)
	MAP_NATIVE(UEditBoxHandle,execClearPledgeMemberSearchList)
	MAP_NATIVE(UEditBoxHandle,execFillPledgeMemberSearchList)
	MAP_NATIVE(UEditBoxHandle,execAddNameToPledgeMemberSearchList)
	MAP_NATIVE(UEditBoxHandle,execDeleteNameFromFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execClearFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execAddNameToFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execFillFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execDeleteNameFromAdditionalFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execClearAdditionalFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execFillAdditionalFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execAddNameToAdditionalFriendSearchList)
	MAP_NATIVE(UEditBoxHandle,execClearHistory)
	MAP_NATIVE(UEditBoxHandle,execSetEnableTextLink)
	MAP_NATIVE(UEditBoxHandle,execGetMaxLength)
	MAP_NATIVE(UEditBoxHandle,execSetMaxLength)
	MAP_NATIVE(UEditBoxHandle,execSetHighLight)
	MAP_NATIVE(UEditBoxHandle,execSetEditType)
	MAP_NATIVE(UEditBoxHandle,execClear)
	MAP_NATIVE(UEditBoxHandle,execSimulateBackspace)
	MAP_NATIVE(UEditBoxHandle,execAddString)
	MAP_NATIVE(UEditBoxHandle,execSetString)
	MAP_NATIVE(UEditBoxHandle,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEditBoxHandle);

NATIVE_INFO(UEnchantAPI) GNWindowUEnchantAPINatives[] = 
{ 
	MAP_NATIVE(UEnchantAPI,execRequestExCancelEnchantItem)
	MAP_NATIVE(UEnchantAPI,execRequestExTryToPutEnchantSupportItem)
	MAP_NATIVE(UEnchantAPI,execRequestExTryToPutEnchantTargetItem)
	MAP_NATIVE(UEnchantAPI,execRequestRemoveAttribute)
	MAP_NATIVE(UEnchantAPI,execRequestEnchantItemAttribute)
	MAP_NATIVE(UEnchantAPI,execRequestEnchantItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEnchantAPI);

NATIVE_INFO(UEventMatchAPI) GNWindowUEventMatchAPINatives[] = 
{ 
	MAP_NATIVE(UEventMatchAPI,execRequestEventMatchObserverEnd)
	MAP_NATIVE(UEventMatchAPI,execSetSelectedUser)
	MAP_NATIVE(UEventMatchAPI,execGetUserData)
	MAP_NATIVE(UEventMatchAPI,execGetPartyMemberCount)
	MAP_NATIVE(UEventMatchAPI,execGetTeamName)
	MAP_NATIVE(UEventMatchAPI,execGetScore)
	MAP_NATIVE(UEventMatchAPI,execGetEventMatchData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEventMatchAPI);

NATIVE_INFO(UFileListAPI) GNWindowUFileListAPINatives[] = 
{ 
	MAP_NATIVE(UFileListAPI,execLoadFlash)
	MAP_NATIVE(UFileListAPI,execGetDriveInfoList)
	MAP_NATIVE(UFileListAPI,execGetFileInfoList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UFileListAPI);

NATIVE_INFO(UFlashCtrlHandle) GNWindowUFlashCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UFlashCtrlHandle,execInvoke)
	MAP_NATIVE(UFlashCtrlHandle,execSetFlashFile)
	MAP_NATIVE(UFlashCtrlHandle,execGotoFrame)
	MAP_NATIVE(UFlashCtrlHandle,execGetCurrentFrame)
	MAP_NATIVE(UFlashCtrlHandle,execGetTotalFrameCnt)
	MAP_NATIVE(UFlashCtrlHandle,execStop)
	MAP_NATIVE(UFlashCtrlHandle,execPause)
	MAP_NATIVE(UFlashCtrlHandle,execPlay)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UFlashCtrlHandle);

NATIVE_INFO(UUIScript) GNWindowUUIScriptNatives[] = 
{ 
	MAP_NATIVE(UUIScript,execGetShortcutString)
	MAP_NATIVE(UUIScript,execIsUseSecondaryAuth)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthModify)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthVerify)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthCreate)
	MAP_NATIVE(UUIScript,execIsUseGoodsInvnentory)
	MAP_NATIVE(UUIScript,execGetGoodsIconName)
	MAP_NATIVE(UUIScript,execRequestUseGoodsInventoryItem)
	MAP_NATIVE(UUIScript,execRequestGoodsInventoryItemDesc)
	MAP_NATIVE(UUIScript,execRequestGoodsInventoryItemList)
	MAP_NATIVE(UUIScript,execGetFormattedTimeStrMMHH)
	MAP_NATIVE(UUIScript,execBR_GetDayType)
	MAP_NATIVE(UUIScript,execBR_ConvertTimeToStr)
	MAP_NATIVE(UUIScript,execBR_GetShowEventUI)
	MAP_NATIVE(UUIScript,execIsUsingPrimeShop)
	MAP_NATIVE(UUIScript,execShowCashChargeWebSite)
	MAP_NATIVE(UUIScript,execRequestBR_MinigameInsertScore)
	MAP_NATIVE(UUIScript,execRequestBR_MinigameLoadScores)
	MAP_NATIVE(UUIScript,execRequestBR_RecentProductList)
	MAP_NATIVE(UUIScript,execRequestBR_BuyProduct)
	MAP_NATIVE(UUIScript,execRequestBR_ProductInfo)
	MAP_NATIVE(UUIScript,execRequestBR_ProductList)
	MAP_NATIVE(UUIScript,execRequestBR_GamePoint)
	MAP_NATIVE(UUIScript,execSetUseHDRRenderEffect)
	MAP_NATIVE(UUIScript,execSetHDRRenderVal)
	MAP_NATIVE(UUIScript,execRequestFinishNPCZoomCamera)
	MAP_NATIVE(UUIScript,execToggleReplayRec)
	MAP_NATIVE(UUIScript,execSetMotionBlurAlpha)
	MAP_NATIVE(UUIScript,execSetMotionBlurUse)
	MAP_NATIVE(UUIScript,execRequestPartyMatchWaitList)
	MAP_NATIVE(UUIScript,execRequestSetPostEffect)
	MAP_NATIVE(UUIScript,execRequestSetRGBVal)
	MAP_NATIVE(UUIScript,execRequestSetRGBConversionEffect)
	MAP_NATIVE(UUIScript,execRequestSetHSVVal)
	MAP_NATIVE(UUIScript,execRequestSetHSVConversionEffect)
	MAP_NATIVE(UUIScript,execRequestSetYCbCrVal)
	MAP_NATIVE(UUIScript,execRequestSetYCbCrConversionEffect)
	MAP_NATIVE(UUIScript,execOpenL2Home)
	MAP_NATIVE(UUIScript,execOpenGivenURL)
	MAP_NATIVE(UUIScript,execGetRadioButtonHandle)
	MAP_NATIVE(UUIScript,execRequestAddExpandQuestAlarm)
	MAP_NATIVE(UUIScript,execRequestAskMemberShip)
	MAP_NATIVE(UUIScript,execRequestPartyLootingModifyAgreement)
	MAP_NATIVE(UUIScript,execRequestPartyLootingModify)
	MAP_NATIVE(UUIScript,execGetMyComputerPath)
	MAP_NATIVE(UUIScript,execGetDesktopPath)
	MAP_NATIVE(UUIScript,execGetMydocumentPath)
	MAP_NATIVE(UUIScript,execAnswerCoupleAction)
	MAP_NATIVE(UUIScript,execGetDrivesInfoList)
	MAP_NATIVE(UUIScript,execGetFilesInfoList)
	MAP_NATIVE(UUIScript,execRequestMoveToMerchant)
	MAP_NATIVE(UUIScript,execRefreshPrivateMarketInfo)
	MAP_NATIVE(UUIScript,execClearAllPrivateMarketInfo)
	MAP_NATIVE(UUIScript,execRequestChangeDiamondMesh)
	MAP_NATIVE(UUIScript,execRequestChangeParticleEmitter)
	MAP_NATIVE(UUIScript,execRequestSetSnowMeshScale)
	MAP_NATIVE(UUIScript,execRequestSetSnowSpeed)
	MAP_NATIVE(UUIScript,execRequestSetSnowEmitterParticleNum)
	MAP_NATIVE(UUIScript,execRequestSetSnowWeight)
	MAP_NATIVE(UUIScript,execRequestDeleteSnowEffect)
	MAP_NATIVE(UUIScript,execRequestCreateSnowEffect)
	MAP_NATIVE(UUIScript,execRequestSetRainMeshScale)
	MAP_NATIVE(UUIScript,execRequestSetRainSpeed)
	MAP_NATIVE(UUIScript,execRequestSetRainEmitterParticleNum)
	MAP_NATIVE(UUIScript,execRequestSetRainWeight)
	MAP_NATIVE(UUIScript,execRequestSetWeatherEffect)
	MAP_NATIVE(UUIScript,execRequestDeleteRainEffect)
	MAP_NATIVE(UUIScript,execRequestCreateRainEffect)
	MAP_NATIVE(UUIScript,execRequestBR_EventRankerList)
	MAP_NATIVE(UUIScript,execGetGameStateName)
	MAP_NATIVE(UUIScript,execRequestBuySellUIClose)
	MAP_NATIVE(UUIScript,execGetUseNewPetitionBool)
	MAP_NATIVE(UUIScript,execRequestShowStepThree)
	MAP_NATIVE(UUIScript,execRequestShowStepTwo)
	MAP_NATIVE(UUIScript,execRequestShowNewUserPetition)
	MAP_NATIVE(UUIScript,execRequestPostItemList)
	MAP_NATIVE(UUIScript,execRequestCancelSentPost)
	MAP_NATIVE(UUIScript,execRequestRequestSentPost)
	MAP_NATIVE(UUIScript,execRequestDeleteSentPost)
	MAP_NATIVE(UUIScript,execRequestRequestSentPostList)
	MAP_NATIVE(UUIScript,execRequestRejectPost)
	MAP_NATIVE(UUIScript,execRequestReceivePost)
	MAP_NATIVE(UUIScript,execRequestRequestReceivedPost)
	MAP_NATIVE(UUIScript,execRequestDeleteReceivedPost)
	MAP_NATIVE(UUIScript,execRequestRequestReceivedPostList)
	MAP_NATIVE(UUIScript,execRequestSendPost)
	MAP_NATIVE(UUIScript,execRequestRefundItem)
	MAP_NATIVE(UUIScript,execGetChatColorByType)
	MAP_NATIVE(UUIScript,execGetDominionFlagIconTex)
	MAP_NATIVE(UUIScript,execRequestDominionInfo)
	MAP_NATIVE(UUIScript,execRequestJoinDominionWar)
	MAP_NATIVE(UUIScript,execRequestStopShowCrataeCubeRank)
	MAP_NATIVE(UUIScript,execRequestStartShowCrataeCubeRank)
	MAP_NATIVE(UUIScript,execRequestWithDrawPremiumItem)
	MAP_NATIVE(UUIScript,execGetNicknameColorWithIndex)
	MAP_NATIVE(UUIScript,execGetMaxNicknameColorIndexCnt)
	MAP_NATIVE(UUIScript,execRequestChangeNicknameNColor)
	MAP_NATIVE(UUIScript,execChatNotificationFilter)
	MAP_NATIVE(UUIScript,execRequestPVPMatchRecord)
	MAP_NATIVE(UUIScript,execRequestFortressMapInfo)
	MAP_NATIVE(UUIScript,execRequestFortressSiegeInfo)
	MAP_NATIVE(UUIScript,execRequestAllAgitInfo)
	MAP_NATIVE(UUIScript,execRequestAllFortressInfo)
	MAP_NATIVE(UUIScript,execRequestAllCastleInfo)
	MAP_NATIVE(UUIScript,execCharacterCreateGetClassType)
	MAP_NATIVE(UUIScript,execCheckValidName)
	MAP_NATIVE(UUIScript,execCheckNameLength)
	MAP_NATIVE(UUIScript,execDefaultCharacterStop)
	MAP_NATIVE(UUIScript,execDefaultCharacterTurn)
	MAP_NATIVE(UUIScript,execSetCharacterStyle)
	MAP_NATIVE(UUIScript,execShowOnlyOneDefaultCharacter)
	MAP_NATIVE(UUIScript,execGetClassDescription)
	MAP_NATIVE(UUIScript,execExecLobbyEvent)
	MAP_NATIVE(UUIScript,execSetCurrentMakingRace)
	MAP_NATIVE(UUIScript,execShowAllDefaultCharacter)
	MAP_NATIVE(UUIScript,execSpawnDefaultCharacter)
	MAP_NATIVE(UUIScript,execClearDefaultCharacterInfo)
	MAP_NATIVE(UUIScript,execSetDefaultCharacter)
	MAP_NATIVE(UUIScript,execRequestPrevState)
	MAP_NATIVE(UUIScript,execRequestCreateCharacter)
	MAP_NATIVE(UUIScript,execSetSelectedCharacter)
	MAP_NATIVE(UUIScript,execIsDisciplineCharacter)
	MAP_NATIVE(UUIScript,execIsScheduledToDeleteCharacter)
	MAP_NATIVE(UUIScript,execResetCharacterPosition)
	MAP_NATIVE(UUIScript,execRequestDeleteCharacter)
	MAP_NATIVE(UUIScript,execRequestRestoreCharacter)
	MAP_NATIVE(UUIScript,execGetSelectedCharacterInfo)
	MAP_NATIVE(UUIScript,execRequestCharacterSelect)
	MAP_NATIVE(UUIScript,execStartGame)
	MAP_NATIVE(UUIScript,execGotoLogin)
	MAP_NATIVE(UUIScript,execCreateNewCharacter)
	MAP_NATIVE(UUIScript,execShowEnableTrackerBox)
	MAP_NATIVE(UUIScript,execExecuteAlign)
	MAP_NATIVE(UUIScript,execDeleteAttachedWindow)
	MAP_NATIVE(UUIScript,execClearTracker)
	MAP_NATIVE(UUIScript,execGetTrackerAttachedWindow)
	MAP_NATIVE(UUIScript,execGetTrackerAttachedWindowList)
	MAP_NATIVE(UUIScript,execShowExampleAnimation)
	MAP_NATIVE(UUIScript,execShowVirtualWindowBackground)
	MAP_NATIVE(UUIScript,execGetXMLControlIndex)
	MAP_NATIVE(UUIScript,execGetXMLControlString)
	MAP_NATIVE(UUIScript,execGetInterfaceDir)
	MAP_NATIVE(UUIScript,execInitCreditState)
	MAP_NATIVE(UUIScript,execShowMessageInLogin)
	MAP_NATIVE(UUIScript,execGetQuestLocation)
	MAP_NATIVE(UUIScript,execToggleMsnWindow)
	MAP_NATIVE(UUIScript,execGetManorNameInManorList)
	MAP_NATIVE(UUIScript,execGetManorIDInManorList)
	MAP_NATIVE(UUIScript,execGetManorCount)
	MAP_NATIVE(UUIScript,execRequestProcureCropList)
	MAP_NATIVE(UUIScript,execFishFinalAction)
	MAP_NATIVE(UUIScript,execInitFishViewportWnd)
	MAP_NATIVE(UUIScript,execRequestFishRanking)
	MAP_NATIVE(UUIScript,execGetSceneMusicCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneScreenCtrlHandle)
	MAP_NATIVE(UUIScript,execGetScenePcCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneNpcCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneCameraCtrlHandle)
	MAP_NATIVE(UUIScript,execGetCharacterViewportWindowHandle)
	MAP_NATIVE(UUIScript,execGetWindowHandle)
	MAP_NATIVE(UUIScript,execGetVideoPlayerCtrlHandle)
	MAP_NATIVE(UUIScript,execGetTreeHandle)
	MAP_NATIVE(UUIScript,execGetTextureHandle)
	MAP_NATIVE(UUIScript,execGetTextListBoxHandle)
	MAP_NATIVE(UUIScript,execGetTextBoxHandle)
	MAP_NATIVE(UUIScript,execGetTabHandle)
	MAP_NATIVE(UUIScript,execGetStatusIconHandle)
	MAP_NATIVE(UUIScript,execGetStatusBarHandle)
	MAP_NATIVE(UUIScript,execGetSliderCtrlHandle)
	MAP_NATIVE(UUIScript,execGetRadarMapCtrlHandle)
	MAP_NATIVE(UUIScript,execGetPropertyControllerHandle)
	MAP_NATIVE(UUIScript,execGetProgressCtrlHandle)
	MAP_NATIVE(UUIScript,execGetNameCtrlHandle)
	MAP_NATIVE(UUIScript,execGetMinimapCtrlHandle)
	MAP_NATIVE(UUIScript,execGetListCtrlHandle)
	MAP_NATIVE(UUIScript,execGetListBoxHandle)
	MAP_NATIVE(UUIScript,execGetItemWindowHandle)
	MAP_NATIVE(UUIScript,execGetHtmlHandle)
	MAP_NATIVE(UUIScript,execGetMultiEditBoxHandle)
	MAP_NATIVE(UUIScript,execGetEditBoxHandle)
	MAP_NATIVE(UUIScript,execGetDrawPanelHandle)
	MAP_NATIVE(UUIScript,execGetComboBoxHandle)
	MAP_NATIVE(UUIScript,execGetCheckBoxHandle)
	MAP_NATIVE(UUIScript,execGetChatWindowHandle)
	MAP_NATIVE(UUIScript,execGetButtonHandle)
	MAP_NATIVE(UUIScript,execGetBarHandle)
	MAP_NATIVE(UUIScript,execGetAnimTextureHandle)
	MAP_NATIVE(UUIScript,execFindHandle)
	MAP_NATIVE(UUIScript,execGetHandle)
	MAP_NATIVE(UUIScript,execRequestObserverModeEnd)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkill)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkillInfoDetail)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkillInfo)
	MAP_NATIVE(UUIScript,execRequestAcquireSkillSubClan)
	MAP_NATIVE(UUIScript,execRequestAcquireSkill)
	MAP_NATIVE(UUIScript,execRequestAcquireSkillInfo)
	MAP_NATIVE(UUIScript,execBeginBenchMark)
	MAP_NATIVE(UUIScript,execBeginPlay)
	MAP_NATIVE(UUIScript,execEraseReplayFile)
	MAP_NATIVE(UUIScript,execBeginReplay)
	MAP_NATIVE(UUIScript,execGetDirList)
	MAP_NATIVE(UUIScript,execGetFileList)
	MAP_NATIVE(UUIScript,execGetCharacterSelectionActor)
	MAP_NATIVE(UUIScript,execGetPlayerPosition)
	MAP_NATIVE(UUIScript,execGetPlayerActor)
	MAP_NATIVE(UUIScript,execSetChatMessage)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquip)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquipList)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquipInfo)
	MAP_NATIVE(UUIScript,execRequestHennaEquip)
	MAP_NATIVE(UUIScript,execRequestHennaItemList)
	MAP_NATIVE(UUIScript,execRequestHennaItemInfo)
	MAP_NATIVE(UUIScript,execGetLootingMethodName)
	MAP_NATIVE(UUIScript,execGetInZoneNameWithZoneID)
	MAP_NATIVE(UUIScript,execGetCurrentZoneID)
	MAP_NATIVE(UUIScript,execGetCurrentZoneName)
	MAP_NATIVE(UUIScript,execGetZoneNameWithZoneID)
	MAP_NATIVE(UUIScript,execRequestOpenMinimap)
	MAP_NATIVE(UUIScript,execStopSound)
	MAP_NATIVE(UUIScript,execPlaySound)
	MAP_NATIVE(UUIScript,execProcessCommandInterPartyChatMessage)
	MAP_NATIVE(UUIScript,execProcessCommandChatMessage)
	MAP_NATIVE(UUIScript,execProcessPartyMatchChatMessage)
	MAP_NATIVE(UUIScript,execProcessPetitionChatMessage)
	MAP_NATIVE(UUIScript,execProcessChatMessage)
	MAP_NATIVE(UUIScript,execSetItemTextLink)
	MAP_NATIVE(UUIScript,execReturnTooltipInfo)
	MAP_NATIVE(UUIScript,execSetOggVoiceVolume)
	MAP_NATIVE(UUIScript,execSetWavVoiceVolume)
	MAP_NATIVE(UUIScript,execSetMusicVolume)
	MAP_NATIVE(UUIScript,execSetSoundVolume)
	MAP_NATIVE(UUIScript,execGetConstantFloat)
	MAP_NATIVE(UUIScript,execGetConstantBool)
	MAP_NATIVE(UUIScript,execGetConstantString)
	MAP_NATIVE(UUIScript,execGetConstantInt)
	MAP_NATIVE(UUIScript,execSetINIString)
	MAP_NATIVE(UUIScript,execSetINIFloat)
	MAP_NATIVE(UUIScript,execSetINIInt)
	MAP_NATIVE(UUIScript,execSetINIBool)
	MAP_NATIVE(UUIScript,execGetINIString)
	MAP_NATIVE(UUIScript,execGetINIFloat)
	MAP_NATIVE(UUIScript,execGetINIInt)
	MAP_NATIVE(UUIScript,execGetINIBool)
	MAP_NATIVE(UUIScript,execRefreshINI)
	MAP_NATIVE(UUIScript,execRequestSaveInventoryOrder)
	MAP_NATIVE(UUIScript,execGetRaceTicketString)
	MAP_NATIVE(UUIScript,execGetLottoString)
	MAP_NATIVE(UUIScript,execIsMagicalArmor)
	MAP_NATIVE(UUIScript,execGetMagicalDefense)
	MAP_NATIVE(UUIScript,execGetPhysicalDefense)
	MAP_NATIVE(UUIScript,execGetShieldDefense)
	MAP_NATIVE(UUIScript,execGetAttackSpeedString)
	MAP_NATIVE(UUIScript,execGetMagicalDamage)
	MAP_NATIVE(UUIScript,execGetPhysicalDamage)
	MAP_NATIVE(UUIScript,execGetWeaponTypeString)
	MAP_NATIVE(UUIScript,execGetSlotTypeString)
	MAP_NATIVE(UUIScript,execGetInventoryItemCount)
	MAP_NATIVE(UUIScript,execGetOptionString)
	MAP_NATIVE(UUIScript,execGetOptionFloat)
	MAP_NATIVE(UUIScript,execGetOptionInt)
	MAP_NATIVE(UUIScript,execGetOptionBool)
	MAP_NATIVE(UUIScript,execSetOptionString)
	MAP_NATIVE(UUIScript,execSetOptionFloat)
	MAP_NATIVE(UUIScript,execSetOptionInt)
	MAP_NATIVE(UUIScript,execSetOptionBool)
	MAP_NATIVE(UUIScript,execStopMacro)
	MAP_NATIVE(UUIScript,execIsStackableItem)
	MAP_NATIVE(UUIScript,execUseSkill)
	MAP_NATIVE(UUIScript,execDoAction)
	MAP_NATIVE(UUIScript,execExecuteCommandFromAction)
	MAP_NATIVE(UUIScript,execExecuteCommand)
	MAP_NATIVE(UUIScript,execSetFixedDefaultCamera)
	MAP_NATIVE(UUIScript,execSetIgnorePartyInviting)
	MAP_NATIVE(UUIScript,execSetRenderCharacterCount)
	MAP_NATIVE(UUIScript,execSetShaderWaterEffect)
	MAP_NATIVE(UUIScript,execSetDepthBufferShadow)
	MAP_NATIVE(UUIScript,execSetDOF)
	MAP_NATIVE(UUIScript,execSetL2Shader)
	MAP_NATIVE(UUIScript,execSetWeatherEffect)
	MAP_NATIVE(UUIScript,execSetHDR)
	MAP_NATIVE(UUIScript,execSetReflectionEffect)
	MAP_NATIVE(UUIScript,execSetPawnClippingRange)
	MAP_NATIVE(UUIScript,execSetTerrainClippingRange)
	MAP_NATIVE(UUIScript,execSetBackgroundEffect)
	MAP_NATIVE(UUIScript,execSetShadow)
	MAP_NATIVE(UUIScript,execSetMotionDetail)
	MAP_NATIVE(UUIScript,execSetModelingDetail)
	MAP_NATIVE(UUIScript,execSetTextureDetail)
	MAP_NATIVE(UUIScript,execSetKeyCrypt)
	MAP_NATIVE(UUIScript,execSetDefaultPosition)
	MAP_NATIVE(UUIScript,execGetShaderVersion)
	MAP_NATIVE(UUIScript,execGetResolutionIndex)
	MAP_NATIVE(UUIScript,execGetMultiSample)
	MAP_NATIVE(UUIScript,execSetResolution)
	MAP_NATIVE(UUIScript,execGetRefreshRateList)
	MAP_NATIVE(UUIScript,execGetResolutionList)
	MAP_NATIVE(UUIScript,execGetLanguage)
	MAP_NATIVE(UUIScript,execIsEnableKeyCrypt)
	MAP_NATIVE(UUIScript,execIsCheckKeyCrypt)
	MAP_NATIVE(UUIScript,execIsUseKeyCrypt)
	MAP_NATIVE(UUIScript,execIsEnableEngSelection)
	MAP_NATIVE(UUIScript,execCanUseHDR)
	MAP_NATIVE(UUIScript,execCanUseJoystick)
	MAP_NATIVE(UUIScript,execCanUseAudio)
	MAP_NATIVE(UUIScript,execGetServerType)
	MAP_NATIVE(UUIScript,execGetServerNo)
	MAP_NATIVE(UUIScript,execGetServerAgeLimit)
	MAP_NATIVE(UUIScript,execExecQuit)
	MAP_NATIVE(UUIScript,execExecRestart)
	MAP_NATIVE(UUIScript,execEndSystemMessageParam)
	MAP_NATIVE(UUIScript,execAddSystemMessageParam)
	MAP_NATIVE(UUIScript,execAddSystemMessageString)
	MAP_NATIVE(UUIScript,execAddSystemMessage)
	MAP_NATIVE(UUIScript,execGetPrivateShopMessage)
	MAP_NATIVE(UUIScript,execSetPrivateShopMessage)
	MAP_NATIVE(UUIScript,execIsSameChatPrefix)
	MAP_NATIVE(UUIScript,execGetChatPrefix)
	MAP_NATIVE(UUIScript,execGetMaxLevel)
	MAP_NATIVE(UUIScript,execGetCurrentResolution)
	MAP_NATIVE(UUIScript,execGetClickLocation)
	MAP_NATIVE(UUIScript,execCheckItemLimit)
	MAP_NATIVE(UUIScript,execIsTriggerSkill)
	MAP_NATIVE(UUIScript,execIsSongDance)
	MAP_NATIVE(UUIScript,execIsDebuff)
	MAP_NATIVE(UUIScript,execGetRoutingString)
	MAP_NATIVE(UUIScript,execGetUserRankString)
	MAP_NATIVE(UUIScript,execRequestBypassToServer)
	MAP_NATIVE(UUIScript,execGetAllianceCrestTexFromAllianceCrestID)
	MAP_NATIVE(UUIScript,execGetPledgeCrestTexFromPledgeCrestID)
	MAP_NATIVE(UUIScript,execGetCurrentIMELang)
	MAP_NATIVE(UUIScript,execPlayConsoleSound)
	MAP_NATIVE(UUIScript,execGetNumericColor)
	MAP_NATIVE(UUIScript,execConvertTimeToString)
	MAP_NATIVE(UUIScript,execConvertNumToTextNoAdena)
	MAP_NATIVE(UUIScript,execConvertNumToText)
	MAP_NATIVE(UUIScript,execMakeCostString)
	MAP_NATIVE(UUIScript,execMakeCostStringINT64)
	MAP_NATIVE(UUIScript,execGetItemGradeTextureName)
	MAP_NATIVE(UUIScript,execGetItemGradeString)
	MAP_NATIVE(UUIScript,execMakeFullItemName)
	MAP_NATIVE(UUIScript,execNextStringWithWidth)
	MAP_NATIVE(UUIScript,execDivideStringWithWidth)
	MAP_NATIVE(UUIScript,execGetTextSize)
	MAP_NATIVE(UUIScript,execGetTextSizeDefault)
	MAP_NATIVE(UUIScript,execMakeFullSystemMsg)
	MAP_NATIVE(UUIScript,execGetScript)
	MAP_NATIVE(UUIScript,execGetSystemMessageWithParamNumber)
	MAP_NATIVE(UUIScript,execGetSystemMsgInfo)
	MAP_NATIVE(UUIScript,execGetSystemMessage)
	MAP_NATIVE(UUIScript,execGetSystemString)
	MAP_NATIVE(UUIScript,execIsKeyDown)
	MAP_NATIVE(UUIScript,execDebug)
	MAP_NATIVE(UUIScript,execConvertTimetoStr)
	MAP_NATIVE(UUIScript,execGetTimeString)
	MAP_NATIVE(UUIScript,execMakeTimeStr)
	MAP_NATIVE(UUIScript,execMakeBuffTimeStr)
	MAP_NATIVE(UUIScript,execGetTeleportFlagCount)
	MAP_NATIVE(UUIScript,execGetTeleportBookMarkCount)
	MAP_NATIVE(UUIScript,execGetAdena)
	MAP_NATIVE(UUIScript,execGetClanNameValue)
	MAP_NATIVE(UUIScript,execGetClanName)
	MAP_NATIVE(UUIScript,execIsBuilderPC)
	MAP_NATIVE(UUIScript,execGetClassStep)
	MAP_NATIVE(UUIScript,execGetDecoIndex)
	MAP_NATIVE(UUIScript,execGetAccessoryItemID)
	MAP_NATIVE(UUIScript,execGetSkillInfo)
	MAP_NATIVE(UUIScript,execGetPetInfo)
	MAP_NATIVE(UUIScript,execGetUserInfo)
	MAP_NATIVE(UUIScript,execGetTargetInfo)
	MAP_NATIVE(UUIScript,execGetPlayerInfo)
	MAP_NATIVE(UUIScript,execGetClassIconName)
	MAP_NATIVE(UUIScript,execGetClassStr)
	MAP_NATIVE(UUIScript,execGetClassType)
	MAP_NATIVE(UUIScript,execRequestInviteMpcc)
	MAP_NATIVE(UUIScript,execRequestInviteParty)
	MAP_NATIVE(UUIScript,execHasClanEmblem)
	MAP_NATIVE(UUIScript,execHasClanCrest)
	MAP_NATIVE(UUIScript,execGetCastleName)
	MAP_NATIVE(UUIScript,execRequestPCCafeCouponUse)
	MAP_NATIVE(UUIScript,execRequestClanMemberAuth)
	MAP_NATIVE(UUIScript,execRequestEditClanAuth)
	MAP_NATIVE(UUIScript,execRequestClanAuth)
	MAP_NATIVE(UUIScript,execRequestClanWarList)
	MAP_NATIVE(UUIScript,execRequestClanChangeNickName)
	MAP_NATIVE(UUIScript,execRequestAllianceRegisterCrestByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanUnregisterEmblem)
	MAP_NATIVE(UUIScript,execRequestClanRegisterEmblem)
	MAP_NATIVE(UUIScript,execRequestClanRegisterEmblemByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanUnregisterCrest)
	MAP_NATIVE(UUIScript,execRequestClanRegisterCrest)
	MAP_NATIVE(UUIScript,execRequestClanRegisterCrestByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanReorganizeMember)
	MAP_NATIVE(UUIScript,execRequestClanWithdrawWarWithClanName)
	MAP_NATIVE(UUIScript,execRequestClanWithdrawWar)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWarWithClanName)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWarWithUserID)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWar)
	MAP_NATIVE(UUIScript,execRequestClanAskJoin)
	MAP_NATIVE(UUIScript,execRequestClanExpelMember)
	MAP_NATIVE(UUIScript,execRequestClanLeave)
	MAP_NATIVE(UUIScript,execRequestClanDeletePupil)
	MAP_NATIVE(UUIScript,execRequestClanAssignPupil)
	MAP_NATIVE(UUIScript,execRequestClanChangeGrade)
	MAP_NATIVE(UUIScript,execRequestClanGradeList)
	MAP_NATIVE(UUIScript,execRequestClanMemberInfo)
	MAP_NATIVE(UUIScript,execGetPartyMemberLocationWithID)
	MAP_NATIVE(UUIScript,execGetPartyMemberLocation)
	MAP_NATIVE(UUIScript,execGetPartyMemberCount)
	MAP_NATIVE(UUIScript,execSendPrivateShopList)
	MAP_NATIVE(UUIScript,execRequestQuitPrivateShop)
	MAP_NATIVE(UUIScript,execRequestDispel)
	MAP_NATIVE(UUIScript,execRequestDuelSurrender)
	MAP_NATIVE(UUIScript,execRequestDuelAnswerStart)
	MAP_NATIVE(UUIScript,execRequestDuelStart)
	MAP_NATIVE(UUIScript,execRequestItemList)
	MAP_NATIVE(UUIScript,execRequestCrystallizeItem)
	MAP_NATIVE(UUIScript,execRequestUnequipItem)
	MAP_NATIVE(UUIScript,execRequestDropItem)
	MAP_NATIVE(UUIScript,execRequestDestroyItem)
	MAP_NATIVE(UUIScript,execRequestUseItem)
	MAP_NATIVE(UUIScript,execBR_RequestRestartPoint)
	MAP_NATIVE(UUIScript,execRequestRestartPoint)
	MAP_NATIVE(UUIScript,execRequestMultiSellChoose)
	MAP_NATIVE(UUIScript,execRequestBBSBoard)
	MAP_NATIVE(UUIScript,execRequestPreviewItem)
	MAP_NATIVE(UUIScript,execRequestPackageSend)
	MAP_NATIVE(UUIScript,execRequestPackageSendableItemList)
	MAP_NATIVE(UUIScript,execRequestChangePetName)
	MAP_NATIVE(UUIScript,execRequestWarehouseWithdraw)
	MAP_NATIVE(UUIScript,execRequestWarehouseDeposit)
	MAP_NATIVE(UUIScript,execRequestTargetUser)
	MAP_NATIVE(UUIScript,execRequestAssist)
	MAP_NATIVE(UUIScript,execRequestAction)
	MAP_NATIVE(UUIScript,execRequestAttack)
	MAP_NATIVE(UUIScript,execRequestSetCrop)
	MAP_NATIVE(UUIScript,execRequestSetSeed)
	MAP_NATIVE(UUIScript,execRequestBuySeed)
	MAP_NATIVE(UUIScript,execRequestBuyItem)
	MAP_NATIVE(UUIScript,execRequestSellItem)
	MAP_NATIVE(UUIScript,execAnswerTradeRequest)
	MAP_NATIVE(UUIScript,execRequestAddTradeItem)
	MAP_NATIVE(UUIScript,execRequestStartTrade)
	MAP_NATIVE(UUIScript,execRequestTradeDone)
	MAP_NATIVE(UUIScript,execRequestRaidRecord)
	MAP_NATIVE(UUIScript,execRequestSkillList)
	MAP_NATIVE(UUIScript,execRequestTargetCancel)
	MAP_NATIVE(UUIScript,execRequestSelfTarget)
	MAP_NATIVE(UUIScript,execRequestAuthCardKeyLogin)
	MAP_NATIVE(UUIScript,execRequestExit)
	MAP_NATIVE(UUIScript,execIsPKMode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIScript);

NATIVE_INFO(UGMAPI) GNWindowUGMAPINatives[] = 
{ 
	MAP_NATIVE(UGMAPI,execRequestSnoopEnd)
	MAP_NATIVE(UGMAPI,execGetObservingUserInfo)
	MAP_NATIVE(UGMAPI,execRequestGMCommand)
	MAP_NATIVE(UGMAPI,execBeginGMChangeServer)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGMAPI);

NATIVE_INFO(UGraphicAPI) GNWindowUGraphicAPINatives[] = 
{ 
	MAP_NATIVE(UGraphicAPI,execDoFResume)
	MAP_NATIVE(UGraphicAPI,execDoFPause)
	MAP_NATIVE(UGraphicAPI,execDoFSetEndDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetStartDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusLocation)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusPlayer)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusActor)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGraphicAPI);

NATIVE_INFO(UHennaAPI) GNWindowUHennaAPINatives[] = 
{ 
	MAP_NATIVE(UHennaAPI,execGetHennaInfo)
	MAP_NATIVE(UHennaAPI,execGetHennaInfoCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHennaAPI);

NATIVE_INFO(UHeroTowerAPI) GNWindowUHeroTowerAPINatives[] = 
{ 
	MAP_NATIVE(UHeroTowerAPI,execRequestHeroMatchRecord)
	MAP_NATIVE(UHeroTowerAPI,execRequestWriteHeroWords)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHeroTowerAPI);

NATIVE_INFO(UHtmlHandle) GNWindowUHtmlHandleNatives[] = 
{ 
	MAP_NATIVE(UHtmlHandle,execIsPageLock)
	MAP_NATIVE(UHtmlHandle,execSetPageLock)
	MAP_NATIVE(UHtmlHandle,execSetHtmlBuffData)
	MAP_NATIVE(UHtmlHandle,execControllerExecution)
	MAP_NATIVE(UHtmlHandle,execGetFrameMaxHeight)
	MAP_NATIVE(UHtmlHandle,execClear)
	MAP_NATIVE(UHtmlHandle,execLoadHtmlFromString)
	MAP_NATIVE(UHtmlHandle,execLoadHtml)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHtmlHandle);

NATIVE_INFO(UInputAPI) GNWindowUInputAPINatives[] = 
{ 
	MAP_NATIVE(UInputAPI,execGetInputKey)
	MAP_NATIVE(UInputAPI,execGetKeyString)
	MAP_NATIVE(UInputAPI,execIsAltPressed)
	MAP_NATIVE(UInputAPI,execIsCtrlPressed)
	MAP_NATIVE(UInputAPI,execIsShiftPressed)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UInputAPI);

NATIVE_INFO(UItemWindowHandle) GNWindowUItemWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UItemWindowHandle,execSetSelectedNum)
	MAP_NATIVE(UItemWindowHandle,execPushSideTypeNextBtn)
	MAP_NATIVE(UItemWindowHandle,execPushSideTypePrevBtn)
	MAP_NATIVE(UItemWindowHandle,execGetSideTypeCurPage)
	MAP_NATIVE(UItemWindowHandle,execGetSideTypePageNum)
	MAP_NATIVE(UItemWindowHandle,execFindItemByClassID)
	MAP_NATIVE(UItemWindowHandle,execSetItemUsability)
	MAP_NATIVE(UItemWindowHandle,execSetExpandItemNum)
	MAP_NATIVE(UItemWindowHandle,execSetCol)
	MAP_NATIVE(UItemWindowHandle,execSetRow)
	MAP_NATIVE(UItemWindowHandle,execSetDisableTex)
	MAP_NATIVE(UItemWindowHandle,execGetIndexAt)
	MAP_NATIVE(UItemWindowHandle,execSwapItems)
	MAP_NATIVE(UItemWindowHandle,execShowScrollBar)
	MAP_NATIVE(UItemWindowHandle,execSetFaded)
	MAP_NATIVE(UItemWindowHandle,execFindItemWithReserved)
	MAP_NATIVE(UItemWindowHandle,execFindItemWithAllProperty)
	MAP_NATIVE(UItemWindowHandle,execFindItem)
	MAP_NATIVE(UItemWindowHandle,execClear)
	MAP_NATIVE(UItemWindowHandle,execGetItem)
	MAP_NATIVE(UItemWindowHandle,execGetSelectedItem)
	MAP_NATIVE(UItemWindowHandle,execDeleteItem)
	MAP_NATIVE(UItemWindowHandle,execSetItem)
	MAP_NATIVE(UItemWindowHandle,execAddItemWithFaded)
	MAP_NATIVE(UItemWindowHandle,execAddItem)
	MAP_NATIVE(UItemWindowHandle,execClearSelect)
	MAP_NATIVE(UItemWindowHandle,execGetItemNum)
	MAP_NATIVE(UItemWindowHandle,execGetSelectedNum)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UItemWindowHandle);

NATIVE_INFO(UListBoxHandle) GNWindowUListBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UListBoxHandle,execSetMaxRow)
	MAP_NATIVE(UListBoxHandle,execSetDrawOffset)
	MAP_NATIVE(UListBoxHandle,execSetListBoxScrollPosition)
	MAP_NATIVE(UListBoxHandle,execGetSelectedString)
	MAP_NATIVE(UListBoxHandle,execAddStringWithData)
	MAP_NATIVE(UListBoxHandle,execClear)
	MAP_NATIVE(UListBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UListBoxHandle);

NATIVE_INFO(UListCtrlHandle) GNWindowUListCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UListCtrlHandle,execSetResizable)
	MAP_NATIVE(UListCtrlHandle,execSetHeaderTextOffset)
	MAP_NATIVE(UListCtrlHandle,execSetHeaderAlignment)
	MAP_NATIVE(UListCtrlHandle,execAdjustColumnWidth)
	MAP_NATIVE(UListCtrlHandle,execInitListCtrl)
	MAP_NATIVE(UListCtrlHandle,execGetRec)
	MAP_NATIVE(UListCtrlHandle,execGetSelectedRec)
	MAP_NATIVE(UListCtrlHandle,execModifyRecord)
	MAP_NATIVE(UListCtrlHandle,execShowScrollBar)
	MAP_NATIVE(UListCtrlHandle,execSetSelectedIndex)
	MAP_NATIVE(UListCtrlHandle,execGetSelectedIndex)
	MAP_NATIVE(UListCtrlHandle,execGetRecordCount)
	MAP_NATIVE(UListCtrlHandle,execDeleteRecord)
	MAP_NATIVE(UListCtrlHandle,execDeleteAllItem)
	MAP_NATIVE(UListCtrlHandle,execInsertRecord)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UListCtrlHandle);

NATIVE_INFO(UMacroAPI) GNWindowUMacroAPINatives[] = 
{ 
	MAP_NATIVE(UMacroAPI,execRequestMakeMacro)
	MAP_NATIVE(UMacroAPI,execRequestDeleteMacro)
	MAP_NATIVE(UMacroAPI,execRequestUseMacro)
	MAP_NATIVE(UMacroAPI,execRequestMacroList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMacroAPI);

NATIVE_INFO(UMiniMapAPI) GNWindowUMiniMapAPINatives[] = 
{ 
	MAP_NATIVE(UMiniMapAPI,execRequestSeedPhase)
	MAP_NATIVE(UMiniMapAPI,execRequestCursedWeaponLocation)
	MAP_NATIVE(UMiniMapAPI,execRequestCursedWeaponList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMiniMapAPI);

NATIVE_INFO(UMinimapCtrlHandle) GNWindowUMinimapCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UMinimapCtrlHandle,execSetContinent)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseAllRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execUpdateRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execAddRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteAllCursedWeaponIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execIsOverlapped)
	MAP_NATIVE(UMinimapCtrlHandle,execRequestReduceBtn)
	MAP_NATIVE(UMinimapCtrlHandle,execDrawGridIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execSetSSQStatus)
	MAP_NATIVE(UMinimapCtrlHandle,execSetShowQuest)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteAllTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execAddTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execAdjustMapView)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMinimapCtrlHandle);

NATIVE_INFO(UMultiEditBoxHandle) GNWindowUMultiEditBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UMultiEditBoxHandle,execSetString)
	MAP_NATIVE(UMultiEditBoxHandle,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMultiEditBoxHandle);

NATIVE_INFO(UNameCtrlHandle) GNWindowUNameCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UNameCtrlHandle,execGetName)
	MAP_NATIVE(UNameCtrlHandle,execSetNameWithColor)
	MAP_NATIVE(UNameCtrlHandle,execSetName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UNameCtrlHandle);

NATIVE_INFO(UOlympiadAPI) GNWindowUOlympiadAPINatives[] = 
{ 
	MAP_NATIVE(UOlympiadAPI,execRequestOlympiadMatchList)
	MAP_NATIVE(UOlympiadAPI,execRequestOlympiadObserverEnd)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UOlympiadAPI);

NATIVE_INFO(UPartyMatchAPI) GNWindowUPartyMatchAPINatives[] = 
{ 
	MAP_NATIVE(UPartyMatchAPI,execRequestMpccPartymasterList)
	MAP_NATIVE(UPartyMatchAPI,execRequestWithdrawMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestDismissMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestOustFromMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestManageMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestListMpccWaiting)
	MAP_NATIVE(UPartyMatchAPI,execRequestAskJoinPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestExitPartyMatchingWaitingRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestPartyMatchWaitList)
	MAP_NATIVE(UPartyMatchAPI,execRequestBanFromPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestWithdrawPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestDismissPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestManagePartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinPartyRoomAuto)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestPartyRoomList)
	MAP_NATIVE(UPartyMatchAPI,execRequestOpenPartyMatch)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPartyMatchAPI);

NATIVE_INFO(UPetAPI) GNWindowUPetAPINatives[] = 
{ 
	MAP_NATIVE(UPetAPI,execRequestGetItemFromPet)
	MAP_NATIVE(UPetAPI,execRequestGiveItemToPet)
	MAP_NATIVE(UPetAPI,execRequestPetUseItem)
	MAP_NATIVE(UPetAPI,execRequestPetInventoryItemList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPetAPI);

NATIVE_INFO(UPetitionAPI) GNWindowUPetitionAPINatives[] = 
{ 
	MAP_NATIVE(UPetitionAPI,execRequestPetitionFeedBack)
	MAP_NATIVE(UPetitionAPI,execRequestPetition)
	MAP_NATIVE(UPetitionAPI,execRequestPetitionCancel)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPetitionAPI);

NATIVE_INFO(UPostWndAPI) GNWindowUPostWndAPINatives[] = 
{ 
	MAP_NATIVE(UPostWndAPI,execRequestPledgeMemberList)
	MAP_NATIVE(UPostWndAPI,execRequestPostFriendList)
	MAP_NATIVE(UPostWndAPI,execRequestDeletingPostFriend)
	MAP_NATIVE(UPostWndAPI,execRequestAddingPostFriend)
	MAP_NATIVE(UPostWndAPI,execRequestFriendList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPostWndAPI);

NATIVE_INFO(UProgressCtrlHandle) GNWindowUProgressCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UProgressCtrlHandle,execSetBarTex)
	MAP_NATIVE(UProgressCtrlHandle,execSetBackTex)
	MAP_NATIVE(UProgressCtrlHandle,execStart)
	MAP_NATIVE(UProgressCtrlHandle,execResume)
	MAP_NATIVE(UProgressCtrlHandle,execStop)
	MAP_NATIVE(UProgressCtrlHandle,execReset)
	MAP_NATIVE(UProgressCtrlHandle,execSetPos)
	MAP_NATIVE(UProgressCtrlHandle,execSetProgressTime)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UProgressCtrlHandle);

NATIVE_INFO(UPropertyControllerHandle) GNWindowUPropertyControllerHandleNatives[] = 
{ 
	MAP_NATIVE(UPropertyControllerHandle,execGetItemStringValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemIntegerValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemBooleanValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemStringValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemIntegerValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemBooleanValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemType)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupVisible)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupExpandState)
	MAP_NATIVE(UPropertyControllerHandle,execAddGroup)
	MAP_NATIVE(UPropertyControllerHandle,execDeleteGroup)
	MAP_NATIVE(UPropertyControllerHandle,execGetGroupCheck)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupCheck)
	MAP_NATIVE(UPropertyControllerHandle,execGetGroupType)
	MAP_NATIVE(UPropertyControllerHandle,execUpdatePropertyGroup)
	MAP_NATIVE(UPropertyControllerHandle,execGetPropertyHeight)
	MAP_NATIVE(UPropertyControllerHandle,execClearValue)
	MAP_NATIVE(UPropertyControllerHandle,execClear)
	MAP_NATIVE(UPropertyControllerHandle,execSetProperty)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPropertyControllerHandle);

NATIVE_INFO(UQuestAPI) GNWindowUQuestAPINatives[] = 
{ 
	MAP_NATIVE(UQuestAPI,execSetQuestTargetInfo)
	MAP_NATIVE(UQuestAPI,execRequestDestroyQuest)
	MAP_NATIVE(UQuestAPI,execRequestQuestList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UQuestAPI);

NATIVE_INFO(URadarMapCtrlHandle) GNWindowURadarMapCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(URadarMapCtrlHandle,execSetMapInvisible)
	MAP_NATIVE(URadarMapCtrlHandle,execSetEnableRotation)
	MAP_NATIVE(URadarMapCtrlHandle,execSetMagnification)
	MAP_NATIVE(URadarMapCtrlHandle,execRequestObjectAround)
	MAP_NATIVE(URadarMapCtrlHandle,execUpdateObject)
	MAP_NATIVE(URadarMapCtrlHandle,execDeleteObject)
	MAP_NATIVE(URadarMapCtrlHandle,execAddObject)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URadarMapCtrlHandle);

NATIVE_INFO(URecipeAPI) GNWindowURecipeAPINatives[] = 
{ 
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopListSet)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMessageSet)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopManageQuit)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemDelete)
	MAP_NATIVE(URecipeAPI,execRequestRecipeBookOpen)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemMakeInfo)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemMakeSelf)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMakeDo)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopSellList)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMakeInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URecipeAPI);

NATIVE_INFO(URefineryAPI) GNWindowURefineryAPINatives[] = 
{ 
	MAP_NATIVE(URefineryAPI,execRequestRefineCancel)
	MAP_NATIVE(URefineryAPI,execConfirmCancelItem)
	MAP_NATIVE(URefineryAPI,execRequestRefine)
	MAP_NATIVE(URefineryAPI,execConfirmGemStone)
	MAP_NATIVE(URefineryAPI,execConfirmRefinerItem)
	MAP_NATIVE(URefineryAPI,execConfirmTargetItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URefineryAPI);

NATIVE_INFO(USceneCameraCtrlHandle) GNWindowUSceneCameraCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneCameraCtrlHandle,execSaveCameraData)
	MAP_NATIVE(USceneCameraCtrlHandle,execUpdateCameraData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneCameraCtrlHandle);

NATIVE_INFO(USceneEditorAPI) GNWindowUSceneEditorAPINatives[] = 
{ 
	MAP_NATIVE(USceneEditorAPI,execSaveCurSceneTimeAndDesc)
	MAP_NATIVE(USceneEditorAPI,execGetCurSceneTimeAndDesc)
	MAP_NATIVE(USceneEditorAPI,execSaveSceneData)
	MAP_NATIVE(USceneEditorAPI,execLoadSceneData)
	MAP_NATIVE(USceneEditorAPI,execCopyScene)
	MAP_NATIVE(USceneEditorAPI,execDeleteScene)
	MAP_NATIVE(USceneEditorAPI,execAddScene)
	MAP_NATIVE(USceneEditorAPI,execPlayScene)
	MAP_NATIVE(USceneEditorAPI,execInitSceneEditorData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneEditorAPI);

NATIVE_INFO(USceneMusicCtrlHandle) GNWindowUSceneMusicCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneMusicCtrlHandle,execSaveMusicData)
	MAP_NATIVE(USceneMusicCtrlHandle,execUpdateMusicData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneMusicCtrlHandle);

NATIVE_INFO(USceneNpcCtrlHandle) GNWindowUSceneNpcCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneNpcCtrlHandle,execSaveNpcData)
	MAP_NATIVE(USceneNpcCtrlHandle,execUpdateNpcData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneNpcCtrlHandle);

NATIVE_INFO(UScenePcCtrlHandle) GNWindowUScenePcCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UScenePcCtrlHandle,execSavePcData)
	MAP_NATIVE(UScenePcCtrlHandle,execUpdatePcData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UScenePcCtrlHandle);

NATIVE_INFO(USceneScreenCtrlHandle) GNWindowUSceneScreenCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneScreenCtrlHandle,execSaveScreenData)
	MAP_NATIVE(USceneScreenCtrlHandle,execUpdateScreenData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneScreenCtrlHandle);

NATIVE_INFO(UShortcutAPI) GNWindowUShortcutAPINatives[] = 
{ 
	MAP_NATIVE(UShortcutAPI,execClear)
	MAP_NATIVE(UShortcutAPI,execRestoreDefault)
	MAP_NATIVE(UShortcutAPI,execDeactivateAll)
	MAP_NATIVE(UShortcutAPI,execDeactivateGroup)
	MAP_NATIVE(UShortcutAPI,execActivateGroup)
	MAP_NATIVE(UShortcutAPI,execExecuteShortcutBySlot)
	MAP_NATIVE(UShortcutAPI,execRequestShortcutScriptData)
	MAP_NATIVE(UShortcutAPI,execRequestList)
	MAP_NATIVE(UShortcutAPI,execSave)
	MAP_NATIVE(UShortcutAPI,execUnlockShortcut)
	MAP_NATIVE(UShortcutAPI,execLockShortcut)
	MAP_NATIVE(UShortcutAPI,execGetAssignedKeyFromCommand)
	MAP_NATIVE(UShortcutAPI,execGetActiveGroupList)
	MAP_NATIVE(UShortcutAPI,execGetGroupList)
	MAP_NATIVE(UShortcutAPI,execGetGroupCommandList)
	MAP_NATIVE(UShortcutAPI,execAssignCommand)
	MAP_NATIVE(UShortcutAPI,execAssignSpecialKey)
	MAP_NATIVE(UShortcutAPI,execSetShortcutPage)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UShortcutAPI);

NATIVE_INFO(USiegeAPI) GNWindowUSiegeAPINatives[] = 
{ 
	MAP_NATIVE(USiegeAPI,execRequestSetCastleSiegeTime)
	MAP_NATIVE(USiegeAPI,execRequestConfirmCastleSiegeWaitingList)
	MAP_NATIVE(USiegeAPI,execRequestJoinCastleSiege)
	MAP_NATIVE(USiegeAPI,execRequestCastleSiegeDefenderList)
	MAP_NATIVE(USiegeAPI,execRequestCastleSiegeAttackerList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USiegeAPI);

NATIVE_INFO(USliderCtrlHandle) GNWindowUSliderCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USliderCtrlHandle,execIsMouseScrolling)
	MAP_NATIVE(USliderCtrlHandle,execSetTotalTickCount)
	MAP_NATIVE(USliderCtrlHandle,execGetTotalTickCount)
	MAP_NATIVE(USliderCtrlHandle,execSetCurrentTick)
	MAP_NATIVE(USliderCtrlHandle,execGetCurrentTick)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USliderCtrlHandle);

NATIVE_INFO(USSAOAPI) GNWindowUSSAOAPINatives[] = 
{ 
	MAP_NATIVE(USSAOAPI,execSSAO_BlurNormalDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_BlurDepthDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_BlurIntensity)
	MAP_NATIVE(USSAOAPI,execSSAO_SampleDistance)
	MAP_NATIVE(USSAOAPI,execSSAO_NoiseScale)
	MAP_NATIVE(USSAOAPI,execSSAO_DepthDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_FadeFront)
	MAP_NATIVE(USSAOAPI,execSSAO_MaxIntensity)
	MAP_NATIVE(USSAOAPI,execSSAO_Strength)
	MAP_NATIVE(USSAOAPI,execSSAO_Blend)
	MAP_NATIVE(USSAOAPI,execSSAO_Level)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USSAOAPI);

NATIVE_INFO(USSQAPI) GNWindowUSSQAPINatives[] = 
{ 
	MAP_NATIVE(USSQAPI,execRequestSSQStatus)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USSQAPI);

NATIVE_INFO(UStatusBarHandle) GNWindowUStatusBarHandleNatives[] = 
{ 
	MAP_NATIVE(UStatusBarHandle,execSetRegenInfo)
	MAP_NATIVE(UStatusBarHandle,execSetPointExpPercentRate)
	MAP_NATIVE(UStatusBarHandle,execSetPointPercent)
	MAP_NATIVE(UStatusBarHandle,execSetPoint)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatusBarHandle);

NATIVE_INFO(UStatusIconHandle) GNWindowUStatusIconHandleNatives[] = 
{ 
	MAP_NATIVE(UStatusIconHandle,execClear)
	MAP_NATIVE(UStatusIconHandle,execSetIconSize)
	MAP_NATIVE(UStatusIconHandle,execDelItem)
	MAP_NATIVE(UStatusIconHandle,execSetItem)
	MAP_NATIVE(UStatusIconHandle,execGetItem)
	MAP_NATIVE(UStatusIconHandle,execGetColCount)
	MAP_NATIVE(UStatusIconHandle,execGetRowCount)
	MAP_NATIVE(UStatusIconHandle,execInsertCol)
	MAP_NATIVE(UStatusIconHandle,execInsertRow)
	MAP_NATIVE(UStatusIconHandle,execAddCol)
	MAP_NATIVE(UStatusIconHandle,execAddRow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatusIconHandle);

NATIVE_INFO(UTabHandle) GNWindowUTabHandleNatives[] = 
{ 
	MAP_NATIVE(UTabHandle,execSetButtonName)
	MAP_NATIVE(UTabHandle,execMergeTab)
	MAP_NATIVE(UTabHandle,execSetDisable)
	MAP_NATIVE(UTabHandle,execGetTopIndex)
	MAP_NATIVE(UTabHandle,execSetTopOrder)
	MAP_NATIVE(UTabHandle,execInitTabCtrl)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTabHandle);

NATIVE_INFO(UTeamMatchAPI) GNWindowUTeamMatchAPINatives[] = 
{ 
	MAP_NATIVE(UTeamMatchAPI,execRequestExBlockGameVote)
	MAP_NATIVE(UTeamMatchAPI,execRequestExBlockGameEnter)
	MAP_NATIVE(UTeamMatchAPI,execRequestBlockGameAllData)
	MAP_NATIVE(UTeamMatchAPI,execRequestExCleftEnter)
	MAP_NATIVE(UTeamMatchAPI,execRequestCleftAllData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTeamMatchAPI);

NATIVE_INFO(UTextBoxHandle) GNWindowUTextBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UTextBoxHandle,execSetTooltipString)
	MAP_NATIVE(UTextBoxHandle,execSetInt)
	MAP_NATIVE(UTextBoxHandle,execSetAlign)
	MAP_NATIVE(UTextBoxHandle,execGetTextColor)
	MAP_NATIVE(UTextBoxHandle,execSetTextColor)
	MAP_NATIVE(UTextBoxHandle,execSetText)
	MAP_NATIVE(UTextBoxHandle,execGetText)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextBoxHandle);

NATIVE_INFO(UTreeHandle) GNWindowUTreeHandleNatives[] = 
{ 
	MAP_NATIVE(UTreeHandle,execSetNodeItemText)
	MAP_NATIVE(UTreeHandle,execShowScrollBar)
	MAP_NATIVE(UTreeHandle,execGetParentNode)
	MAP_NATIVE(UTreeHandle,execGetChildNode)
	MAP_NATIVE(UTreeHandle,execIsExpandedNode)
	MAP_NATIVE(UTreeHandle,execIsNodeNameExist)
	MAP_NATIVE(UTreeHandle,execDeleteNode)
	MAP_NATIVE(UTreeHandle,execGetExpandedNode)
	MAP_NATIVE(UTreeHandle,execSetExpandedNode)
	MAP_NATIVE(UTreeHandle,execClear)
	MAP_NATIVE(UTreeHandle,execInsertNodeItem)
	MAP_NATIVE(UTreeHandle,execInsertNode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTreeHandle);

NATIVE_INFO(UTutorialAPI) GNWindowUTutorialAPINatives[] = 
{ 
	MAP_NATIVE(UTutorialAPI,execRequestExSetTutorial)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTutorialAPI);

NATIVE_INFO(UUIAPI_BUTTON) GNWindowUUIAPI_BUTTONNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_BUTTON,execSetButtonName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_BUTTON);

NATIVE_INFO(UUIAPI_WINDOW) GNWindowUUIAPI_WINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_WINDOW,execGetSelectedRadioButtonName)
	MAP_NATIVE(UUIAPI_WINDOW,execClearAnchor)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAnchor)
	MAP_NATIVE(UUIAPI_WINDOW,execGetTooltipText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTooltipText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTooltipType)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTabOrder)
	MAP_NATIVE(UUIAPI_WINDOW,execSetResizeFrameSize)
	MAP_NATIVE(UUIAPI_WINDOW,execSetFrameSize)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSizeRel43)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSizeRel)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSize)
	MAP_NATIVE(UUIAPI_WINDOW,execIsFocused)
	MAP_NATIVE(UUIAPI_WINDOW,execSetFocus)
	MAP_NATIVE(UUIAPI_WINDOW,execNotifyAlarm)
	MAP_NATIVE(UUIAPI_WINDOW,execIconize)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveShake)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveEx)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveTo)
	MAP_NATIVE(UUIAPI_WINDOW,execMove)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAlpha)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAlwaysOnTop)
	MAP_NATIVE(UUIAPI_WINDOW,execIsEnableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execDisableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execEnableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowTitleByText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowTitle)
	MAP_NATIVE(UUIAPI_WINDOW,execKillUITimer)
	MAP_NATIVE(UUIAPI_WINDOW,execSetUITimer)
	MAP_NATIVE(UUIAPI_WINDOW,execGetRect)
	MAP_NATIVE(UUIAPI_WINDOW,execClear)
	MAP_NATIVE(UUIAPI_WINDOW,execHideWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execShowWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execIsMinimizedWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execIsShowWindow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_WINDOW);

NATIVE_INFO(UUIAPI_CHECKBOX) GNWindowUUIAPI_CHECKBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_CHECKBOX,execToggleDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execIsDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execIsChecked)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetCheck)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_CHECKBOX);

NATIVE_INFO(UUIAPI_COMBOBOX) GNWindowUUIAPI_COMBOBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddStringWithColor)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetNumOfItems)
	MAP_NATIVE(UUIAPI_COMBOBOX,execClear)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSetSelectedNum)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetSelectedNum)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetString)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSYS_AddStringWithReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddStringWithReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSYS_AddString)
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_COMBOBOX);

NATIVE_INFO(UUIAPI_EDITBOX) GNWindowUUIAPI_EDITBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_EDITBOX,execSetHighLight)
	MAP_NATIVE(UUIAPI_EDITBOX,execSetEditType)
	MAP_NATIVE(UUIAPI_EDITBOX,execClear)
	MAP_NATIVE(UUIAPI_EDITBOX,execSimulateBackspace)
	MAP_NATIVE(UUIAPI_EDITBOX,execAddString)
	MAP_NATIVE(UUIAPI_EDITBOX,execSetString)
	MAP_NATIVE(UUIAPI_EDITBOX,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_EDITBOX);

NATIVE_INFO(UUIAPI_EFFECTBUTTON) GNWindowUUIAPI_EFFECTBUTTONNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_EFFECTBUTTON,execBeginEffect)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_EFFECTBUTTON);

NATIVE_INFO(UUIAPI_INVENWEIGHT) GNWindowUUIAPI_INVENWEIGHTNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execZeroWeight)
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execReduceWeight)
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execAddWeight)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_INVENWEIGHT);

NATIVE_INFO(UUIAPI_ITEMWINDOW) GNWindowUUIAPI_ITEMWINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execShowScrollBar)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetFaded)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execFindItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execClear)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetSelectedItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execDeleteItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execAddItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execClearSelect)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetItemNum)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetSelectedNum)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_ITEMWINDOW);

NATIVE_INFO(UUIAPI_LISTCTRL) GNWindowUUIAPI_LISTCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_LISTCTRL,execShowScrollBar)
	MAP_NATIVE(UUIAPI_LISTCTRL,execSetSelectedIndex)
	MAP_NATIVE(UUIAPI_LISTCTRL,execGetSelectedIndex)
	MAP_NATIVE(UUIAPI_LISTCTRL,execGetRecordCount)
	MAP_NATIVE(UUIAPI_LISTCTRL,execDeleteRecord)
	MAP_NATIVE(UUIAPI_LISTCTRL,execDeleteAllItem)
	MAP_NATIVE(UUIAPI_LISTCTRL,execModifyRecord)
	MAP_NATIVE(UUIAPI_LISTCTRL,execInsertRecord)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_LISTCTRL);

NATIVE_INFO(UUIAPI_MINIMAPCTRL) GNWindowUUIAPI_MINIMAPCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteAllCursedWeaponIcon)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execIsOverlapped)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execRequestReduceBtn)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDrawGridIcon)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execSetSSQStatus)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execSetShowQuest)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteAllTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execAddTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execAdjustMapView)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MINIMAPCTRL);

NATIVE_INFO(UUIAPI_MULTIEDITBOX) GNWindowUUIAPI_MULTIEDITBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTIEDITBOX,execSetString)
	MAP_NATIVE(UUIAPI_MULTIEDITBOX,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTIEDITBOX);

NATIVE_INFO(UUIAPI_MULTISELLITEMINFO) GNWindowUUIAPI_MULTISELLITEMINFONatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTISELLITEMINFO,execClear)
	MAP_NATIVE(UUIAPI_MULTISELLITEMINFO,execSetItemInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTISELLITEMINFO);

NATIVE_INFO(UUIAPI_MULTISELLNEEDEDITEM) GNWindowUUIAPI_MULTISELLNEEDEDITEMNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTISELLNEEDEDITEM,execClear)
	MAP_NATIVE(UUIAPI_MULTISELLNEEDEDITEM,execAddData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTISELLNEEDEDITEM);

NATIVE_INFO(UUIAPI_SHORTCUTITEMWINDOW) GNWindowUUIAPI_SHORTCUTITEMWINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execClear)
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execUpdateShortcut)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_SHORTCUTITEMWINDOW);

NATIVE_INFO(UUIAPI_SLIDERCTRL) GNWindowUUIAPI_SLIDERCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execGetTotalTickCount)
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execSetCurrentTick)
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execGetCurrentTick)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_SLIDERCTRL);

NATIVE_INFO(UUIAPI_STATUSBARCTRL) GNWindowUUIAPI_STATUSBARCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetRegenInfo)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPointExpPercentRate)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPointPercent)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPoint)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_STATUSBARCTRL);

NATIVE_INFO(UUIAPI_STATUSICONCTRL) GNWindowUUIAPI_STATUSICONCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execClear)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execDelItem)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execGetItem)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execGetColCount)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execGetRowCount)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execInsertCol)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execInsertRow)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execAddCol)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execAddRow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_STATUSICONCTRL);

NATIVE_INFO(UUIAPI_TEXTBOX) GNWindowUUIAPI_TEXTBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetTooltipString)
	MAP_NATIVE(UUIAPI_TEXTBOX,execGetText)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetInt)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetAlign)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetText)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetTextColor)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTBOX);

NATIVE_INFO(UUIAPI_TEXTLISTBOX) GNWindowUUIAPI_TEXTLISTBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTLISTBOX,execClear)
	MAP_NATIVE(UUIAPI_TEXTLISTBOX,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTLISTBOX);

NATIVE_INFO(UUIAPI_TEXTURECTRL) GNWindowUUIAPI_TEXTURECTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execGetTextureName)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureWithObject)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureWithClanCrest)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureCtrlType)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTexture)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetUV)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTURECTRL);

NATIVE_INFO(UUIAPI_TREECTRL) GNWindowUUIAPI_TREECTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TREECTRL,execSetNodeItemText)
	MAP_NATIVE(UUIAPI_TREECTRL,execShowScrollBar)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetParentNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetChildNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execIsExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execIsNodeNameExist)
	MAP_NATIVE(UUIAPI_TREECTRL,execDeleteNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execSetExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execClear)
	MAP_NATIVE(UUIAPI_TREECTRL,execInsertNodeItem)
	MAP_NATIVE(UUIAPI_TREECTRL,execInsertNode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TREECTRL);

NATIVE_INFO(UUIDataManager) GNWindowUUIDataManagerNatives[] = 
{ 
	MAP_NATIVE(UUIDataManager,execGetEnableClassIndexList)
	MAP_NATIVE(UUIDataManager,execGetClassnameSysstringIndexByClassIndex)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDataManager);

NATIVE_INFO(UUIDATA_CLAN) GNWindowUUIDATA_CLANNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_CLAN,execGetSubClanSkillLevel)
	MAP_NATIVE(UUIDATA_CLAN,execGetSkillLevel)
	MAP_NATIVE(UUIDATA_CLAN,execRequestSubClanSkillList)
	MAP_NATIVE(UUIDATA_CLAN,execRequestClanSkillList)
	MAP_NATIVE(UUIDATA_CLAN,execRequestClanInfo)
	MAP_NATIVE(UUIDATA_CLAN,execGetNameValue)
	MAP_NATIVE(UUIDATA_CLAN,execGetAllianceCrestTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetEmblemTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetCrestTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetAllianceName)
	MAP_NATIVE(UUIDATA_CLAN,execGetName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_CLAN);

NATIVE_INFO(UUIDATA_GAMETIP) GNWindowUUIDATA_GAMETIPNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_GAMETIP,execGetDataByIndex)
	MAP_NATIVE(UUIDATA_GAMETIP,execGetDataCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_GAMETIP);

NATIVE_INFO(UUIDATA_HENNA) GNWindowUUIDATA_HENNANatives[] = 
{ 
	MAP_NATIVE(UUIDATA_HENNA,execGetIconTex)
	MAP_NATIVE(UUIDATA_HENNA,execGetDescription)
	MAP_NATIVE(UUIDATA_HENNA,execGetItemName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_HENNA);

NATIVE_INFO(UUIDATA_HUNTINGZONE) GNWindowUUIDATA_HUNTINGZONENatives[] = 
{ 
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingDescription)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZone)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneLoc)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetMaxLevel)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetMinLevel)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneType)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneName)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execIsValidData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_HUNTINGZONE);

NATIVE_INFO(UUIDATA_ITEM) GNWindowUUIDATA_ITEMNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_ITEM,execGetItemNameClass)
	MAP_NATIVE(UUIDATA_ITEM,execGetEtcItemTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemEnchantEffectDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemEffectDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemEnchantValue)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemID)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemFirstID)
	MAP_NATIVE(UUIDATA_ITEM,execIsExistSetItem)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemNum)
	MAP_NATIVE(UUIDATA_ITEM,execGetRefineryItemName)
	MAP_NATIVE(UUIDATA_ITEM,execIsCrystallizable)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemInfo)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemCrystalType)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemDataType)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemWeight)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemAdditionalName)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemName)
	MAP_NATIVE(UUIDATA_ITEM,execGetDataCount)
	MAP_NATIVE(UUIDATA_ITEM,execGetNextID)
	MAP_NATIVE(UUIDATA_ITEM,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_ITEM);

NATIVE_INFO(UUIDATA_MACRO) GNWindowUUIDATA_MACRONatives[] = 
{ 
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroCount)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_MACRO);

NATIVE_INFO(UUIDATA_NPC) GNWindowUUIDATA_NPCNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_NPC,execGetNpcProperty)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCName)
	MAP_NATIVE(UUIDATA_NPC,execIsValidData)
	MAP_NATIVE(UUIDATA_NPC,execGetNextID)
	MAP_NATIVE(UUIDATA_NPC,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_NPC);

NATIVE_INFO(UUIDATA_PARTY) GNWindowUUIDATA_PARTYNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PARTY,execGetMemberVirtualName)
	MAP_NATIVE(UUIDATA_PARTY,execMovePartyMember)
	MAP_NATIVE(UUIDATA_PARTY,execGetMemberName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PARTY);

NATIVE_INFO(UUIDATA_PAWNVIEWER) GNWindowUUIDATA_PAWNVIEWERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByID)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execExecuteSkill)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPlayBlendingAnim)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execBeginMixedAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execStopAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execIsPlayingAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPauseAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execResumeAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPlayAnimation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSelectedAnimationState)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUnlimitZoom)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execStopTime)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execL2Teleport)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execIsL2Seamless)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execExecuteCommand)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execRotateFace)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execChangeCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAttackTarget)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execToggleAttackMode)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSummonNewCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetItemTextureName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetItemMeshName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execEquipItem)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execDeletePC)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execStopSkill)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUseSkill)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execReserveTestPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execDestroyTestPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execReCreateTestPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execCreateTestPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetAppSecondsQPC)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddFaceTextureToComboBox)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUpdateHairMeshAndTextureInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetRearHairTextureString)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetFrontHairTextureString)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetIndexRearHairMeshUserData)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetIndexFrontHairMeshUserData)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetRearHairUserData)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetFrontHairUserData)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetMaxHairMesh)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execIsNPCPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddHairMeshToComboBox)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetPawnResourceSelectedCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetSelectedCharacterFaceStyle)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSelectedCharacterFaceStyle)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSelectedCharacterHairStyle)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSelectedCharacterHairColor)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddAnimationList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execLoadSelectedCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetPawnCurrentFrame)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetPawnFrameCount)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execRequestLoadAllItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PAWNVIEWER);

NATIVE_INFO(UUIDATA_PET) GNWindowUUIDATA_PETNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PET,execGetPetEXPRate)
	MAP_NATIVE(UUIDATA_PET,execGetIsPetOrSummoned)
	MAP_NATIVE(UUIDATA_PET,execGetPetCarringWeight)
	MAP_NATIVE(UUIDATA_PET,execGetPetCarryWeight)
	MAP_NATIVE(UUIDATA_PET,execGetPetMaxEXP)
	MAP_NATIVE(UUIDATA_PET,execGetPetMinEXP)
	MAP_NATIVE(UUIDATA_PET,execGetPetMaxFatigue)
	MAP_NATIVE(UUIDATA_PET,execGetPetMaxMP)
	MAP_NATIVE(UUIDATA_PET,execGetPetMaxHP)
	MAP_NATIVE(UUIDATA_PET,execGetPetEXP)
	MAP_NATIVE(UUIDATA_PET,execGetPetFatigue)
	MAP_NATIVE(UUIDATA_PET,execGetPetLevel)
	MAP_NATIVE(UUIDATA_PET,execGetPetSP)
	MAP_NATIVE(UUIDATA_PET,execGetPetMP)
	MAP_NATIVE(UUIDATA_PET,execGetPetHP)
	MAP_NATIVE(UUIDATA_PET,execGetPetID)
	MAP_NATIVE(UUIDATA_PET,execGetPetName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PET);

NATIVE_INFO(UUIDATA_PLAYER) GNWindowUUIDATA_PLAYERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PLAYER,execGetInventoryCount)
	MAP_NATIVE(UUIDATA_PLAYER,execGetInventoryLimit)
	MAP_NATIVE(UUIDATA_PLAYER,execHasCrystallizeAbility)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerEnvironment)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerMoveType)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerEXPRate)
	MAP_NATIVE(UUIDATA_PLAYER,execGetRecipeShopMsg)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerID)
	MAP_NATIVE(UUIDATA_PLAYER,execIsHero)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PLAYER);

NATIVE_INFO(UUIDATA_QUEST) GNWindowUUIDATA_QUESTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestReward)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestIscategory)
	MAP_NATIVE(UUIDATA_QUEST,execIsShowableItemNumQuest)
	MAP_NATIVE(UUIDATA_QUEST,execIsShowableJournalQuest)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestZone)
	MAP_NATIVE(UUIDATA_QUEST,execGetClearedQuest)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestType)
	MAP_NATIVE(UUIDATA_QUEST,execGetMaxLevel)
	MAP_NATIVE(UUIDATA_QUEST,execGetMinLevel)
	MAP_NATIVE(UUIDATA_QUEST,execGetIntro)
	MAP_NATIVE(UUIDATA_QUEST,execGetRequirement)
	MAP_NATIVE(UUIDATA_QUEST,execGetStartNPCID)
	MAP_NATIVE(UUIDATA_QUEST,execGetStartNPCLoc)
	MAP_NATIVE(UUIDATA_QUEST,execGetTargetName)
	MAP_NATIVE(UUIDATA_QUEST,execGetTargetLoc)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestItem)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestDescription)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestJournalName)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestName)
	MAP_NATIVE(UUIDATA_QUEST,execIsMinimapOnly)
	MAP_NATIVE(UUIDATA_QUEST,execIsValidData)
	MAP_NATIVE(UUIDATA_QUEST,execGetNextID)
	MAP_NATIVE(UUIDATA_QUEST,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_QUEST);

NATIVE_INFO(UUIDATA_RAID) GNWindowUUIDATA_RAIDNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_RAID,execGetRaidLoc)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidDescription)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterZone)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterLevel)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterID)
	MAP_NATIVE(UUIDATA_RAID,execIsValidData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_RAID);

NATIVE_INFO(UUIDATA_RECIPE) GNWindowUUIDATA_RECIPENatives[] = 
{ 
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeIsMultipleProduct)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeMaterialItemBy2Condition)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeDescriptionBy2Condition)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeIconNameBy2Condition)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeNameBy2Condition)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeMaterialItem)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeSuccessRate)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeDescription)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeLevel)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeMpConsume)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeCrystalType)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeProductNum)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeProductID)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeIconName)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeItemID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_RECIPE);

NATIVE_INFO(UUIDATA_REFINERYOPTION) GNWindowUUIDATA_REFINERYOPTIONNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_REFINERYOPTION,execGetOptionDescription)
	MAP_NATIVE(UUIDATA_REFINERYOPTION,execGetQuality)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_REFINERYOPTION);

NATIVE_INFO(UUIDATA_SKILL) GNWindowUUIDATA_SKILLNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_SKILL,execGetCastRange)
	MAP_NATIVE(UUIDATA_SKILL,execGetMpConsume)
	MAP_NATIVE(UUIDATA_SKILL,execGetHpConsume)
	MAP_NATIVE(UUIDATA_SKILL,execGetOperateType)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantIcon)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantSkillLevel)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantName)
	MAP_NATIVE(UUIDATA_SKILL,execGetDescription)
	MAP_NATIVE(UUIDATA_SKILL,execGetName)
	MAP_NATIVE(UUIDATA_SKILL,execGetIconName)
	MAP_NATIVE(UUIDATA_SKILL,execGetDataCount)
	MAP_NATIVE(UUIDATA_SKILL,execGetNextID)
	MAP_NATIVE(UUIDATA_SKILL,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_SKILL);

NATIVE_INFO(UUIDATA_STATICOBJECT) GNWindowUUIDATA_STATICOBJECTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetStaticObjectShowHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetStaticObjectName)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectMaxHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectType)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectNameID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_STATICOBJECT);

NATIVE_INFO(UUIDATA_TARGET) GNWindowUUIDATA_TARGETNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetActor)
	MAP_NATIVE(UUIDATA_TARGET,execIsVehicle)
	MAP_NATIVE(UUIDATA_TARGET,execIsHPShowableNPC)
	MAP_NATIVE(UUIDATA_TARGET,execIsCanBeAttacked)
	MAP_NATIVE(UUIDATA_TARGET,execIsPet)
	MAP_NATIVE(UUIDATA_TARGET,execIsNpc)
	MAP_NATIVE(UUIDATA_TARGET,execIsServerObject)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetClassID)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetPledgeID)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetNameColor)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetName)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMaxMP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetHP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMaxHP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetUserRank)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TARGET);

NATIVE_INFO(UUIDATA_TRANSFORM) GNWindowUUIDATA_TRANSFORMNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TRANSFORM,execGetNpcID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TRANSFORM);

NATIVE_INFO(UUIDATA_TUTORIALLIST) GNWindowUUIDATA_TUTORIALLISTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TUTORIALLIST,execCheckTutorial)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TUTORIALLIST);

NATIVE_INFO(UUIDATA_USER) GNWindowUUIDATA_USERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_USER,execGetClanType)
	MAP_NATIVE(UUIDATA_USER,execGetUserName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_USER);

NATIVE_INFO(UVehicleAPI) GNWindowUVehicleAPINatives[] = 
{ 
	MAP_NATIVE(UVehicleAPI,execAirShipMoveDown)
	MAP_NATIVE(UVehicleAPI,execAirShipMoveUp)
	MAP_NATIVE(UVehicleAPI,execRequestExAirShipTeleport)
	MAP_NATIVE(UVehicleAPI,execGetVehicle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UVehicleAPI);

NATIVE_INFO(UVideoPlayerCtrlHandle) GNWindowUVideoPlayerCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UVideoPlayerCtrlHandle,execFullScreen)
	MAP_NATIVE(UVideoPlayerCtrlHandle,execResize)
	MAP_NATIVE(UVideoPlayerCtrlHandle,execEndMovie)
	MAP_NATIVE(UVideoPlayerCtrlHandle,execPlayMovie)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UVideoPlayerCtrlHandle);

#endif // NATIVES_ONLY
#endif // __STATIC_LINK
